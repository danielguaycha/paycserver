{"version":3,"sources":["store/store.js","store/actions.js","config/user.service.js","config/config.js","store/actionsCreators.js","config/urls.js","components/_partials/hoc/WithAdmin.jsx","utils/utils.js","components/_partials/DrawerCustom.jsx","components/Master.jsx","utils/useGet.js","utils/useHttp.js","components/_partials/hoc/WithLoader.jsx","components/zone/ListZone.jsx","components/_partials/Alert.jsx","components/auth/Login.jsx","components/errors/NotConnected.jsx","components/employ/_form/FrmEmploy.jsx","components/employ/EditEmploy.jsx","components/employ/RegisterEmploy.jsx","components/errors/Forbidden.jsx","components/_partials/hoc/WithAdminContent.jsx","components/employ/ListEmploy.jsx","components/expenses/ShowExpense.jsx","components/expenses/_form/FrmExpense.jsx","components/expenses/RegisterExpense.jsx","components/employ/_partials/SelectEmploy.jsx","components/expenses/_partials/ExpenseFilter.jsx","components/expenses/_partials/ExpenseInfo.jsx","components/expenses/ListExpenses.jsx","components/zone/_form/FrmZone.jsx","components/zone/UpdateZone.jsx","components/zone/RegisterZone.jsx","components/payroll/DetailEmploy.jsx","components/payroll/_form/FrmPayRoll.jsx","components/payroll/RegisterPayRoll.jsx","components/payroll/RegisterPayRollUser.jsx","components/payroll/ShowPayRoll.jsx","components/payroll/ListPayRoll.jsx","components/client/_form/FrmClient.jsx","components/client/EditClient.jsx","components/_partials/CustomSearchRender.jsx","components/_partials/_modals/DlgConfirm.jsx","components/client/ListClient.jsx","components/client/RegisterClient.jsx","components/maps/WithMapKey.jsx","components/maps/MapViewLoc.jsx","components/maps/_dialog/DialogViewMapLoc.jsx","components/_partials/_modals/DlgInput.jsx","components/credit/_dialog/DlgListCredit.jsx","components/credit/_table/TableListCredit.jsx","components/credit/ListCredit.jsx","components/credit/_partials/BoxInfoCredit.jsx","components/credit/_partials/StatusCredit.jsx","components/credit/_partials/PayCobroCredit.jsx","components/credit/_partials/ClientDataCredit.jsx","components/_partials/TabPanel.jsx","components/_partials/_modals/DlgViewImg.jsx","components/_partials/_buttons/BtnShowImg.jsx","components/credit/_partials/_tabs/RefPrendaCredit.jsx","components/_partials/_modals/DlgViewLoc.jsx","components/_partials/_buttons/BtnShowLoc.jsx","components/employ/_partials/EmployByUser.jsx","components/employ/_dialog/DlgViewEmployUser.jsx","components/employ/_buttons/BtnPreviewEmploy.jsx","components/credit/_partials/DataCredit.jsx","components/payments/_dialogs/DlgCancelPayment.jsx","components/payments/_dialogs/DlgPayOrMora.jsx","components/payments/_partials/ViewParyments.jsx","components/credit/_skeleton/SkShowCredit.jsx","components/credit/ShowCredit.jsx","components/auth/_dialog/DlgPassword.jsx","components/auth/_buttons/BtnShowPasswordChange.jsx","components/auth/EditAuth.jsx","components/credit/HistoryClientCredit.jsx","components/zone/_partials/SelectZone.jsx","components/payments/_partials/SelectCobro.jsx","components/payments/_partials/SelectDate.jsx","components/payments/_partials/BtnsPayOptions.jsx","components/payments/_partials/PayItemCard.jsx","models/PayModel.js","components/payments/_map/PayMap.jsx","components/payments/_partials/PayCardOrMap.jsx","components/payments/PaymentList.jsx","config/routes.js","components/errors/NotFound.jsx","utils/auth/Protected.jsx","utils/auth/interceptors.js","App.jsx","serviceWorker.js","index.js"],"names":["initialStore","user","createStore","state","action","type","composeWithDevTools","token","localStorage","setItem","getItem","removeItem","window","location","href","undefined","server","api","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","success","info","warning","error","status","danger","tableOptions","filterType","download","print","selectableRowsOnClick","responsive","selectableRowsHeader","selectableRows","textLabels","body","noMatch","toolTip","columnHeaderTooltip","column","label","pagination","next","previous","rowsPerPage","displayRows","toolbar","search","downloadCsv","viewColumns","filterTable","filter","all","title","reset","titleAria","selectedRows","text","delete","deleteAria","tableMinOptions","sort","customFooter","setTableProps","padding","size","categories","asset","money","cantidad","currencyFormatter","format","code","cobros","name","value","addUser","toName","route","params","keys","Object","i","length","replace","connect","children","admin","root","userService","processErrors","err","response","data","msg","errors","message","toDate","date","moment","DrawerCustom","props","openSubmenu","employ","payroll","client","loader","this","history","pathname","toString","includes","openSubmenuNow","submenu","setState","Axios","get","then","res","ok","url","catch","toast","finally","className","classes","src","alt","height","Divider","List","ListItem","button","activeClassName","component","NavLink","to","ListItemIcon","LocalAtm","ListItemText","Icon","onClick","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","nested","exact","PersonAdd","AttachMoney","LocalAtmRounded","Button","variant","color","disabled","startIcon","Android","React","Component","withRouter","dispatch","removeUser","useTheme","container","makeStyles","display","paddingLeft","spacing","btnContent","flexGrow","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","drawerPaper","content","position","top","useStyles","useState","mobileOpen","setMobileOpen","anchorEl","setAnchorEl","handleDrawerToggle","renderMenuUser","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","Link","CssBaseline","AppBar","Toolbar","IconButton","aria-label","edge","aria-controls","aria-haspopup","event","currentTarget","Avatar","person","substring","Hidden","mdUp","implementation","Drawer","anchor","direction","paper","ModalProps","smDown","LinearProgress","useGet","setData","setLoader","setError","axios","console","log","config","useEffect","useHttp","method","formData","request","Promise","resolve","reject","options","baseURL","headers","WithLoader","elevation","Paper","CircularProgress","defaultProps","ListZone","zones","httpDelete","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","map","z","key","description","e","confirm","newZones","Alert","show","toLowerCase","setUser","username","password","login","setErr","onChange","target","push","Container","maxWidth","Typography","sizes","onSubmit","preventDefault","access_token","TextField","margin","required","fullWidth","autoComplete","autoFocus","WifiOff","Refresh","FrmEmploy","initialData","initialRoutes","showPassword","checked","values","setValues","routes","setRoutes","http","isChecked","indexOf","chk","Grid","item","xs","sm","toUpperCase","surname","address","phones","sueldo","InputLabel","Select","labelId","pago_sueldo","md","FormControl","htmlFor","Input","endAdornment","InputAdornment","FormControlLabel","control","Checkbox","advance","FormHelperText","style","marginTop","index","splice","redirect","EditEmploy","match","RegisterEmploy","ArrowBack","goBack","ListEmploy","employs","remove","columns","customBodyRender","customFilterListOptions","render","v","tableMeta","updateValue","Chip","changeStatus","rowData","ArrowDownward","ArrowUpward","deleteEmploy","employId","findIndex","d","ShowExpense","expense","readOnly","monto","category","multiline","rows","image","selectedDate","showImage","employ_id","FormData","append","placeholder","Autocomplete","freeSolo","o","renderInput","disableToolbar","autoOk","onChangeDate","KeyboardButtonProps","option","onChangeEmploy","getOptionLabel","justifyContent","flexDirection","accept","files","URL","createObjectURL","onChangeFile","RegisterExpense","SelectEmploy","onOpen","getEmploys","loading","loadingText","inputValue","onInputChange","r","selected","InputProps","Fragment","ExpenseFilter","onFilter","filters","onClearFilters","selectERef","useRef","marginBottom","alignItems","dateFrom","dateTo","ref","current","clone","weekday","BoxInfo","icon","ExpenseInfo","Skeleton","today","week","month","HeaderTitle","Add","ListExpenses","expenses","setExpenses","total","setTotal","cancel","align","setCellHeaderProps","setCellProps","Tooltip","cancelExpense","page","rowPerPage","setFilters","expenseId","prompt","p","getExpenses","count","serverSide","onTableChange","tableState","filterList","FrmZone","initialZone","UpdateZone","zone","RegisterZone","DetailEmploy","loadData","prevProps","prevState","snapshot","now","pays","credits","FrmPayRoll","amount","extra","bonus","discount","concept","httpStore","RegisterPayRoll","RegisterPayRollUser","ShowPayRoll","ListPayRoll","invalidatePay","selectedId","FrmClient","email","inputProps","maxLength","phones_b","EditClient","CustomSearchRender","handleTextChange","searchText","onKeyDown","keyCode","onHide","onHandleSearch","onSearch","document","addEventListener","removeEventListener","Grow","appear","el","rootRef","inputRef","searchField","Search","clearIcon","Clear","withStyles","flex","paddingTop","DlgConfirm","onConfirm","desc","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","ListClient","clients","selectClient","setSelectClient","dlgConfirm","setDlgConfirm","q","setQ","addSelectClient","deleteClient","clientId","customSearchRender","handleSearch","hideSearch","RegisterClient","Loading","WrappedComponent","GoogleApiWrapper","apiKey","LoadingContainer","MapViewLoc","google","initialCenter","lat","lng","lon","zoom","WithMapKey","DialogViewMapLoc","isOpen","fullScreen","useMediaQuery","down","DlgInput","inputLabel","setText","onEnter","DlgListCredit","forwardRef","credit","reqUpdate","dialogMap","setDialogMap","dialogInput","setDialogInput","dialogConfirm","setDialogConfirm","useImperativeHandle","openConfirm","openInput","openMap","geo_lon","geo_lat","ref_detail","parseFloat","motivo","warn","TableListCredit","personId","userId","searchable","dialog","setCredits","setCredit","getCredits","confirmCredit","creditId","end","cred","find","c","viewLoc","ListCredit","BoxInfoCredit","borderRadius","StatusCredit","severity","PayCobroCredit","plazo","cobro","ClientDataCredit","TabPanel","other","role","hidden","DlgViewImg","img","BtnShowImg","iconButton","openDialog","setOpenDialog","openDialogImg","Photo","RefPrendaCredit","ref_img","prenda","setValue","StyledTabs","newValue","StyledTab","a11yProps","colSpan","detail","backgroundColor","background","textTransform","fontWeight","typography","fontWeightRegular","fontSize","pxToRem","Tab","disableRipple","Tabs","TabIndicatorProps","DlgViewLoc","BtnShowLoc","NotListedLocation","EmployByUser","DlgViewEmployUser","BtnPreviewEmploy","DataCredit","f_inicio","f_fin","created_at","ruta","user_id","DlgCancelPayment","selectPay","DlgPayOrMora","mora","processPay","confirmPayOrMora","ViewPayments","pay","setOpen","setOpenInput","setOpenConfirm","setMora","selectUser","setSelectUser","setSelectPay","showUser","setPay","paymentId","electableRowsHeader","SKShowCredit","ShowCredit","utilidad","total_utilidad","n_pagos","client_name","client_surname","client_address","person_id","DlgPassword","password_now","handleClickShowPassword","BtnShowPasswordChange","EditAuth","HistoryClientCredit","SelectZone","getZones","SelectCobro","SelectDate","initialDate","hideToolbar","dateSelected","BtnsPayOptions","exec","HtmlTooltip","tooltip","border","Info","credit_id","Payment","Cancel","PayItemCard","number","client_id","upper","st","PayMap","payments","showingInfoWindow","activeMarker","selectedPlace","selectedPay","minHeight","store","PayModel","maps","Point","scaledSize","Size","m","marker","visible","PayCardOrMap","grid","dlgCancel","setDlgCancel","dlgPayMora","setDlgPayMora","isMora","setIsMora","lg","localGrid","setLocalGrid","onExecute","payload","s","INITIAL","PaymentList","getPays","diario","semanal","quincenal","mensual","onConfig","onFilters","initFilters","f","PaymentListConfig","handleClose","Settings","PayFilters","onClear","selectZRef","selectCRef","selectDRef","path","Login","NotConnected","private","Protected","rest","defaults","interceptors","use","Authorization","App","utils","MomentUtils","locale","closeButton","hideProgressBar","ThemeProvider","routeDef","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9afbb2ec.chunk.js","sourcesContent":["import { createStore } from 'redux'\r\nimport {ADD_USER, REMOVE_USER} from \"./actions\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\n\r\n// init state\r\nconst initialStore = {\r\n    user: null,\r\n};\r\n\r\n// Reducer\r\nconst rootReducer = (state = initialStore, action) => {\r\n    switch (action.type) {\r\n        case ADD_USER:\r\n            return {\r\n                user: action.user\r\n            };\r\n        case REMOVE_USER:\r\n            return {\r\n                user: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default createStore(rootReducer, composeWithDevTools());","export const ADD_USER = 'ADD_USER';\r\nexport const REMOVE_USER = 'REMOVE_USER';","export default {\r\n\r\n    setSession({ token }) {\r\n        localStorage.setItem('token',token);\r\n    },\r\n\r\n    clearSession() {\r\n        if(localStorage.getItem('token')) {\r\n            localStorage.removeItem('token');\r\n            window.location.href = \"/login\";\r\n        }\r\n    },\r\n\r\n    getToken() {\r\n        return (localStorage.getItem('token') === undefined ? null : localStorage.getItem('token'));\r\n    },\r\n\r\n}\r\n","import {createMuiTheme} from \"@material-ui/core\";\r\nimport currencyFormatter from 'currency-formatter';\r\n\r\nimport React from \"react\";\r\nconst ip = '192.168.1.60';\r\nlet server = `http://${ip}:80`;\r\n\r\n// Function\r\nconst getUrl = () => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n        return '';\r\n    } else {\r\n        return `http://${ip}:80`;\r\n    }\r\n}\r\n\r\n\r\nexport default {\r\n    api: `${getUrl()}/api`,\r\n}\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#334753',\r\n            main: '#001a28',\r\n            dark: '#00121c',\r\n            contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n            light: '#ffac33',\r\n            main: '#ff9800',\r\n            dark: '#ff5722',\r\n            contrastText: '#fff',\r\n        },\r\n        success: {\r\n            main : \"#bac778\",\r\n        },\r\n        info: {\r\n            main : \"#75c7b9\",\r\n        },\r\n        warning: {\r\n            main : \"#c7925d\",\r\n        },\r\n\r\n        error: {\r\n            main : \"#e36570\",\r\n        },\r\n    },\r\n    status: {\r\n        danger: 'orange',\r\n    },\r\n});\r\n\r\nexport const tableOptions = {\r\n    filterType: \"checkbox\",\r\n    download: false,\r\n    print: false,\r\n    selectableRowsOnClick: false,\r\n    responsive: \"stacked\",\r\n    selectableRowsHeader: false,\r\n    selectableRows: 'none',\r\n    textLabels: {\r\n        body: {\r\n            noMatch: \"No se encontró coincidencias\",\r\n            toolTip: \"Ordenar\",\r\n            columnHeaderTooltip: column => `Ordenar Por: ${column.label}`\r\n        },\r\n        pagination: {\r\n            next: \"Siguiente\",\r\n            previous: \"Anterior\",\r\n            rowsPerPage: \"# Filas\",\r\n            displayRows: \"de\",\r\n        },\r\n        toolbar: {\r\n            search: \"Buscar\",\r\n            downloadCsv: \"Descargar CSV\",\r\n            print: \"Imprimir\",\r\n            viewColumns: \"Ver Columnas\",\r\n            filterTable: \"Filtrar Tabla\",\r\n        },\r\n        filter: {\r\n            all: \"Todo\",\r\n            title: \"FILTROS\",\r\n            reset: \"RESETEAR\",\r\n        },\r\n        viewColumns: {\r\n            title: \"Mostrar Columnas\",\r\n            titleAria: \"Mostrar/Ocultar Columnas\",\r\n        },\r\n        selectedRows: {\r\n            text: \"fila(s) seleccionadas\",\r\n            delete: \"Eliminar\",\r\n            deleteAria: \"Eliminar filas seleccionadas\",\r\n        },\r\n    }\r\n};\r\n\r\nexport const tableMinOptions = {\r\n    selectableRowsHeader: false,\r\n    filter: false,\r\n    search: false,\r\n    sort: false,\r\n    download: false,\r\n    print: false,\r\n    viewColumns: false,\r\n    selectableRows: 'none',\r\n    customFooter: () => {\r\n        return <></>;\r\n    },\r\n    setTableProps: () => {\r\n        return {\r\n            padding: \"default\" ,\r\n            size: \"small\"\r\n        };\r\n    }\r\n};\r\n\r\nexport const categories = [\r\n    'COMIDA',\r\n    'COMBUSTIBLE',\r\n    'PAGO DE SERVICIO',\r\n    'SERVICIO BÁSICO',\r\n    'OTROS PAGOS',\r\n    'OTRO'\r\n];\r\n\r\nexport const asset = (asset) => {\r\n  return `${server}/api/image/${asset}`;\r\n};\r\n\r\nexport const money  = (cantidad) => {\r\n    return currencyFormatter.format(cantidad, {code: 'USD'});\r\n};\r\n\r\nexport const cobros = [\r\n    {name: 'DIARIO', value: 'Diario'},\r\n    {name: 'SEMANAL', value: 'Semanal'},\r\n    {name: 'QUINCENAL', value: 'Quincenal'},\r\n    {name: 'MENSUAL', value: 'Mensual'},\r\n];\r\n\r\nexport const plazos = [\r\n    {name: 'SEMANAL', value: 'Semanal'},\r\n    {name: 'QUINCENAL', value: 'Quincenal'},\r\n    {name: 'MENSUAL', value: 'Mensual'},\r\n    {name: 'MES_Y_MEDIO', value: 'Mes y medio'},\r\n    {name: 'DOS_MESES', value: 'Dos meses'}\r\n];\r\n\r\n\r\n\r\n\r\n\r\n","import {ADD_USER, REMOVE_USER} from \"./actions\";\r\n\r\nconst addUser = (user) => ({\r\n    type: ADD_USER,\r\n    user\r\n});\r\n\r\nconst removeUser = () => ({\r\n    type: REMOVE_USER\r\n});\r\n\r\nexport {addUser, removeUser};","export const HOME = '/';\r\nexport const LOGIN = '/login';\r\nexport const LOGIN_REDIRECT = '/credit';\r\nexport const NOT_CONNECTED = '/not_connected';\r\n\r\n// USER\r\nexport const USER_EDIT = '/user';\r\n\r\n//EMPLOY\r\nexport const EMPLOY_EDIT = '/empleado/:id/edit';\r\nexport const EMPLOY_ADD = '/empleado/add';\r\nexport const EMPLOY_LIST = '/empleado';\r\n\r\n//EXPENSES\r\nexport const EXPENSE_ADD = '/expense/add';\r\nexport const EXPENSE_LIST = '/expense';\r\nexport const EXPENSE_SHOW = '/expense/view/:id';\r\n\r\n//ZONES\r\nexport const ZONE_EDIT = '/ruta/:id/edit';\r\nexport const ZONE_ADD = '/ruta/add';\r\nexport const ZONE_LIST = '/ruta';\r\n\r\n//CLIENTS\r\nexport const CLIENT_EDIT = '/cliente/:id/edit';\r\nexport const CLIENT_ADD = '/cliente/add';\r\nexport const CLIENT_LIST = '/client';\r\n\r\n//PAYROLLS\r\nexport const PAYROLL_LIST = '/payroll';\r\nexport const PAYROLL_ADD = '/payroll/add';\r\nexport const PAYROLL_ADD_USER = '/payroll/add/:id';\r\nexport const PAYROLL_SHOW = '/payroll/:id';\r\n\r\n//CREDITS\r\nexport const CREDIT_LIST = '/credit';\r\nexport const CREDIT_BY_CLIENT = '/credit/client/:id';\r\nexport const CREDIT_SHOW = '/credit/view/:id';\r\n\r\n//PAYMENTS\r\nexport const PAYMENT_LIST = '/payment';\r\n\r\nexport const toName = (route, params) => {\r\n    const keys = Object.keys(params);\r\n    for(let i = 0; i<keys.length; i++) {\r\n        route = route.replace(`:${keys[i]}`, params[keys[i]]);\r\n    }\r\n    return route;\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport userService from '../../../config/user.service';\r\n\r\nconst WithAdmin = ({user, children}) => {\r\n\r\n    return (<>\r\n        {((user.admin || user.root) && userService.getToken()) ? children: <></>}\r\n    </>)\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(WithAdmin);\r\n","import moment from \"moment\";\r\nexport const processErrors = (err) => {\r\n    if(err.response && err.response.data){\r\n        let msg = '';\r\n        let response = err.response.data;\r\n\r\n        if (response.errors) {\r\n            for (let i = 0; i<response.errors.length; i++){\r\n                msg +=(response.errors[i][0])+',';\r\n            }\r\n            msg+='**';\r\n            msg = msg.replace(',**', '');\r\n        }\r\n\r\n        else if(response.message) {\r\n            msg = response.message;\r\n        }\r\n\r\n        else if(response.error) {\r\n            msg = response.error;\r\n        }\r\n\r\n        else {\r\n            msg = 'Error desconocido, contacte a soporte';\r\n        }\r\n        return(msg);\r\n    }\r\n    else if(err.message) {\r\n        return(err.message);\r\n    }\r\n    else return 'Upps! el servidor no ha respondido como se esperaba, contacte a soporte!';\r\n};\r\n\r\nexport const toDate = (date) => {\r\n    if (!date) return '--/--/----';\r\n    return moment(date).format('DD/MMMM/Y')\r\n};\r\n\r\nexport const toDateHour = (date) => {\r\n    if (!date) return '--/--/----';\r\n    return moment(date).format('DD/MMMM/Y - H:mm')\r\n};\r\n","import React from 'react';\r\nimport {Collapse, Divider, Icon, List, ListItem, Button ,ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport {NavLink, withRouter} from \"react-router-dom\";\r\nimport {\r\n    CLIENT_LIST, CREDIT_LIST,\r\n    EMPLOY_ADD,\r\n    EMPLOY_LIST,\r\n    EXPENSE_LIST, PAYMENT_LIST,\r\n    PAYROLL_ADD,\r\n    PAYROLL_LIST,\r\n    ZONE_LIST\r\n} from \"../../config/urls\";\r\nimport WithAdmin from \"./hoc/WithAdmin\";\r\nimport {Android} from \"@material-ui/icons\";\r\nimport {AttachMoney, ExpandLess, ExpandMore, PersonAdd, LocalAtmRounded, LocalAtm} from \"@material-ui/icons\";\r\nimport Axios from \"axios\";\r\nimport {processErrors} from \"../../utils/utils\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nclass DrawerCustom extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openSubmenu: {\r\n                employ: false,\r\n                payroll: false,\r\n                client: false\r\n            },\r\n            loader: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.history.location.pathname.toString().includes(EMPLOY_LIST) && !this.state.openSubmenu.employ){\r\n            this.openSubmenuNow('employ');\r\n        }\r\n\r\n        if(this.props.history.location.pathname.toString().includes(PAYROLL_LIST) && !this.state.openSubmenu.payroll){\r\n            this.openSubmenuNow('payroll');\r\n        }\r\n    }\r\n\r\n    openSubmenuNow (submenu) {\r\n        this.setState({\r\n            openSubmenu: {\r\n                [submenu]: !this.state.openSubmenu[submenu]\r\n            }\r\n        });\r\n    };\r\n\r\n    download () {\r\n        this.setState({...this.state, loader: true});\r\n        Axios.get('/updates/last').then(res => {\r\n            if (res.ok) {\r\n                window.location.href = res.data.url;\r\n            }\r\n        }).catch(err => toast.error(processErrors(err)))\r\n            .finally(() => this.setState({...this.state, loader: false}))\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={this.props.classes.toolbar}>\r\n                    <div className=\"toolbar-custom\">\r\n                        <img src={\"/img/payicon.png\"} alt=\"PayCenter\" height={40}/>\r\n                        <h5>AdminDashboard</h5>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n\r\n                    <ListItem button activeClassName={'active'} component={NavLink} to={PAYMENT_LIST} >\r\n                        <ListItemIcon><LocalAtm/></ListItemIcon>\r\n                        <ListItemText primary='Cobros' />\r\n                    </ListItem>\r\n\r\n                    <ListItem button activeClassName={'active'} component={NavLink} to={CREDIT_LIST} >\r\n                        <ListItemIcon><Icon>monetization_on</Icon></ListItemIcon>\r\n                        <ListItemText primary='Créditos' />\r\n                    </ListItem>\r\n\r\n                    {/*Zonas*/}\r\n\r\n                    <ListItem button activeClassName={'active'} component={NavLink} to={ZONE_LIST} >\r\n                        <ListItemIcon><Icon>map</Icon></ListItemIcon>\r\n                        <ListItemText primary='Rutas/Zonas' />\r\n                    </ListItem>\r\n\r\n                    {/*Clientes*/}\r\n\r\n                    <ListItem button activeClassName={'active'} component={NavLink} to={CLIENT_LIST} >\r\n                        <ListItemIcon><Icon>people_alt</Icon></ListItemIcon>\r\n                        <ListItemText primary='Clientes' />\r\n                    </ListItem>\r\n\r\n\r\n\r\n                    {/*Admin Routes*/}\r\n                    <WithAdmin>\r\n                        {/*Empleados*/}\r\n                        <>\r\n                            <ListItem button onClick={ () => this.openSubmenuNow('employ')}>\r\n                                <ListItemIcon><Icon>group</Icon></ListItemIcon>\r\n                                <ListItemText primary='Empleados' />\r\n                                {this.state.openSubmenu.employ ? <ExpandLess /> : <ExpandMore />}\r\n                            </ListItem>\r\n\r\n                            <Collapse in={this.state.openSubmenu.employ} timeout=\"auto\" unmountOnExit>\r\n                                <List component=\"div\" disablePadding>\r\n                                    {/*Agregar Empleados*/}\r\n                                    <ListItem button className={this.props.classes.nested} activeClassName={'active'}\r\n                                              exact\r\n                                              component={NavLink} to={EMPLOY_LIST}>\r\n                                        <ListItemIcon>\r\n                                            <Icon>list</Icon>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Listar\" />\r\n                                    </ListItem>\r\n\r\n                                    <ListItem button className={this.props.classes.nested} activeClassName={'active'}\r\n                                              exact\r\n                                              component={NavLink} to={EMPLOY_ADD}>\r\n                                        <ListItemIcon>\r\n                                            <PersonAdd />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Agregar\" />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </Collapse>\r\n                        </>\r\n\r\n                        {/*Roles de Pago*/}\r\n                        <>\r\n                            <ListItem button onClick={ () => this.openSubmenuNow('payroll')}>\r\n                                <ListItemIcon><AttachMoney/></ListItemIcon>\r\n                                <ListItemText primary='Sueldo/Salario' />\r\n                                {this.state.openSubmenu.payroll ? <ExpandLess /> : <ExpandMore />}\r\n                            </ListItem>\r\n\r\n                            <Collapse in={this.state.openSubmenu.payroll} timeout=\"auto\" unmountOnExit>\r\n                                <List component=\"div\" disablePadding>\r\n                                    {/*Agregar Empleados*/}\r\n                                    <ListItem button className={this.props.classes.nested} activeClassName={'active'}\r\n                                              exact\r\n                                              component={NavLink} to={PAYROLL_LIST}>\r\n                                        <ListItemIcon>\r\n                                            <Icon>list</Icon>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Listar\" />\r\n                                    </ListItem>\r\n\r\n                                    <ListItem button className={this.props.classes.nested} activeClassName={'active'}\r\n                                              exact\r\n                                              component={NavLink} to={PAYROLL_ADD}>\r\n                                        <ListItemIcon>\r\n                                            <LocalAtmRounded />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Pagar\" />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </Collapse>\r\n                        </>\r\n                    </WithAdmin>\r\n\r\n                    {/*Gastos*/}\r\n                    <ListItem button activeClassName={'active'} component={NavLink} to={EXPENSE_LIST} >\r\n                        <ListItemIcon><Icon>local_atm</Icon></ListItemIcon>\r\n                        <ListItemText primary='Gastos' />\r\n                    </ListItem>\r\n\r\n                    <Divider  />\r\n                    <br/>\r\n                    <div className={'text-center'}>\r\n                        <Button\r\n                            variant=\"text\"\r\n                            color=\"primary\"\r\n                            disabled={this.state.loader}\r\n                            startIcon={<Android />} onClick={() => this.download()}>\r\n                            { this.state.loader ? 'Generando...' : 'Descargar App'}\r\n                        </Button>\r\n                    </div>\r\n\r\n                </List>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default withRouter(DrawerCustom);\r\n","import React from 'react';\r\nimport {\r\n    CssBaseline,\r\n    Drawer,\r\n    LinearProgress,\r\n    Button,\r\n    AppBar,\r\n    makeStyles,\r\n    Toolbar,\r\n    Avatar,\r\n    Icon,\r\n    useTheme,\r\n    Hidden, Menu, MenuItem\r\n} from \"@material-ui/core\";\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport userService from '../config/user.service';\r\nimport {removeUser} from \"../store/actionsCreators\";\r\nimport DrawerCustom from \"./_partials/DrawerCustom\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {USER_EDIT} from \"../config/urls\";\r\n\r\nconst Master = (props) => {\r\n    const drawerWidth = 250;\r\n    const barHeight = 55;\r\n    const theme = useTheme();\r\n    const { container } = props;\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        nested: {\r\n            paddingLeft: theme.spacing(3),\r\n        },\r\n        btnContent: {\r\n            flexGrow: 1,\r\n        },\r\n        drawer: {\r\n            [theme.breakpoints.up('md')]: {\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n            },\r\n        },\r\n        appBar: {\r\n            height: barHeight,\r\n            [theme.breakpoints.up('md')]: {\r\n                width: `calc(100% - ${drawerWidth}px)`,\r\n                marginLeft: drawerWidth,\r\n            },\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n        toolbar: {\r\n          height: barHeight\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n            position: 'relative',\r\n            top: barHeight\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n\r\n    const handleMenuClick = event => { setAnchorEl(event.currentTarget);};\r\n    const handleMenuClose = () => {setAnchorEl(null);};\r\n    const handleDrawerToggle = () => {setMobileOpen(!mobileOpen);};\r\n\r\n    const logout = () => {\r\n        props.removeUser();\r\n        userService.clearSession();\r\n    };\r\n\r\n    const renderMenuUser = (\r\n        <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleMenuClose}>\r\n            <MenuItem component={Link} to={USER_EDIT}>Mis datos</MenuItem>\r\n            <MenuItem onClick={logout}>Cerrar Sesión</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {props.user\r\n                ?\r\n                <div className={classes.root}>\r\n                    <CssBaseline/>\r\n                    <AppBar position=\"fixed\" className={classes.appBar}>\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"Abrir menú\"\r\n                                edge=\"start\"\r\n                                onClick={handleDrawerToggle}\r\n                                className={classes.menuButton}>\r\n                                <Icon>menu</Icon>\r\n                            </IconButton>\r\n\r\n                            <div className='right-menu'>\r\n                                <Button\r\n                                    aria-label=\"account of current user\"\r\n                                    aria-controls=\"menu-appbar\"\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleMenuClick}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <Avatar className={'avatar-toolbar'}>{props.user.person.name.substring(0, 1)}</Avatar>&nbsp;\r\n                                    { props.user.person.name }\r\n                                </Button>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    { renderMenuUser }\r\n\r\n                    <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                        <Hidden mdUp implementation=\"css\">\r\n                            <Drawer\r\n                                container={container}\r\n                                variant=\"temporary\"\r\n                                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                                open={mobileOpen}\r\n                                onClose={handleDrawerToggle}\r\n                                classes={{\r\n                                    paper: classes.drawerPaper,\r\n                                }}\r\n                                ModalProps={{\r\n                                    keepMounted: true, // Better open performance on mobile.\r\n                                }}>\r\n                                <DrawerCustom classes={classes} />\r\n                            </Drawer>\r\n                        </Hidden>\r\n                        <Hidden smDown implementation=\"css\">\r\n                            <Drawer classes={{paper: classes.drawerPaper,}}\r\n                                variant=\"permanent\" open>\r\n                                <DrawerCustom classes={classes} />\r\n                            </Drawer>\r\n                        </Hidden>\r\n                    </nav>\r\n                    {/*Contenido*/}\r\n                    <main className={classes.content}>{ props.children}</main>\r\n                </div>\r\n                :\r\n                <div className=\"loader-page\" ><LinearProgress color='secondary' /></div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nMaster.propTypes = {\r\n    container: PropTypes.instanceOf(typeof Element === 'undefined' ? Object : Element),\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    removeUser() {\r\n        dispatch(removeUser());\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Master);\r\n","import { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport config from \"../config/config\";\r\nconst useGet = (url) => {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loader, setLoader] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const get = (url) =>{\r\n        setLoader(true);\r\n        axios.get(url)\r\n            .then(res => {\r\n                if(res.ok) {\r\n                    setData(res.data);\r\n                }\r\n                setLoader(false);\r\n            }).catch(err => {\r\n            if(err.response && err.response.data){\r\n                setError(err.response.data);\r\n            } else setError(err);\r\n            setLoader(false);\r\n            console.log(\"URL PATH \",config.api+url);\r\n        });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        get(url);\r\n\r\n    }, [url]);\r\n\r\n    return {\r\n        loader, error, data, setData, get\r\n    }\r\n};\r\nexport default useGet;\r\n","import {useState} from 'react';\r\nimport axios from \"axios\";\r\nimport config from \"../config/config\";\r\nimport {processErrors} from \"./utils\";\r\nconst useHttp = (method='post', formData=false) => {\r\n\r\n    const [loader, setLoader] = useState(false);\r\n\r\n\r\n    const request = (url, data={}) => {\r\n        return new Promise  ((resolve, reject) => {\r\n            setLoader(true);\r\n            let options = {\r\n                method: method,\r\n                baseURL: config.api,\r\n                url,\r\n                data,\r\n            };\r\n\r\n            if (formData) {\r\n                options.headers = {\r\n                    'content-type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            axios(options).then(res => {\r\n                setLoader(false);\r\n                resolve(res);\r\n            }).catch(err => {\r\n                setLoader(false);\r\n                reject(processErrors(err));\r\n            })\r\n        });\r\n    };\r\n\r\n    return {\r\n        loader, request\r\n    }\r\n};\r\nexport default useHttp;\r\n","import React from 'react';\r\nimport {CircularProgress, Paper} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nconst WithLoader = ({ children, loader, text, elevation }) => {\r\n    return (\r\n        <>\r\n            {\r\n                loader === true\r\n                    ? <Paper elevation={elevation} className=\"loader-container\"> <CircularProgress color=\"secondary\"/> <p>{text}</p> </Paper>\r\n                    : children\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nWithLoader.propTypes = {\r\n    text: PropTypes.string,\r\n    loader: PropTypes.bool.isRequired\r\n};\r\n\r\nWithLoader.defaultProps = {\r\n    text: 'Cargando...',\r\n    loader: false,\r\n    elevation: 2\r\n};\r\n\r\nexport default WithLoader;\r\n","import React from 'react';\r\nimport Master from \"../Master\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport {\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, IconButton, Icon, Divider, Button\r\n} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport useHttp from \"../../utils/useHttp\";\r\nimport {toast} from \"react-toastify\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport WithAdmin from \"../_partials/hoc/WithAdmin\";\r\nimport {toName, ZONE_ADD, ZONE_EDIT} from \"../../config/urls\";\r\n\r\nconst ListZone = ({history}) => {\r\n\r\n    const zones = useGet('/route');\r\n    const httpDelete = useHttp('delete');\r\n\r\n    const deleteZone = (id) => {\r\n        const confirm = window.confirm('¿Estas seguro que deseas eliminar esta zona?');\r\n        if(!confirm) return;\r\n\r\n        httpDelete.request(`/route/${id}`).then(res => {\r\n            if(res.ok){\r\n                const newZones = zones.data.filter(e => e.id !== id);\r\n                zones.setData(newZones);\r\n                toast.success('Ruta eliminada con éxito');\r\n            } else toast.error('No se ha podido eliminar la ruta');\r\n        }).catch(e => {\r\n            toast.error(e);\r\n        })\r\n    };\r\n    return (\r\n        <Master>\r\n            <WithLoader loader={zones.loader}>\r\n                <TableContainer component={Paper} className=\"paper-content\">\r\n                    <div className=\"paper-header\">\r\n                        <div className=\"paper-header-ancle\">\r\n                            <h4><Icon>list</Icon> Lista de rutas</h4>\r\n                            <WithAdmin>\r\n                                <Button to={ZONE_ADD} component={Link} variant={\"text\"} color={\"secondary\"}>\r\n                                    <Icon>add</Icon> Nueva ruta\r\n                                </Button>\r\n                            </WithAdmin>\r\n                        </div>\r\n                        <Divider />\r\n                    </div>\r\n                    <Table size=\"small\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Nombre</TableCell>\r\n                                <TableCell>Descripción</TableCell>\r\n                                <WithAdmin>\r\n                                    <TableCell>Opciones</TableCell>\r\n                                </WithAdmin>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>\r\n                            {zones.data.map(z => (\r\n                                <TableRow key={z.id}>\r\n                                    <TableCell>\r\n                                        {z.name}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {z.description === null ? 'Ninguna' : z.description }\r\n                                    </TableCell>\r\n                                    <WithAdmin>\r\n                                        <TableCell>\r\n                                            <IconButton component={Link}\r\n                                                        to={toName(ZONE_EDIT, {id: z.id})}\r\n                                                        size={\"small\"}\r\n                                                        aria-label=\"Editar\">\r\n                                                <Icon>edit</Icon>\r\n                                            </IconButton>\r\n                                            <IconButton onClick={ e => deleteZone(z.id)}\r\n                                                        size={\"small\"}\r\n                                                        aria-label=\"delete\">\r\n                                                <Icon>delete</Icon>\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </WithAdmin>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </WithLoader>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default ListZone;\r\n","import React from 'react';\r\nimport {PropTypes} from \"prop-types\";\r\nimport {Icon} from \"@material-ui/core\";\r\n\r\nconst Alert = ({message, type, children, show }) => {\r\n\r\n    if(show)\r\n        return (\r\n            <div className={\"alert outline \"+type.toLowerCase()}>\r\n                <Icon>info</Icon>\r\n                <div>\r\n                    {message}\r\n                </div>\r\n            </div>);\r\n    else return (<></>);\r\n};\r\n\r\nAlert.propTypes = {\r\n    message: PropTypes.string,\r\n    type: PropTypes.string,\r\n    show: PropTypes.bool\r\n};\r\n\r\nAlert.defaultProps = {\r\n    type: 'err',\r\n    show: false\r\n};\r\n\r\nexport default Alert;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Container,\r\n    TextField,\r\n    Typography,\r\n    Button,\r\n    CssBaseline,\r\n    Avatar,\r\n    Paper, LinearProgress\r\n} from \"@material-ui/core\";\r\nimport useHttp from \"../../utils/useHttp\";\r\nimport Alert from \"../_partials/Alert\";\r\nimport userService from '../../config/user.service';\r\nimport {addUser} from \"../../store/actionsCreators\";\r\nimport {connect} from \"react-redux\";\r\nimport {toast} from \"react-toastify\";\r\nimport {LOGIN_REDIRECT} from \"../../config/urls\";\r\n\r\nconst Login = ({ history, setUser }) => {\r\n    const [data, setData] = useState({username: '', password: ''});\r\n    const login = useHttp();\r\n    const user = useHttp('get');\r\n\r\n\r\n    const [err, setErr] = useState(null);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setErr(null);\r\n        login.request('/login', data).then(res => {\r\n\r\n            if(res.access_token) {\r\n                userService.setSession({token: res.access_token});\r\n\r\n                user.request('/user').then(res => {\r\n                    login.loader = user.loader;\r\n                    if(res.ok){\r\n                        setUser(res.data);\r\n                        history.push(LOGIN_REDIRECT);\r\n                    } else {\r\n                        toast.error('Algo ha salido mal, comuníquese con soporte');\r\n                        localStorage.removeItem('token');\r\n                    }\r\n                }).finally(() => login.loader = user.loader);\r\n\r\n\r\n            } else setErr('No se ha podido iniciar, consulte con soporte');\r\n\r\n        }).catch(err => {\r\n            if(err)\r\n                setErr(err);\r\n            else\r\n                setErr('Error desconocido, comuniquese con soporte!');\r\n        })\r\n    };\r\n\r\n    const onChange = e => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value})\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(userService.getToken()) {\r\n            history.push(LOGIN_REDIRECT);\r\n        }\r\n    }, [history]);\r\n\r\n    return (\r\n        <>\r\n            <Container component=\"main\" maxWidth=\"sm\">\r\n                <CssBaseline />\r\n                <Paper className=\"form-login-content\">\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Iniciar sesión\r\n                    </Typography>\r\n                    <Avatar src=\"/img/payicon.png\" sizes=\"100\"/>\r\n                    <form onSubmit={ e => onSubmit(e)} className=\"form-login\">\r\n\r\n                        {/*Username*/}\r\n                        <TextField variant=\"outlined\" margin=\"normal\"\r\n                                   value={data.username}\r\n                                   onChange={e => onChange(e)}\r\n                                   required fullWidth type=\"text\" label=\"Nombre de usuario\"\r\n                                   id=\"username\"\r\n                                   name=\"username\"\r\n                                   autoComplete=\"username\"\r\n                                   autoFocus/>\r\n\r\n                        {/*Password*/}\r\n                        <TextField variant=\"outlined\" margin=\"normal\"\r\n                                   value={data.password}\r\n                                   onChange={e => onChange(e)}\r\n                                   required fullWidth label=\"Contraseña\"\r\n                                   name=\"password\" type=\"password\"\r\n                                   id=\"password\"\r\n                                   autoComplete=\"current-password\"/>\r\n\r\n                        {/*Submit form*/}\r\n                        <Alert message={err} show={err!==null}/>\r\n                        { login.loader && <LinearProgress color=\"secondary\" />}\r\n                        <Button\r\n                            disabled={login.loader}\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\">\r\n                            Iniciar\r\n                        </Button>\r\n                    </form>\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUser(user){\r\n        dispatch(addUser(user));\r\n    }\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Button, Container, Paper} from \"@material-ui/core\";\r\nimport {LOGIN_REDIRECT} from \"../../config/urls\";\r\nimport {WifiOff, Refresh} from '@material-ui/icons';\r\nconst NotConnected = () => {\r\n\r\n    return (\r\n        <Container maxWidth='sm' component={Paper} className='paper-content form-login-content'>\r\n            <div className={'forbidden-content '}>\r\n                <h3>No se ha podido comunicar con el servidor</h3>\r\n                <WifiOff className={'forbidden-icon'} />\r\n                <p>Revisa tu conexión a internet, puede que el cable o el adaptador de WiFi este desconectado.</p>\r\n                <div>\r\n                    <Button color={'primary'}\r\n                            startIcon={<Refresh />}\r\n                            variant={'contained'}\r\n                            onClick={() => window.location.href = LOGIN_REDIRECT}>Reintentar</Button>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default withRouter(NotConnected);\r\n","import React, {useState} from 'react';\r\nimport {\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n    MenuItem,\r\n    InputAdornment,\r\n    IconButton,\r\n    Input,\r\n    FormControl, LinearProgress, Button, FormControlLabel, Checkbox, FormHelperText\r\n} from \"@material-ui/core\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Alert from \"../../_partials/Alert\";\r\nimport useHttp from \"../../../utils/useHttp\";\r\nimport {toast} from \"react-toastify\";\r\nimport useGet from \"../../../utils/useGet\";\r\nimport WithLoader from \"../../_partials/hoc/WithLoader\";\r\nimport {EMPLOY_LIST} from \"../../../config/urls\";\r\n\r\n\r\nconst FrmEmploy = ({method, url, initialData, initialRoutes, history}) => {\r\n\r\n    const [data, setData] = useState(initialData);\r\n    const [values, setValues] = useState({\r\n        showPassword: false,\r\n        err: null,\r\n        checked: {},\r\n    });\r\n    const [routes, setRoutes] = useState(initialRoutes);\r\n\r\n    const zones = useGet('/route');\r\n    const http = useHttp(method);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setValues({\r\n            ...values,\r\n            err: null\r\n        });\r\n\r\n        http.request(url, data).then(res => {\r\n            if(res.ok && method==='post') {\r\n                toast.success('Empleado Guardado con éxito');\r\n                setValues({\r\n                    ...values, checked: {}\r\n                });\r\n                history.push(EMPLOY_LIST);\r\n            }\r\n\r\n            if(res.ok && method==='put') {\r\n                toast.success(res.message);\r\n            }\r\n        }).catch(err =>{\r\n            setValues({\r\n                ...values,\r\n                err: err\r\n            })\r\n        })\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value});\r\n    };\r\n\r\n    const onChecked = name => event => {\r\n        setValues({...values,\r\n            checked: {...values.checked, [name]: event.target.checked }});\r\n\r\n        const options = routes;\r\n        if (event.target.checked) {\r\n            options.push(+event.target.value)\r\n        } else {\r\n           let index = options.indexOf(+event.target.value)\r\n           options.splice(index, 1)\r\n        }\r\n        setRoutes(options);\r\n        setData({...data, zones: routes});\r\n    };\r\n\r\n    const isChecked = name => {\r\n        if(routes.indexOf(name)>=0)\r\n            return true;\r\n\r\n        if (values.checked === undefined)\r\n            return false;\r\n\r\n        const chk = (values.checked[name]);\r\n\r\n        if(chk === undefined)\r\n            return false;\r\n\r\n        return chk;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n            <Grid container spacing={3}>\r\n                <div className={'grid-title'}>\r\n                    <p>Datos Básicos</p>\r\n                </div>\r\n                {/*Nombre*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='text' label='Nombre'\r\n                               name='name'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.name.toUpperCase()}\r\n                               required fullWidth autoFocus/>\r\n                </Grid>\r\n                {/*Apellido*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='text' label='Apellido'\r\n                               name='surname'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.surname.toUpperCase()}\r\n                               required fullWidth />\r\n                </Grid>\r\n                {/*Dirección*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='address' label='Dirección'\r\n                               name='address'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.address}\r\n                               required fullWidth />\r\n                </Grid>\r\n                {/*Teléfono*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='phone' label='Teléfono/Celular'\r\n                               name='phones'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.phones}\r\n                               fullWidth />\r\n                </Grid>\r\n\r\n                {/*=================== DATOS DE SUELDO =====================*/}\r\n                <div className={'grid-title'}>\r\n                    <p>Datos de sueldo</p>\r\n                </div>\r\n                {/*Sueldo Base*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='number' label='Sueldo Base'\r\n                               name='sueldo'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.sueldo}\r\n                               required\r\n                               fullWidth />\r\n                </Grid>\r\n                {/*Periodo de pago*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <InputLabel  id=\"pago_sueldo\">Periodo de Pago</InputLabel>\r\n                    <Select\r\n                        labelId=\"pago_sueldo\"\r\n                        name={'pago_sueldo'}\r\n                        value={data.pago_sueldo}\r\n                        onChange={e => onChange(e)} fullWidth >\r\n                        <MenuItem value={'SEMANAL'}>SEMANAL</MenuItem>\r\n                    </Select>\r\n                </Grid>\r\n\r\n                {/*=================== CREDENCIALES =====================*/}\r\n                <div className={'grid-title'}>\r\n                    <p>Credenciales</p>\r\n                </div>\r\n                {/*Username*/}\r\n                <Grid item xs={12} md={4}>\r\n                    <TextField onChange={e => onChange(e)}\r\n                               value = {data.username}\r\n                               required fullWidth type=\"text\" label=\"Nombre de usuario\"\r\n                               id=\"username\"\r\n                               name=\"username\"\r\n                               autoComplete=\"username\"/>\r\n                </Grid>\r\n\r\n                {/*Password*/}\r\n                <Grid item xs={12} md={4}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                        <Input\r\n                            id=\"standard-adornment-password\"\r\n                            type={values.showPassword ? 'text' : 'password'}\r\n                            value={data.password !== null ? data.password : ''}\r\n                            name={'password'}\r\n                            onChange={e => onChange(e)}\r\n                            fullWidth\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        onClick={handleClickShowPassword}>\r\n                                        {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                </Grid>\r\n\r\n\r\n                {/*ADMINISTRADOR*/}\r\n                <Grid item xs={12} md={4}>\r\n                    <FormControl component=\"fieldset\">\r\n\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox checked={data.advance} spacing={0}\r\n                                      onChange={e => setData({\r\n                                          ...data,\r\n                                          admin: !data.admin,\r\n                                      })}\r\n                                      value=\"Admin\" />\r\n                        }\r\n                        title={'Titulo'}\r\n                        label=\"Administrador\"\r\n                    />\r\n                        <FormHelperText style={{marginTop: 0}}>El administrador tiene todos los permisos</FormHelperText>\r\n                    </FormControl>\r\n\r\n                </Grid>\r\n\r\n                {/*=================== ZONAS =====================*/}\r\n                <div className={'grid-title'}>\r\n                    <p>Asignación de zonas</p>\r\n                </div>\r\n                <Grid item xs={12}>\r\n                    <WithLoader loader={zones.loader} text={'Cargando Zonas'}>\r\n                            {zones.data.map(z =>\r\n                                <FormControlLabel key={z.id}\r\n                                    control={\r\n                                        <Checkbox name={'routes[]'} checked={isChecked(z.id)} onChange={onChecked(z.id)}  value={z.id} />\r\n                                    }\r\n                                    label={z.name}\r\n                                />\r\n                            )}\r\n                    </WithLoader>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} className='center'>\r\n                    <Alert show={values.err!==null} message={values.err} />\r\n                    { http.loader && <LinearProgress color=\"secondary\" />}\r\n                    <br/>\r\n                    <Button type='submit' color='primary'\r\n                            disabled={http.loader}\r\n                            variant='contained'>\r\n                        { method === 'post' ? 'Guardar' : 'Actualizar' }\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nFrmEmploy.defaultProps = {\r\n    method: 'post',\r\n    url: '/employ',\r\n    redirect: '/employ',\r\n    initialData: {\r\n        name: '', surname: '', address: '', phones: '', sueldo: '',\r\n        pago_sueldo: '', username: '', admin: false, password: '', zones: []\r\n    },\r\n    initialRoutes: []\r\n};\r\n\r\nexport default withRouter(FrmEmploy);\r\n","import React from 'react';\r\nimport {Container, Divider, Icon, Paper} from \"@material-ui/core\";\r\nimport FrmEmploy from \"./_form/FrmEmploy\";\r\nimport Master from \"../Master\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\n\r\nconst EditEmploy = ({match}) => {\r\n    const id = match.params.id;\r\n\r\n    const employ = useGet(`/employ/${id}`);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Master>\r\n                <WithLoader loader={employ.loader} text={'Cargando datos del empleado...'}>\r\n                    <Container maxWidth='md' component={Paper} className='paper-content'>\r\n                        <div className='paper-header'>\r\n                            <h4> <Icon>person_edit</Icon> Editar Empleado</h4>\r\n                            <Divider />\r\n                        </div>\r\n                        {\r\n                            employ.data.name !== undefined &&\r\n                                <FrmEmploy method={'put'} url={`/employ/${id}`}\r\n                                           initialData={employ.data}\r\n                                           initialRoutes={employ.data.zones}/>\r\n                        }\r\n                    </Container>\r\n                </WithLoader>\r\n            </Master>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditEmploy;\r\n","import React from 'react';\r\nimport FrmEmploy from \"./_form/FrmEmploy\";\r\nimport {Container, Divider, Icon, Paper} from \"@material-ui/core\";\r\nimport Master from \"../Master\";\r\n\r\nconst RegisterEmploy = () => {\r\n    return (\r\n        <>\r\n            <Master>\r\n                <Container maxWidth='md' component={Paper} className='paper-content'>\r\n                    <div className='paper-header'>\r\n                        <h4> <Icon>person_add</Icon> Agregar Empleado</h4>\r\n                        <Divider />\r\n                    </div>\r\n                    <FrmEmploy method={'post'} />\r\n                </Container>\r\n            </Master>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RegisterEmploy;\r\n","import React from 'react';\r\nimport {Container, Icon, Paper, Button} from \"@material-ui/core\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport {ArrowBack} from '@material-ui/icons';\r\n\r\nconst Forbidden = ({history}) => {\r\n\r\n    return (\r\n        <Container maxWidth='sm' component={Paper} className='paper-content'>\r\n            <div className={'forbidden-content'}>\r\n                <h3>Acceso Denegado</h3>\r\n                <Icon className={'forbidden-icon'}>security</Icon>\r\n                <p>No tienes permisos para ver este contenido, si crees que es un error, contacta con el administrador.</p>\r\n                <div>\r\n                    <Button color={'primary'}\r\n                            startIcon={<ArrowBack />}\r\n                            variant={'contained'}\r\n                            onClick={() => history.goBack(-1)}>Go Back</Button>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default withRouter(Forbidden);\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport userService from '../../../config/user.service';\r\nimport Forbidden from \"../../errors/Forbidden\";\r\n\r\nconst WithAdminContent = ({user, children}) => {\r\n\r\n    return (<>\r\n        {((user.admin || user.root) &&\r\n            userService.getToken()) ?\r\n            children: <Forbidden/>}\r\n    </>)\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(WithAdminContent);\r\n","import React from 'react';\r\nimport Master from \"../Master\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport {Link} from \"react-router-dom\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport {EMPLOY_EDIT, PAYROLL_ADD_USER, toName} from \"../../config/urls\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {Icon, IconButton, Chip} from \"@material-ui/core\";\r\nimport {ArrowUpward, ArrowDownward} from '@material-ui/icons'\r\nimport {tableOptions} from \"../../config/config\";\r\nimport useHttp from \"../../utils/useHttp\";\r\nimport {toast} from \"react-toastify\";\r\nimport WithAdminContent from \"../_partials/hoc/WithAdminContent\";\r\n\r\nconst ListEmploy = () => {\r\n\r\n    const employs = useGet('/employ');\r\n    const status = useHttp('put');\r\n    const remove = useHttp('delete');\r\n\r\n    const columns = [\r\n        {name: \"id\", label: 'ID', options: {display: 'false', filter: false}},\r\n        {\r\n            name: 'name', label: 'NOMBRE',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return value.toUpperCase();}}\r\n        },\r\n        {\r\n            name: 'surname', label: 'APELLIDO',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return value.toUpperCase();}}\r\n        },\r\n        {\r\n            name: 'username', label: 'USUARIO', options: {filter: false}\r\n        },\r\n        {\r\n            name: 'phones', label: 'TELÉFONO', options: {filter: false}\r\n        },\r\n        {\r\n            name: 'sueldo', label: 'SUELDO', options: {filter: false}\r\n        },\r\n        {\r\n            name: 'status', label: 'ESTADO', options: {\r\n                filter: true,\r\n                customFilterListOptions: { render: v => `Estado: ${v}` },\r\n\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            { value === 1 &&\r\n                                <>\r\n                                    <Chip\r\n                                        label={\"Activo\"}\r\n                                        className={'bg-green'}/>\r\n                                    <IconButton size={\"small\"}\r\n                                                onClick={() => changeStatus(tableMeta.rowData[0], updateValue)}\r\n                                                aria-label=\"Dar de baja\">\r\n                                        <ArrowDownward/>\r\n                                    </IconButton>\r\n                                </>\r\n                            }\r\n                            { value === 0 &&\r\n                                <>\r\n                                    <Chip\r\n                                        label=\"Inactivo\"\r\n                                        className={'bg-red'}/>\r\n                                    <IconButton size={\"small\"}\r\n                                                onClick={() => changeStatus(tableMeta.rowData[0], updateValue)}\r\n                                                aria-label=\"Dar de alta\">\r\n                                        <ArrowUpward/>\r\n                                    </IconButton>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        },\r\n        {\r\n            label: 'OPCIONES', name: 'id',\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            <IconButton component={Link}\r\n                                        to={toName(EMPLOY_EDIT, {id: value})}\r\n                                        size={\"small\"}\r\n                                        aria-label=\"Editar\">\r\n                                <Icon>edit</Icon>\r\n                            </IconButton>\r\n                            <IconButton onClick={() => deleteEmploy(value, updateValue)}\r\n                                        size={\"small\"}\r\n                                        aria-label=\"delete\">\r\n                                <Icon>delete</Icon>\r\n                            </IconButton>\r\n                            <IconButton component={Link}\r\n                                        to={toName(PAYROLL_ADD_USER, {id: value})}\r\n                                        size={\"small\"}\r\n                                        aria-label=\"Pagar\">\r\n                                <Icon>payment</Icon>\r\n                            </IconButton>\r\n                        </div>\r\n                    );\r\n                },\r\n            }\r\n        }\r\n    ];\r\n\r\n    const changeStatus = (employId, updateValue) => {\r\n\r\n        status.request(`/employ/cancel/${employId}`).then(res => {\r\n            if(res.ok) {\r\n                let index = employs.data.findIndex(d => d.id === employId);\r\n\r\n                const status = employs.data[index].status;\r\n                if (status === 1)\r\n                   employs.data[index].status = 0;\r\n                else\r\n                   employs.data[index].status = 1;\r\n\r\n                updateValue(employs.data[index].status);\r\n\r\n                toast.success(res.message);\r\n            }\r\n        }).catch(err => {\r\n            toast.error(err);\r\n        });\r\n    };\r\n\r\n    const deleteEmploy = (employId) => {\r\n        if(!window.confirm('¿Esta seguro que desea eliminar este empleado?')) return;\r\n\r\n        remove.request(`/employ/${employId}`).then(res => {\r\n            if(res.ok){\r\n                let index = employs.data.findIndex(d => d.id === employId);\r\n                employs.data.splice(index, 1);\r\n\r\n                toast.success(res.message);\r\n                const data = employs.data;\r\n                employs.setData();\r\n                employs.setData(data);\r\n\r\n            }\r\n        }).catch(err => toast.error(err));\r\n    };\r\n\r\n    return (\r\n        <Master>\r\n            <WithLoader loader={employs.loader}>\r\n                <WithAdminContent>\r\n                    <MUIDataTable\r\n                        title={\"EMPLEADOS\"}\r\n                        data={employs.data}\r\n                        columns={columns}\r\n                        options={tableOptions}\r\n                    />\r\n                </WithAdminContent>\r\n            </WithLoader>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default ListEmploy;\r\n","import React from 'react';\r\nimport {Container, Divider, Grid, Icon, Paper, TextField} from \"@material-ui/core\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport Master from \"../Master\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport Alert from \"../_partials/Alert\";\r\nimport {asset} from './../../config/config'\r\nconst ShowExpense = ({match}) => {\r\n    const id = match.params.id;\r\n    const expense = useGet(`/expense/${id}`);\r\n    return (\r\n        <Master>\r\n            <WithLoader loader={expense.loader}>\r\n                <Container maxWidth='sm' component={Paper} className='paper-content'>\r\n                    <div className='paper-header'>\r\n                        <h4> <Icon>local_atm</Icon> Ver Gasto</h4>\r\n                        <Divider />\r\n                    </div>\r\n                    <Grid container spacing={3}>\r\n                        {/*MONTO*/}\r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField type='text' label='Monto $'\r\n                                       readOnly\r\n                                       value={expense.data.monto}\r\n                                       fullWidth/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField type='text' label='Categoría'\r\n                                       readOnly\r\n                                       value={expense.data.category}\r\n                                       fullWidth/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField type='date' label='Fecha'\r\n                                       readOnly\r\n                                       value={expense.data.date}\r\n                                       fullWidth/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField type='text' label='Empleado'\r\n                                       readOnly\r\n                                       value={expense.data.name ? expense.data.name.toUpperCase() :  ''}\r\n                                       fullWidth/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField\r\n                                label=\"Detalle | Observación\"\r\n                                multiline\r\n                                rows=\"3\"\r\n                                fullWidth\r\n                                value={expense.data.description === null ? 'Ninguna' : expense.data.description }\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={12}>\r\n                            {\r\n                                expense.data.image &&\r\n                                <div style={{padding: 10}}>\r\n                                    <img src={asset(expense.data.image)} alt=\"Preview\" width=\"100%\"/>\r\n                                </div>\r\n                            }\r\n                             <Alert message={'No tiene comprobante'} type={'warn'} show={!expense.data.image} />\r\n\r\n                        </Grid>\r\n\r\n\r\n                    </Grid>\r\n                </Container>\r\n            </WithLoader>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default ShowExpense;\r\n","import React, {useState} from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {Grid, TextField, Button, Icon, LinearProgress} from \"@material-ui/core\";\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport {toast} from \"react-toastify\";\r\nimport {Autocomplete} from '@material-ui/lab'\r\nimport {categories} from \"../../../config/config\";\r\nimport moment from \"moment\";\r\nimport Alert from \"../../_partials/Alert\";\r\nimport useHttp from \"../../../utils/useHttp\";\r\nimport {EXPENSE_LIST} from \"../../../config/urls\";\r\nimport useGet from \"../../../utils/useGet\";\r\nimport WithAdmin from \"../../_partials/hoc/WithAdmin\";\r\nconst FrmExpense = ({history}) => {\r\n\r\n    const [data, setData] = useState({\r\n        monto: '',\r\n        category: '',\r\n        description: '',\r\n        image: null,\r\n        date: null,\r\n        selectedDate: null,\r\n        showImage: null,\r\n        employ_id: null\r\n    });\r\n    const [err, setErr] = useState(null);\r\n    const http = useHttp('post', true);\r\n    const employs = useGet('/employ');\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('monto', data.monto);\r\n        formData.append('category', data.category);\r\n        formData.append('description', data.description);\r\n        if (data.image)\r\n            formData.append('image',data.image);\r\n        if (data.date)\r\n            formData.append('date', data.date);\r\n        if (data.employ_id)\r\n            formData.append('employ_id', data.employ_id);\r\n\r\n        setErr(null);\r\n        http.request(`/expense`, formData).then(res => {\r\n            if(res.ok) {\r\n                toast.success('Gasto procesado con éxito');\r\n                history.push(EXPENSE_LIST);\r\n            }\r\n\r\n        }).catch(err =>{\r\n            setErr(err);\r\n        })\r\n    };\r\n\r\n    const onChange = (e) => {\r\n\r\n       const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value});\r\n    };\r\n\r\n    const onChangeDate = date => {\r\n        setData({\r\n            ...data,\r\n            selectedDate: date,\r\n            date: moment(date).format('YYYY-MM-DD')\r\n        });\r\n    };\r\n\r\n    const onChangeFile = e => {\r\n        if(e.target.files.length > 0) {\r\n            setData({\r\n                ...data,\r\n                image: e.target.files[0],\r\n                showImage: URL.createObjectURL(e.target.files[0])\r\n            });\r\n        }\r\n    };\r\n\r\n    const onChangeCategory = (option, value) => {\r\n        if (value === null) {\r\n            setData({\r\n                ...data, category: null\r\n            });\r\n            return;\r\n        }\r\n        setData({\r\n            ...data, category: value\r\n        });\r\n    };\r\n\r\n    const onChangeEmploy = (option, value) => {\r\n        if (value!==null){\r\n            setData({\r\n                ...data,\r\n                employ_id: value.id,\r\n            });\r\n        }\r\n        else {\r\n            setData({...data, employ_id: null})\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n            <Grid container spacing={3}>\r\n                {/*MONTO*/}\r\n                <Grid item xs={12} sm={12}>\r\n                    <TextField type='text' label='Monto $'\r\n                               name='monto'\r\n                               placeholder={'$0.00'}\r\n                               onChange={e => onChange(e)}\r\n                               value={data.monto}\r\n                               required fullWidth autoFocus/>\r\n                </Grid>\r\n                {/*CATEGORÍA*/}\r\n                <Grid item xs={12} sm={12}>\r\n                    <Autocomplete\r\n                        id=\"category\"\r\n                        name={'categories'}\r\n                        freeSolo\r\n                        value={data.category === null ? '' : data.category.toUpperCase()}\r\n                        options={categories}\r\n                        onChange={(o,v) => onChangeCategory(o, v)}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Categoría\"\r\n                                        onChange={e => onChange(e)}\r\n                                       name={'category'} fullWidth required />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                {/*Date*/}\r\n                <Grid item xs={12} sm={12}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"DD/MM/YYYY\"\r\n                        fullWidth\r\n                        autoOk={true}\r\n                        id=\"date\"\r\n                        label=\"Fecha del gasto\"\r\n                        value={data.selectedDate}\r\n                        onChange={(date) => onChangeDate(date)}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'Cambiar Fecha',\r\n                        }}\r\n                    />\r\n                </Grid>\r\n\r\n                {/*Empleado*/}\r\n                <WithAdmin>\r\n                    <Grid item xs={12}>\r\n                        <Autocomplete\r\n                            id=\"employ_id\"\r\n                            options={employs.data}\r\n                            onChange={(option, value) => onChangeEmploy(option, value)}\r\n                            getOptionLabel={option => (option.name+' '+option.surname).toUpperCase() }\r\n                            renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label=\"Empleado\" variant=\"standard\" fullWidth />\r\n                            )}\r\n                        />\r\n                    </Grid>\r\n                </WithAdmin>\r\n\r\n                {/*Descripción*/}\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        id=\"description\"\r\n                        label=\"Detalle | Observación\"\r\n                        multiline\r\n                        rows=\"3\"\r\n                        fullWidth\r\n                        name='description'\r\n                        onChange={e => onChange(e)}\r\n                        value={data.description}\r\n                    />\r\n                </Grid>\r\n\r\n                {/*Comprobante*/}\r\n                <Grid item xs={12} sm={12} style={{justifyContent: 'center', display: 'flex', flexDirection: 'column'}}>\r\n                    {\r\n                        data.showImage &&\r\n                        <>\r\n                            <div style={{padding: 10}}>\r\n                                <img src={data.showImage} alt=\"Preview\" width=\"100%\"/>\r\n                            </div>\r\n                            <Button variant={'outlined'}\r\n                                    onClick={() => setData({...data, showImage: null, image: null})}\r\n                                    color={'secondary'}>Quitar Comprobante</Button>\r\n                        </>\r\n                    }\r\n\r\n                    {!data.showImage &&\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        component=\"label\"\r\n                        color={'primary'}>\r\n                        <Icon>photo</Icon>&nbsp;\r\n                        Agregar Comprobante\r\n                        <input\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            style={{ display: \"none\" }}\r\n                            onChange={(e) => onChangeFile(e)}\r\n                        />\r\n                    </Button> }\r\n                </Grid>\r\n                {/*Submit form*/}\r\n                <Grid item xs={12} className='center'>\r\n                    <Alert show={err!==null} message={err} />\r\n                    { http.loader && <LinearProgress color=\"secondary\" />}\r\n                    <br/>\r\n                    <Button type='submit' color='primary'\r\n                            disabled={http.loader}\r\n                            variant='contained'>\r\n                        Guardar Gasto\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default withRouter(FrmExpense);\r\n","import React from 'react';\r\nimport {Container, Divider, Icon, Paper} from \"@material-ui/core\";\r\nimport Master from \"../Master\";\r\nimport FrmExpense from \"./_form/FrmExpense\";\r\n\r\nconst RegisterExpense = () => {\r\n    return (\r\n        <Master>\r\n            <Container maxWidth='sm' component={Paper} className='paper-content'>\r\n                <div className='paper-header'>\r\n                    <h4> <Icon>local_atm</Icon> Registrar Gasto</h4>\r\n                    <Divider />\r\n                </div>\r\n                <FrmExpense />\r\n            </Container>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default RegisterExpense;\r\n","import React, {Component} from 'react';\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete/Autocomplete\";\r\nimport {CircularProgress, TextField} from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SelectEmploy extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            employs: [],\r\n            loader: false,\r\n            open: false,\r\n            value: ''\r\n        }\r\n    }\r\n\r\n    getEmploys() {\r\n        this.setState({...this.state, open: true, loader: true});\r\n        if (this.state.employs.length <= 0) {\r\n            Axios.get('/employ').then(res => {\r\n                if (res.ok) {\r\n                    this.setState({...this.state, employs: res.data})\r\n                }\r\n            }).finally(() => this.setState({loader: false}));\r\n        } else {\r\n            this.setState({loader: false});\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({...this.state, value:''});\r\n    }\r\n\r\n    selected(o, v) {\r\n        if(v) {\r\n            this.setState({...this.state, value: v});\r\n        } else {\r\n            this.setState({...this.state, value: ''});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Autocomplete\r\n                    id=\"employ_id\"\r\n                    open={this.state.open}\r\n                    onOpen={() => this.getEmploys()}\r\n                    onClose={() => this.setState({...this.state, open: false})}\r\n                    options={this.state.employs}\r\n                    loading={this.state.loader}\r\n                    onChange={(option, value) => this.props.onChange(value)}\r\n                    loadingText={'Cargando empleados'}\r\n                    inputValue={this.state.value}\r\n                    onInputChange={(v,r) => this.selected(v, r)}\r\n                    getOptionLabel={option => option ? ( option.name+' '+option.surname).toUpperCase() : this.state.value }\r\n\r\n                    renderInput={params => (\r\n                        <TextField\r\n                            {...params}\r\n                            required\r\n                            label=\"Empleado\" variant=\"standard\" fullWidth\r\n                            InputProps={{\r\n                                ...params.InputProps,\r\n                                endAdornment: (\r\n                                    <React.Fragment>\r\n                                        {this.state.loader ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                        {params.InputProps.endAdornment}\r\n                                    </React.Fragment>\r\n                                ),\r\n                            }}/>\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSelectEmploy.propTypes = {\r\n    onChange: PropTypes.func\r\n};\r\n\r\nSelectEmploy.defaultProps = {\r\n};\r\n\r\nexport default SelectEmploy;","import React, {useRef, useState} from 'react';\r\nimport {Container, Paper, Grid, Button, Icon, IconButton} from \"@material-ui/core\";\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport PropTypes from 'prop-types';\r\nimport SelectEmploy from \"../../employ/_partials/SelectEmploy\";\r\nconst ExpenseFilter = ({onFilter, filters, onClearFilters}) => {\r\n\r\n    const [data, setData] = useState(filters);\r\n    const selectERef = useRef();\r\n\r\n    const onChangeDate = (name, date) => {\r\n        setData({\r\n            ...data,\r\n            [name]: date,\r\n        });\r\n    };\r\n\r\n    const onChangeEmploy = (employ) => {\r\n        if (employ) {\r\n            setData({...data, employ_id: employ.id });\r\n        } else {\r\n            setData({...data, employ_id: null });\r\n        }\r\n    };\r\n\r\n    const filterSend = () => {\r\n      onFilter({\r\n          dateFrom: data.dateFrom, dateTo: data.dateTo, employ_id:  data.employ_id });\r\n    };\r\n\r\n    const clearFilters = () => {\r\n        setData({...data, dateFrom: null, dateTo: null, employ_id: null});\r\n        onClearFilters();\r\n        selectERef.current.reset();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container component={Paper} elevation={0} style={{marginBottom: '1rem'}}>\r\n                <Grid container spacing={3} alignItems={'center'} >\r\n                    <Grid item xs={12} sm={6} md={3}>\r\n                        <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"DD/MM/YYYY\"\r\n                        fullWidth\r\n                        autoOk={true}\r\n                        id=\"date\"\r\n                        label=\"Fecha Inicial\"\r\n                        value={data.dateFrom}\r\n                        onChange={(date) => onChangeDate('dateFrom',date)}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'Ingresar fecha inicial',\r\n                        }}\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"DD/MM/YYYY\"\r\n                            fullWidth\r\n                            autoOk={true}\r\n                            id=\"date_end\"\r\n                            label=\"Fecha Final\"\r\n                            value={data.dateTo}\r\n                            onChange={(date) => onChangeDate('dateTo', date)}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'Ingresar fecha final',\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={3} >\r\n                        <SelectEmploy ref={selectERef}\r\n                            onChange={(e) => onChangeEmploy(e)} />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={12} md={3} className={'d-flex'}>\r\n                        <Button variant={'text'} color={'primary'} fullWidth onClick={() => filterSend()}>\r\n                            <Icon>filter_list</Icon> &nbsp; Filtrar\r\n                        </Button>\r\n                        <IconButton onClick={() => clearFilters()}>\r\n                            <Icon>clear_two_tone</Icon>\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nExpenseFilter.defaultProps = {\r\n    onFilter: null,\r\n    filters: {\r\n        dateFrom: moment().clone().weekday(0),\r\n        dateTo: moment().clone().weekday(5),\r\n        employ_id: null,\r\n    }\r\n};\r\n\r\nExpenseFilter.propTypes = {\r\n    onFilter: PropTypes.func\r\n};\r\n\r\nexport default ExpenseFilter;\r\n","import React from 'react';\r\nimport useGet from \"../../../utils/useGet\";\r\nimport {Grid, Icon} from '@material-ui/core';\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport {money} from \"../../../config/config\";\r\nconst BoxInfo = ({info, text, icon, color}) => {\r\n    return (\r\n        <div className={`box-info  ${(color) ? color.toLowerCase() : ''}`}>\r\n            {!icon ? <Icon>today</Icon> : <Icon>{icon}</Icon>}\r\n\r\n            <h3>{info}</h3>\r\n            <p>{text}</p>\r\n        </div>);\r\n};\r\n\r\nconst ExpenseInfo = () => {\r\n    const info = useGet('/expense/info');\r\n    return (\r\n        <div style={{marginBottom: '1.5rem', padding: '0 10px'}}>\r\n            <Grid container spacing={3}>\r\n\r\n                {\r\n                    info.loader &&\r\n                    <>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Skeleton variant=\"rect\" height={79} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Skeleton variant=\"rect\" height={79}/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Skeleton variant=\"rect\" height={79}/>\r\n                        </Grid>\r\n                    </>\r\n                }\r\n                {\r\n                    !info.loader && info.data &&\r\n                    <>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <BoxInfo text={'GASTOS HOY'}\r\n                                     info={money(info.data.today)} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} >\r\n                            <BoxInfo text={'GASTOS ESTA SEMANA'}\r\n                                     color={'cyan'}\r\n                                     info={money(info.data.week)} icon={'attach_money'} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} >\r\n                            <BoxInfo text={'GASTOS ESTE MES'}\r\n                                     color={'purple'}\r\n                                     info={money(info.data.month)} icon={'event'}/>\r\n                        </Grid>\r\n                    </>\r\n                }\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseInfo;\r\n","import React, {useEffect, useState} from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {Chip, Icon, IconButton, Tooltip, Button} from \"@material-ui/core\";\r\nimport {Add} from \"@material-ui/icons\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {toast} from \"react-toastify\";\r\nimport {EXPENSE_ADD, EXPENSE_SHOW, toName} from \"../../config/urls\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport Master from \"../Master\";\r\nimport {money, tableOptions} from \"../../config/config\";\r\nimport useHttp from \"../../utils/useHttp\";\r\nimport Axios from \"axios\";\r\nimport {processErrors, toDate} from \"../../utils/utils\";\r\nimport ExpenseFilter from \"./_partials/ExpenseFilter\";\r\nimport ExpenseInfo from \"./_partials/ExpenseInfo\";\r\nimport WithAdmin from \"../_partials/hoc/WithAdmin\";\r\n\r\nconst ListExpenses = () => {\r\n\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n    const [loader, setLoader] = useState(false);\r\n    const cancel = useHttp('delete');\r\n    const columns = [\r\n        {name: \"id\", label: 'ID', options: {display: 'false', filter: false}},\r\n        {\r\n            name: 'name', label: 'EMPLEADO',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value, tableMeta) => {\r\n                    return value.toUpperCase();}\r\n            }\r\n        },\r\n        {name: \"monto\", label: 'MONTO', options: {\r\n            filter: false,\r\n            align: 'right',\r\n                setCellHeaderProps: () => ({ align: 'right' }),\r\n                setCellProps: () => ({ align: 'right' }),\r\n                customBodyRender: (value, tableMeta) => {\r\n                    return <b>{money(value)}</b>}}},\r\n        {name: \"date\", label: 'FECHA', options: { filter: false, customBodyRender: (value) => {return toDate(value);}}},\r\n        {name: 'category', label: 'CATEGORÍA', options: {filter: true}},\r\n        {name: 'description', label: 'DETALLE', options: {filter: false, customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (<small>{value ? value: 'Ninguna'}</small>)\r\n                }}},\r\n        {\r\n            name: 'status', label: 'ESTADO', options: {\r\n                filter: true,\r\n                customFilterListOptions: { render: v => `Estado: ${v}` },\r\n\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            { value === 1 &&\r\n                            <>\r\n                                <Chip\r\n                                    label={\"Activo\"}\r\n                                    className={'bg-green'}/>\r\n                            </>\r\n                            }\r\n                            { value === 0 &&\r\n                            <>\r\n                                <Chip\r\n                                    label=\"Anulado\"\r\n                                    className={'bg-red'}/>\r\n                            </>\r\n                            }\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        },\r\n        {\r\n            label: 'OPCIONES', name: 'id',\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            <Tooltip title={'Ver detalles'}>\r\n                                <IconButton component={Link}\r\n                                            to={toName(EXPENSE_SHOW, {id: value})}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"Detalle\">\r\n                                    <Icon>chrome_reader_mode</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={'Anular Gasto'}>\r\n                                <IconButton\r\n                                    onClick={() => cancelExpense(value)}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"Anular\">\r\n                                    <Icon>block</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                    );\r\n                },\r\n            }\r\n        }\r\n    ];\r\n\r\n    const [filters, setFilters] = useState({\r\n        page: 0,\r\n        rowPerPage: 10,\r\n        dateFrom: null,\r\n        dateTo: null\r\n    });\r\n\r\n    const cancelExpense = (expenseId) => {\r\n        let description = window.prompt('¿Está seguro que desea anular este gasto?');\r\n        if (!description) return;\r\n\r\n        cancel.request(`/expense/${expenseId}`, {description: description})\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    toast.success(res.message);\r\n\r\n                    if (expenses){\r\n                        let index = expenses.findIndex(p => p.id === expenseId);\r\n                        expenses[index].status = 0;\r\n                        setExpenses([]);\r\n                        setExpenses(expenses);\r\n                    }\r\n                }\r\n            }).catch(err => {\r\n            toast.error(err);\r\n        });\r\n\r\n    };\r\n\r\n    const onFilter = (filterList) => {\r\n        setFilters({\r\n            ...filters,\r\n            dateFrom: filterList.dateFrom,\r\n            dateTo: filterList.dateTo,\r\n            employ_id: filterList.employ_id\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        const getExpenses =  () => {\r\n            let url = `/expense?page=${(filters.page+1)}&limit=${filters.rowPerPage}`;\r\n            if(filters.dateFrom && filters.dateTo)\r\n                url+= `&from=${filters.dateFrom.format('YYYY-MM-DD')}&to=${filters.dateTo.format('YYYY-MM-DD')}`;\r\n            if (filters.employ_id) {\r\n                url+= `&employ_id=${filters.employ_id}`;\r\n            }\r\n\r\n            setLoader(true);\r\n            Axios.get(url).then(res => {\r\n                if(res.ok) {\r\n                    setExpenses(res.data);\r\n                    setTotal(res.total);\r\n                }\r\n            })\r\n                .catch(err => toast.error(processErrors(err)))\r\n                .finally(() => setLoader(false))\r\n        };\r\n\r\n        getExpenses();\r\n    }, [filters]);\r\n\r\n    const options = {\r\n        ...tableOptions,\r\n        rowsPerPage: filters.rowPerPage,\r\n        page: filters.page,\r\n        count: total,\r\n        serverSide: true,\r\n        elevation: 0,\r\n        sort: false,\r\n        filter: false,\r\n        onTableChange: (action, tableState) => {\r\n            switch (action) {\r\n                case 'changeRowsPerPage':\r\n                    setFilters({...filters, rowPerPage: tableState.rowsPerPage});\r\n\r\n                    break;\r\n                case 'changePage':\r\n                    setFilters({...filters, page: tableState.page});\r\n                    break;\r\n                default:\r\n                    console.log(action);\r\n                    break;\r\n            }\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Master>\r\n            <WithAdmin>\r\n                <ExpenseInfo/>\r\n            </WithAdmin>\r\n            <ExpenseFilter\r\n                onClearFilters={() => setFilters({...filters, dateFrom: null, dateTo: null, employ_id: null})}\r\n                filters={filters}\r\n                onFilter={(v) => onFilter(v)}/>\r\n            <WithLoader loader={loader}>\r\n                <MUIDataTable\r\n                    title={<HeaderTitle/>}\r\n                    data={expenses}\r\n                    columns={columns} options={options} />\r\n            </WithLoader>\r\n        </Master>\r\n    );\r\n};\r\n\r\nconst HeaderTitle = () => {\r\n    return (\r\n        <div>\r\n            <Button component={Link} to={EXPENSE_ADD}>\r\n                <Add /> &nbsp;Agregar\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListExpenses;\r\n","import React, {useState} from 'react';\r\nimport {TextField, Grid, Button, LinearProgress} from \"@material-ui/core\";\r\nimport {toast} from \"react-toastify\";\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport useHttp from \"../../../utils/useHttp\";\r\nimport Alert from \"../../_partials/Alert\";\r\nimport {ZONE_LIST} from \"../../../config/urls\";\r\n\r\nconst FrmZone = ({method, url, history, redirect, initialZone}) => {\r\n\r\n    const [data, setData] = useState(initialZone);\r\n    const [err, setErr] = useState(null);\r\n    const http = useHttp(method);\r\n\r\n    const onChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value})\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n      e.preventDefault();\r\n      setErr(null);\r\n      http.request(url, data).then(res => {\r\n        if(res.ok) {\r\n            toast.success(`Zona ${ method === 'post' ? 'guardada' : 'actualizada' } con éxito`);\r\n            if(method ==='post'){\r\n                setData({ name: '', description: ''});\r\n                history.push(redirect);\r\n            }\r\n\r\n        }\r\n      }).catch(e => {\r\n          setErr(e);\r\n      });\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={e => onSubmit(e)}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField type='text' label='Nombre de ruta'\r\n                                       name='name'\r\n                                       onChange={e => onChange(e)}\r\n                                       value={data.name}\r\n                                       required fullWidth />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField type='text' label='Descripción'\r\n                                       name='description'\r\n                                       onChange={e => onChange(e)}\r\n                                       value={data.description === null ? '' : data.description}\r\n                                       fullWidth/>\r\n                        </Grid>\r\n                        <br/>\r\n                        <Grid item xs={12} className='center'>\r\n                            <Alert show={err!==null} message={err} />\r\n                            { http.loader && <LinearProgress color=\"secondary\" />}\r\n                            <br/>\r\n                            <Button type='submit' color='primary'\r\n                                    disabled={http.loader}\r\n                                    variant='contained'>\r\n                                { method === 'post' ? 'Guardar' : 'Actualizar' }\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n    </form>\r\n    );\r\n};\r\nFrmZone.defaultProps = {\r\n    method: 'post',\r\n    url: '/route',\r\n    redirect: ZONE_LIST,\r\n    initialZone: {\r\n        name: '',\r\n        description: ''\r\n    }\r\n};\r\n\r\nexport default withRouter(FrmZone);\r\n","import React from 'react';\r\nimport {Container, Divider, Icon, Paper} from \"@material-ui/core\";\r\nimport Master from \"../Master\";\r\nimport FrmZone from \"./_form/FrmZone\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport WithAdminContent from \"../_partials/hoc/WithAdminContent\";\r\n\r\nconst UpdateZone = ({match, history}) => {\r\n\r\n    const id = match.params.id;\r\n    const zone = useGet(`/route/${id}`);\r\n\r\n    return (\r\n        <Master>\r\n            <WithLoader loader={zone.loader} text={'Cargando zona...'}>\r\n                <WithAdminContent>\r\n                    <Container maxWidth='sm' component={Paper} className='paper-content'>\r\n                        <div className='paper-header'>\r\n                            <h4> <Icon>map</Icon> Actualizar Ruta/Zona</h4>\r\n                            <Divider />\r\n                        </div>\r\n                        <FrmZone method={'put'} url={`/route/${id}`} initialZone={zone.data} />\r\n                    </Container>\r\n                </WithAdminContent>\r\n            </WithLoader>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default UpdateZone;\r\n","import React from 'react';\r\nimport FrmZone from \"./_form/FrmZone\";\r\nimport Master from \"../Master\";\r\nimport {Container, Divider, Icon, Paper} from \"@material-ui/core\";\r\nimport WithAdminContent from \"../_partials/hoc/WithAdminContent\";\r\n\r\nconst RegisterZone = () => {\r\n    return (\r\n        <Master>\r\n            <WithAdminContent>\r\n                <Container maxWidth='sm' component={Paper} className='paper-content'>\r\n                    <div className='paper-header'>\r\n                        <h4> <Icon>map</Icon> Agregar Rutas/Zonas</h4>\r\n                        <Divider />\r\n                    </div>\r\n                    <FrmZone method={'post'} initialZone={{name: '', description: ''}} />\r\n                </Container>\r\n            </WithAdminContent>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default RegisterZone;\r\n","import React from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Axios from \"axios\";\r\nimport {toast} from \"react-toastify\";\r\nimport {Grid, Paper} from '@material-ui/core';\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport {tableMinOptions} from \"../../config/config\";\r\nimport {processErrors} from \"../../utils/utils\";\r\n\r\nclass DetailEmploy extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            loader: false,\r\n            data: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.employ !== prevProps.employ) {\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n\r\n    loadData () {\r\n        this.setLoader(true);\r\n        if(this.props.employ !== null) {\r\n            let url = `/employ/info/${this.props.employ}`;\r\n            if (this.props.now!==null) url = `/employ/info/${this.props.employ}?now=${this.props.now}`;\r\n\r\n            Axios.get(url).then(res => {\r\n                if(res.ok) {\r\n                    this.setState({\r\n                        data: res.data\r\n                    })\r\n                }\r\n            }).catch(err => {\r\n                const msg = processErrors(err);\r\n                toast.error(msg);\r\n            }).finally(() => this.setLoader(false));\r\n        } else {\r\n            this.setState({\r\n                data: null\r\n            })\r\n        }\r\n    }\r\n\r\n    setLoader (value) {\r\n        this.setState({\r\n            loader: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <WithLoader loader={this.state.loader} text={'Cargando datos de empleado...'}>\r\n                    {\r\n                        this.state.data !== null &&\r\n                        <Grid container spacing={2}>\r\n                            {this.state.data.pays.length > 0 && <Grid item xs={12} md={this.props.md}>\r\n                                <MUIDataTable\r\n                                    title={`Pagos de sueldo (${this.state.data.pays.length})`}\r\n                                    data={this.state.data.pays}\r\n                                    columns={[\r\n                                        {label: 'CONCEPTO', name: 'concept'},\r\n                                        {label: 'FECHA', name: 'date'},\r\n                                        {label: 'TOTAL', name: 'total'},\r\n                                    ]}\r\n                                    options={tableMinOptions}\r\n                                />\r\n                            </Grid>}\r\n                            {this.state.data.credits.length >0 && <Grid item xs={12} md={this.props.md}>\r\n                                <MUIDataTable\r\n                                    title={`Créditos (${this.state.data.credits.length})`}\r\n                                    data={this.state.data.credits}\r\n                                    columns={[\r\n                                        {label: 'PLAZO', name: 'plazo'},\r\n                                        {label: 'COBRO', name: 'cobro'},\r\n                                        {label: 'UTILIDAD', name: 'utilidad'},\r\n                                        {label: 'TOTAL', name: 'total'},\r\n                                    ]}\r\n                                    options={tableMinOptions} />\r\n\r\n                            </Grid>}\r\n                            {this.state.data.expenses.length>0 &&\r\n                            <Grid item xs={12} md={this.props.md}>\r\n                                <MUIDataTable\r\n                                    title={`Gatos (${this.state.data.expenses.length})`}\r\n                                    data={this.state.data.expenses}\r\n                                    columns={[\r\n                                        {label: 'CONCEPTO', name: 'category'},\r\n                                        {label: 'FECHA', name: 'date'},\r\n                                        {label: 'TOTAL', name: 'monto'},\r\n\r\n                                    ]}\r\n                                    options={tableMinOptions} />\r\n                            </Grid>\r\n                            }\r\n                            {\r\n                                this.state.data.cobros > 0 &&\r\n                                    <Grid item xs={12} md={this.props.md}>\r\n                                        <Paper style={{padding: 10}} elevation={3}>\r\n                                            <h3>COBRO TOTAL: </h3>\r\n                                            {this.state.data.cobros}\r\n                                        </Paper>\r\n                                    </Grid>\r\n                            }\r\n\r\n                        </Grid>\r\n                    }\r\n\r\n                </WithLoader>\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nDetailEmploy.defaultProps = {\r\n    md: 6,\r\n    now: null\r\n};\r\n\r\nexport default DetailEmploy;\r\n","import React, {useState} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    LinearProgress, MenuItem,\r\n    Select,\r\n    TextField, Divider\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport Alert from \"../../_partials/Alert\";\r\nimport useHttp from \"../../../utils/useHttp\";\r\nimport {toast} from \"react-toastify\";\r\nimport moment from \"moment\";\r\nimport DetailEmploy from \"../DetailEmploy\";\r\n\r\nconst FrmPayRoll = ({ employs, employ }) => {\r\n\r\n    const [data, setData] = useState({\r\n        employ_id:      (employ) ? employ.id : null,\r\n        amount:         (employ) ? employ.sueldo: 0,\r\n        selectedDate:   moment(),\r\n        extra:          0,\r\n        bonus:          0,\r\n        discount:       0,\r\n        date:           moment().format('YYYY-MM-DD'),\r\n        description:    '',\r\n        advance:        false,\r\n        concept:        'PAGO DE SUELDO'\r\n    });\r\n\r\n    const [err, setErr] = useState(null);\r\n\r\n    const httpStore = useHttp();\r\n\r\n    const onSubmit = (e) => {\r\n      e.preventDefault();\r\n      setErr(null);\r\n\r\n      httpStore.request('/payroll', data).then(res => {\r\n          if(res.ok) {\r\n              toast.success('Pago de Sueldo exitoso');\r\n          }\r\n      }).catch(err => setErr(err))\r\n    };\r\n\r\n    const onChangeEmploy = (option, value) => {\r\n        setData({...data, employ_id: null})\r\n        if (value!==null){\r\n\r\n            setData({\r\n                ...data,\r\n                employ_id: value.id,\r\n                amount: value.sueldo\r\n            });\r\n\r\n        }\r\n        else{\r\n            setData({...data, employ_id: null})\r\n        }\r\n    };\r\n\r\n    const onChangeDate = date => {\r\n        setData({\r\n            ...data,\r\n            selectedDate: date,\r\n            date: moment(date).format('YYYY-MM-DD')\r\n        });\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value});\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n            <Grid container spacing={3}>\r\n                {/*Nombre*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    {\r\n                        employs &&\r\n                            <Autocomplete\r\n                                id=\"employ_id\"\r\n                                options={employs.data}\r\n                                onChange={(option, value) => onChangeEmploy(option, value)}\r\n                                getOptionLabel={option => (option.name+' '+option.surname).toUpperCase() }\r\n                                renderInput={params => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        required\r\n                                        label=\"Empleado\" variant=\"standard\" fullWidth />\r\n                                )}\r\n                            />\r\n                    }\r\n                    {\r\n                        employs === null && employ.name &&\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"employ_id_2\">Empleado</InputLabel>\r\n                                <Select\r\n                                    labelId=\"employ_id_2\"\r\n                                    name={'employ_id'}\r\n                                    value={data.employ_id}\r\n                                    fullWidth >\r\n                                    <MenuItem value={employ.id}>{employ.name + ' ' + employ.surname}</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                    }\r\n\r\n                </Grid>\r\n                {/*Date*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"DD/MM/YYYY\"\r\n                        fullWidth\r\n                        autoOk={true}\r\n                        id=\"date\"\r\n                        label=\"Fecha de pago\"\r\n                        value={data.selectedDate}\r\n                        onChange={(date) => onChangeDate(date)}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'Cambiar Fecha',\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                {/*Monto*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='number' label='Monto $'\r\n                               name='amount'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.amount}\r\n                               required fullWidth/>\r\n                </Grid>\r\n                {/*Bonus*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='number' label='+ Comisión $'\r\n                               name='bonus'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.bonus}\r\n                               fullWidth/>\r\n                </Grid>\r\n                {/*Extra*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='number' label='+ Valor Adicional $'\r\n                               name='extra'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.extra}\r\n                               fullWidth/>\r\n                </Grid>\r\n                {/*Descuento*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='number' label='- Descuento $'\r\n                               name='discount'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.discount}\r\n                               fullWidth/>\r\n                </Grid>\r\n                {/*Description*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        id=\"description\"\r\n                        label=\"Detalle | Observación\"\r\n                        multiline\r\n                        rows=\"4\"\r\n                        fullWidth\r\n                        name='description'\r\n                        onChange={e => onChange(e)}\r\n                        value={data.description}\r\n                    />\r\n                </Grid>\r\n                {/*Adelnto y Concepto*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox checked={data.advance}\r\n                                      onChange={e => setData({\r\n                                          ...data,\r\n                                          advance: !data.advance,\r\n                                            concept: (!data.advance) ? 'ADELANTO DE SUELDO' : 'PAGO DE SUELDO'\r\n                                      })}\r\n                                      value=\"advance\" />\r\n                        }\r\n                        label=\"ADELANTO\"\r\n                    />\r\n                    <TextField\r\n                        id=\"concept\"\r\n                        label=\"Concepto\"\r\n                        multiline\r\n                        disabled\r\n                        rows=\"2\"\r\n                        fullWidth\r\n                        name='concept'\r\n                        value={data.concept}\r\n                    />\r\n                </Grid>\r\n                {/*Submit*/}\r\n                <Grid item xs={12} className='center'>\r\n                    <Alert show={err!==null} message={err} />\r\n                    { httpStore.loader && <LinearProgress color=\"secondary\" />}\r\n                    <br/>\r\n                    <Button type='submit' color='primary'\r\n                            disabled={httpStore.loader}\r\n                            variant='contained'>\r\n                        Pagar Sueldo\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n            {\r\n                data.employ_id !== null && <>\r\n                    <br/>\r\n                    <Divider /> <br />\r\n                    <DetailEmploy employ={data.employ_id} /></>\r\n            }\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nFrmPayRoll.defaultProps = {\r\n  employs: null,\r\n  employ: null\r\n};\r\n\r\nexport default FrmPayRoll;\r\n","import React from 'react';\r\nimport FrmPayRoll from \"./_form/FrmPayRoll\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport Master from \"../Master\";\r\nimport {Container, Divider, Icon, Paper, Grid} from \"@material-ui/core\";\r\nimport WithAdmin from \"../_partials/hoc/WithAdmin\";\r\n\r\nconst RegisterPayRoll = () => {\r\n    const employs = useGet('/employ');\r\n\r\n    return (\r\n        <Master>\r\n            <WithAdmin>\r\n                <Container maxWidth='lg' component={Paper} className='paper-content'>\r\n                    <div className='paper-header'>\r\n                        <h4> <Icon>payment</Icon> Pagar sueldo</h4>\r\n                        <Divider />\r\n                    </div>\r\n                    <Grid container>\r\n                        <Grid item xs={12} md={12}>\r\n                            <FrmPayRoll employs={employs}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </WithAdmin>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default RegisterPayRoll;\r\n","import React from 'react';\r\nimport Master from \"../Master\";\r\nimport {Container, Divider, Grid, Icon, Paper} from \"@material-ui/core\";\r\nimport FrmPayRoll from \"./_form/FrmPayRoll\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport WithAdmin from \"../_partials/hoc/WithAdmin\";\r\n\r\nconst RegisterPayRollUser = ({match}) => {\r\n\r\n    const id = match.params.id;\r\n    const employ = useGet(`/employ/${id}`);\r\n\r\n    return (\r\n        <Master>\r\n            <WithAdmin>\r\n                <WithLoader loader={employ.loader}>\r\n                    <Container maxWidth='lg' component={Paper} className='paper-content'>\r\n                        <div className='paper-header'>\r\n                            <h4> <Icon>payment</Icon> Pagar sueldo</h4>\r\n                            <Divider />\r\n                        </div>\r\n                        <Grid container>\r\n\r\n                                    <>\r\n                                        {\r\n                                            employ &&\r\n                                            <Grid item xs={12}>\r\n                                                <FrmPayRoll employ={employ.data}/>\r\n                                            </Grid>\r\n                                        }\r\n                                    </>\r\n                        </Grid>\r\n                    </Container>\r\n                </WithLoader>\r\n            </WithAdmin>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default RegisterPayRollUser;\r\n","import React from 'react';\r\nimport useGet from \"../../utils/useGet\";\r\nimport {Checkbox, Container, Divider, FormControlLabel, Grid, Icon, Paper, TextField} from \"@material-ui/core\";\r\nimport Master from \"../Master\";\r\nimport WithAdmin from \"../_partials/hoc/WithAdmin\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport DetailEmploy from \"./DetailEmploy\";\r\n\r\nconst ShowPayRoll = ({match}) => {\r\n    const id = match.params.id;\r\n    const payroll = useGet(`/payroll/${id}`);\r\n    return (\r\n        <Master>\r\n            <WithAdmin>\r\n                <WithLoader loader={payroll.loader} text={'Cargando rol...'}>\r\n                    <Container maxWidth='lg' component={Paper} className='paper-content'>\r\n                        <div className='paper-header'>\r\n                            <h4> <Icon>payment</Icon> {(payroll.data.status === 1) ? 'Sueldo Pagado' : <div style={{color: 'red'}}>Pago Anulado</div>}</h4>\r\n                            <Divider />\r\n                        </div>\r\n                        <Grid container spacing={3}>\r\n\r\n                            {/*Nombre*/}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    label={'Empleado'}\r\n                                    fullWidth\r\n                                    value={(payroll.data.name + ' ' +payroll.data.surname ).toUpperCase()} readOnly/>\r\n                            </Grid>\r\n\r\n                            {/*Fecha*/}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    label={'Fecha'}\r\n                                    fullWidth\r\n                                    value={payroll.data.date} readOnly/>\r\n                            </Grid>\r\n\r\n                            {/*Monto*/}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField type='number' label='Monto $'\r\n                                           name='amount'\r\n                                           value={payroll.data.amount}\r\n                                           readOnly fullWidth/>\r\n                            </Grid>\r\n                            {/*Bonus*/}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField type='number' label='+ Comisión $'\r\n                                           name='bonus'\r\n                                           readOnly value={payroll.data.bonus}\r\n                                           fullWidth/>\r\n                            </Grid>\r\n                            {/*Extra*/}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField type='number' label='+ Valor Adicional $'\r\n                                           name='extra'\r\n                                           readOnly\r\n                                           value={payroll.data.extra}\r\n                                           fullWidth/>\r\n                            </Grid>\r\n                            {/*Descuento*/}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField type='number' label='- Descuento $'\r\n                                           name='discount'\r\n                                           readOnly\r\n                                           value={payroll.data.discount}\r\n                                           fullWidth/>\r\n                            </Grid>\r\n                            {/*Description*/}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    id=\"description\"\r\n                                    label=\"Detalle | Observación\"\r\n                                    multiline\r\n                                    rows=\"4\"\r\n                                    fullWidth\r\n                                    name='description' readOnly\r\n                                    value={payroll.data.description}\r\n                                />\r\n                            </Grid>\r\n                            {/*Adelnto y Concepto*/}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox checked={payroll.data.advance}\r\n                                                  disabled\r\n                                                  value=\"advance\" />\r\n                                    }\r\n                                    label=\"ADELANTO\"\r\n                                />\r\n                                <TextField\r\n                                    id=\"concept\"\r\n                                    label=\"Concepto\"\r\n                                    multiline\r\n                                    disabled\r\n                                    rows=\"2\"\r\n                                    fullWidth\r\n                                    name='concept'\r\n                                    value={payroll.data.concept}\r\n                                />\r\n                            </Grid>\r\n\r\n                            {\r\n                                payroll.data && payroll.data.employ_id &&\r\n                                <Grid item xs={12} md={12} style={{ marginTop: 10 }}>\r\n                                    <Divider/>\r\n                                    <br/>\r\n                                    <DetailEmploy employ={payroll.data.employ_id} now={payroll.data.date}/>\r\n                                </Grid>\r\n                            }\r\n\r\n                        </Grid>\r\n\r\n                    </Container>\r\n                </WithLoader>\r\n            </WithAdmin>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default ShowPayRoll;\r\n","import React from 'react';\r\nimport Master from \"../Master\";\r\nimport MUIDataTable from 'mui-datatables'\r\nimport {\r\n    Chip,\r\n    Icon,\r\n    IconButton,\r\n} from \"@material-ui/core\";\r\n\r\nimport useGet from \"../../utils/useGet\";\r\nimport useHttp from \"../../utils/useHttp\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport WithAdminContent from \"../_partials/hoc/WithAdminContent\";\r\nimport {tableOptions} from \"../../config/config\";\r\nimport {toast} from \"react-toastify\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {PAYROLL_SHOW, toName} from \"../../config/urls\";\r\n\r\nconst ListPayRoll = () => {\r\n\r\n    const pays = useGet('/payroll');\r\n\r\n    const columns = [\r\n        { label: 'NOMBRE', name: 'name',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return value.toUpperCase();}\r\n            }\r\n        },\r\n        { label: 'APELLIDO', name: 'surname',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return value.toUpperCase();}\r\n            }\r\n        },\r\n        { label: 'CONCEPTO', name: 'concept'},\r\n        { label: 'FECHA', name: 'date', options: {filter: false}},\r\n        { label: 'OBSERV.', name: 'description',\r\n            options: {\r\n            filter: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (<div>{value ? value: 'Ninguna'}</div>)\r\n            }\r\n        },\r\n        },\r\n        { label: 'TOTAL', name: 'total', options: {filter: false}},\r\n        { label: 'ESTADO', name: 'status',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            { value === 1 &&\r\n                            <>\r\n                                <Chip\r\n                                    label={\"Correcto\"}\r\n                                    className={'bg-green'}/>\r\n                            </>\r\n                            }\r\n                            { value === -1 &&\r\n                            <>\r\n                                <Chip\r\n                                    label=\"Anulado\"\r\n                                    className={'bg-red'}/>\r\n                            </>\r\n                            }\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        },\r\n        {\r\n            label: 'OPCIONES', name: 'id',\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            <IconButton onClick={() => onSubmit(value)}\r\n                                        size={\"small\"}\r\n                                        aria-label=\"Anular\">\r\n                                <Icon>block</Icon>\r\n                            </IconButton>\r\n\r\n                            <IconButton component={Link} to={toName(PAYROLL_SHOW, {id: value})}\r\n                                        size={\"small\"}\r\n                                        aria-label=\"Ver\">\r\n                                <Icon>visibility</Icon>\r\n                            </IconButton>\r\n                        </div>\r\n                    );\r\n                },\r\n            }\r\n        }\r\n    ];\r\n    const invalidatePay = useHttp('delete');\r\n\r\n    const onSubmit = (selectedId) => {\r\n        let description = window.prompt('Ingrese el motivo de la anulación para confirmar');\r\n\r\n        if (!description) return;\r\n\r\n        invalidatePay.request(`/payroll/${selectedId}`, {description: description})\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    let index = pays.data.findIndex(p => p.id === selectedId);\r\n                    pays.data[index].status = -1;\r\n                    toast.success(res.message);\r\n                    const data = pays.data;\r\n                    pays.setData();\r\n                    pays.setData(data);\r\n                }\r\n            }).catch(err => {\r\n                toast.error(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Master>\r\n            <WithLoader loader={pays.loader} text={'Cargando roles...'}>\r\n                <WithAdminContent>\r\n                    <MUIDataTable\r\n                        columns={columns}\r\n                        data={pays.data}\r\n                        options={tableOptions}\r\n                        title={'Roles de pagos'}/>\r\n                </WithAdminContent>\r\n            </WithLoader>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default ListPayRoll;\r\n","import React, {useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Button, Grid, LinearProgress, TextField} from \"@material-ui/core\";\r\nimport useHttp from \"../../../utils/useHttp\";\r\nimport {toast} from \"react-toastify\";\r\nimport {CLIENT_LIST} from \"../../../config/urls\";\r\nimport Alert from \"../../_partials/Alert\";\r\n\r\nconst FrmClient = ({ method, url, initialData, history, children }) => {\r\n\r\n    const http = useHttp(method);\r\n    const [err, setErr] = useState(null);\r\n    const [data, setData] = useState(initialData);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setErr(null);\r\n        http.request(url, data).then(res => {\r\n            if(res.ok && method==='post') {\r\n                toast.success('Cliente Guardado con éxito');\r\n                history.push(CLIENT_LIST);\r\n            }\r\n\r\n            if(res.ok && method==='put') {\r\n                toast.success(res.message);\r\n            }\r\n        }).catch(err =>{\r\n            setErr(err);\r\n        })\r\n    };\r\n\r\n\r\n    const onChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value});\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <Grid container spacing={3}>\r\n                    <div className={'grid-title'}>\r\n                        <p>Datos Básicos</p>\r\n                    </div>\r\n                    {/*Nombre*/}\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField type='text' label='Nombre'\r\n                                   name='name'\r\n                                   onChange={e => onChange(e)}\r\n                                   value={data.name.toUpperCase()}\r\n                                   required fullWidth autoFocus/>\r\n                    </Grid>\r\n                    {/*Apellido*/}\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField type='text' label='Apellido'\r\n                                   name='surname'\r\n                                   onChange={e => onChange(e)}\r\n                                   value={data.surname.toUpperCase()}\r\n                                   fullWidth />\r\n                    </Grid>\r\n                    {/*Dirección*/}\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField type='address' label='Dirección'\r\n                                   name='address'\r\n                                   onChange={e => onChange(e)}\r\n                                   value={data.address}\r\n                                   required fullWidth />\r\n                    </Grid>\r\n\r\n                    {/*Email*/}\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField type='email' label='Correo: '\r\n                                   name='email'\r\n                                   onChange={e => onChange(e)}\r\n                                   value={data.email === null ? '' : data.email}\r\n                                   fullWidth />\r\n                    </Grid>\r\n\r\n                    {/*Teléfono Personal*/}\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField type='phone' label='Teléfono Personal'\r\n                                   name='phones'\r\n                                   inputProps={{maxLength: 13}}\r\n                                   onChange={e => onChange(e)}\r\n                                   value={data.phones}\r\n                                   fullWidth />\r\n                    </Grid>\r\n\r\n                    {/*Teléfono Trabajo*/}\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField type='phone' label='Teléfono Trabajo'\r\n                                   name='phones_b'\r\n                                   inputProps={{maxLength: 13}}\r\n                                   onChange={e => onChange(e)}\r\n                                   value={data.phones_b}\r\n                                   fullWidth />\r\n                    </Grid>\r\n\r\n\r\n\r\n                    {/*Submit btn*/}\r\n                    <Grid item xs={12} className='center'>\r\n                        <Alert show={err!==null} message={err} />\r\n                        { http.loader && <LinearProgress color=\"secondary\" />}\r\n                        <br/>\r\n                        <Button type='submit' color='primary'\r\n                                disabled={http.loader}\r\n                                variant='contained'>\r\n                            { method === 'post' ? 'Guardar' : 'Actualizar' }\r\n                        </Button>\r\n                        { children }\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nFrmClient.defaultProps = {\r\n    method: 'post',\r\n    url: 'client',\r\n    initialData: {\r\n        name: '',\r\n        surname: '',\r\n        address: '',\r\n        phones: '',\r\n        phones_b: '',\r\n        email: ''\r\n    }\r\n};\r\n\r\nexport default withRouter(FrmClient);\r\n","import React from 'react';\r\nimport Master from \"../Master\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport {Container, Divider, Icon, Paper} from \"@material-ui/core\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport FrmClient from \"./_form/FrmClient\";\r\n\r\nconst EditClient = ({match}) => {\r\n\r\n    const id = match.params.id;\r\n\r\n    const client = useGet(`/client/${id}`);\r\n\r\n    return (\r\n        <>\r\n            <Master>\r\n                <WithLoader loader={client.loader} text={'Cargando datos del empleado...'}>\r\n                    <Container maxWidth='md' component={Paper} className='paper-content'>\r\n                        <div className='paper-header'>\r\n                            <h4> <Icon>person_edit</Icon> Editar Cliente</h4>\r\n                            <Divider />\r\n                        </div>\r\n                        {\r\n                            client.data.name !== undefined &&\r\n                            <FrmClient method={'put'} url={`/client/${id}`}\r\n                                       initialData={client.data}/>\r\n                        }\r\n                    </Container>\r\n                </WithLoader>\r\n            </Master>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditClient;\r\n","import React from 'react';\nimport Grow from '@material-ui/core/Grow';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Clear, Search} from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\nimport {CircularProgress} from \"@material-ui/core\";\n\nconst defaultSearchStyles = theme => ({\n  main: {\n    display: 'flex',\n    flex: '1 0 auto',\n    paddingTop: 5,\n  },\n  searchText: {\n    flex: '0.8 0',\n  },\n  clearIcon: {\n    '&:hover': {\n      color: theme.palette.error.main,\n    },\n  },\n});\n\nclass CustomSearchRender extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: props.searchText\n    };\n  }\n\n  handleTextChange = event => {\n    this.setState({searchText: event.target.value});\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.onKeyDown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDown, false);\n  }\n\n  onKeyDown = event => {\n    if (event.keyCode === 27) {\n      this.props.onHide();\n    }\n\n    if (event.keyCode === 13) {\n      this.onHandleSearch();\n    }\n  };\n\n  onHandleSearch = () => {\n    if(!this.state.searchText) return;\n    this.props.onSearch(this.state.searchText);\n  };\n\n  render() {\n    const { classes, options, onHide, loader, placeholder } = this.props;\n\n    return (\n      <Grow appear in={true} timeout={300}>\n        <div className={classes.main} ref={el => (this.rootRef = el)}>\n          <TextField\n            placeholder={placeholder}\n            className={classes.searchText}\n            InputProps={{\n              'aria-label': options.textLabels.toolbar.search,\n            }}\n            autoFocus={true}\n            disabled={loader}\n            value={this.state.searchText || ''}\n            onChange={this.handleTextChange}\n            fullWidth={true}\n            inputRef={el => (this.searchField = el)}\n          />\n\n          <IconButton onClick={this.onHandleSearch} color={'primary'}>\n            <Search />\n          </IconButton>\n\n\n          {\n            !loader &&\n            <IconButton className={classes.clearIcon} onClick={onHide}>\n              <Clear />\n            </IconButton>\n          }\n          {\n            loader &&\n            <IconButton className={classes.clearIcon}>\n              <CircularProgress size={24} style={{marginLeft: 15, position: 'relative', top: 4}} />\n            </IconButton>\n          }\n\n        </div>\n      </Grow>\n    );\n  }\n}\n\nCustomSearchRender.defaultProps = {\n  placeholder: 'Buscar'\n};\n\nexport default withStyles(defaultSearchStyles, { name: 'CustomSearchRender' })(CustomSearchRender);\n","import React from 'react';\r\nimport {Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText, Button} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DlgConfirm = ({onClose, onConfirm, open, title, desc, loader}) => {\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {desc}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"primary\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"secondary\" onClick={onConfirm} disabled={loader}>\r\n                    {loader ? 'Espere...': 'Aceptar'}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\nDlgConfirm.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    onConfirm: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    title: PropTypes.string,\r\n    desc: PropTypes.string,\r\n    loader: PropTypes.bool\r\n};\r\nDlgConfirm.defaultProps = {\r\n    title: 'Confirmar',\r\n    desc: '¿Esta seguro que desea realizar esta acción?',\r\n    loader: false\r\n};\r\nexport default DlgConfirm;\r\n","import React, {useState} from 'react';\r\nimport {Chip, Icon, IconButton, Tooltip} from \"@material-ui/core\";\r\nimport {ArrowDownward, ArrowUpward} from \"@material-ui/icons\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {toast} from \"react-toastify\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {PersonAdd} from '@material-ui/icons'\r\nimport {CLIENT_ADD, CLIENT_EDIT, CREDIT_BY_CLIENT, toName} from \"../../config/urls\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport useHttp from \"../../utils/useHttp\";\r\nimport Master from \"../Master\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport {tableOptions} from \"../../config/config\";\r\nimport CustomSearchRender from \"../_partials/CustomSearchRender\";\r\nimport WithAdmin from \"../_partials/hoc/WithAdmin\";\r\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\r\nimport DlgConfirm from \"../_partials/_modals/DlgConfirm\";\r\n\r\nconst ListClient = () => {\r\n    const clients = useGet('/client');\r\n    const search = useHttp('get');\r\n    const remove = useHttp('delete');\r\n    const status = useHttp('put');\r\n\r\n    const [selectClient, setSelectClient] = useState(null);\r\n    const [dlgConfirm, setDlgConfirm] = useState(false);\r\n\r\n    const [q, setQ] = useState('');\r\n\r\n    const columns = [\r\n        {name: \"id\", label: 'ID', options: {display: 'false', filter: false}},\r\n        {\r\n            name: 'name', label: 'NOMBRE',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return value.toUpperCase();}}\r\n        },\r\n        {\r\n            name: 'surname', label: 'APELLIDO',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return value.toUpperCase();}}\r\n        },\r\n        {\r\n            name: 'phones', label: 'TELÉFONO', options: {filter: false}\r\n        },\r\n        {\r\n            name: 'rank', label: 'RANK', options: {filter: false}\r\n        },\r\n        {\r\n          name: 'mora', label: 'MORATORIA', options: {\r\n              customBodyRender: (value) => {\r\n                  return <>\r\n                      { value === 1 && <Chip label={'SI'} size={'small'} className={'bg-red'} />}\r\n                      { value === 0 && <Chip label={'NO'} size={'small'} />}\r\n                  </>\r\n              }\r\n            }\r\n        },\r\n        {\r\n            name: 'status', label: 'ESTADO', options: {\r\n                filter: true,\r\n                customFilterListOptions: { render: v => `Estado: ${v}` },\r\n\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            { value === 1 &&\r\n                            <>\r\n                                <Chip\r\n                                    size={'small'}\r\n                                    label={\"Activo\"}\r\n                                    className={'bg-green'}/>\r\n                                    <WithAdmin>\r\n                                        <Tooltip title={'Dar de BAJA'}>\r\n                                            <IconButton size={\"small\"}\r\n                                                        onClick={() => changeStatus(tableMeta.rowData[0], updateValue)}\r\n                                                        aria-label=\"Dar de baja\">\r\n                                                <ArrowDownward/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </WithAdmin>\r\n                            </>\r\n                            }\r\n                            { value === 0 &&\r\n                            <>\r\n                                <Chip\r\n                                    size={'small'}\r\n                                    label=\"Inactivo\"\r\n                                    className={'bg-red'}/>\r\n                                    <Tooltip title={'Dar de ALTA'}>\r\n                                        <IconButton size={\"small\"}\r\n                                                    onClick={() => changeStatus(tableMeta.rowData[0], updateValue)}\r\n                                                    aria-label=\"Dar de alta\">\r\n                                            <ArrowUpward/>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                            </>\r\n                            }\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        },\r\n        {\r\n            label: 'OPCIONES', name: 'id',\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <WithAdmin>\r\n                            <Tooltip title={'Poner este cliente en Mora'}>\r\n                                <IconButton\r\n                                    onClick={() => addSelectClient(value)}\r\n                                    size={\"small\"}\r\n                                    aria-label=\"Poner en cliente en Mora\">\r\n                                    <MoneyOffIcon/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={'Historial de Créditos'}>\r\n                                <IconButton component={Link}\r\n                                            to={toName(CREDIT_BY_CLIENT, {id: value})}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"Historial de créditos\">\r\n                                    <Icon>list_alt</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={'Editar Cliente'}>\r\n                                <IconButton component={Link}\r\n                                            to={toName(CLIENT_EDIT, {id: value})}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"Editar\">\r\n                                    <Icon>edit</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={'Eliminar Cliente'}>\r\n                                <IconButton onClick={() => deleteClient(value, updateValue)}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"delete\">\r\n                                    <Icon>delete</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </WithAdmin>\r\n                    );\r\n                },\r\n            }\r\n        }\r\n    ];\r\n\r\n    const changeStatus = (clientId, updateValue) => {\r\n        status.request(`/client/cancel/${clientId}`).then(res => {\r\n            if(res.ok) {\r\n                let index = clients.data.findIndex(d => d.id === clientId);\r\n\r\n                const status = clients.data[index].status;\r\n                if (status === 1)\r\n                    clients.data[index].status = 0;\r\n                else\r\n                    clients.data[index].status = 1;\r\n\r\n                updateValue(clients.data[index].status);\r\n\r\n                toast.success(res.message);\r\n            }\r\n        }).catch(err => {\r\n            toast.error(err);\r\n        });\r\n    };\r\n\r\n    const deleteClient = (clientId) => {\r\n        if(!window.confirm('¿Esta seguro que desea eliminar este cliente?')) return;\r\n\r\n        remove.request(`/client/${clientId}`).then(res => {\r\n            if(res.ok){\r\n                let index = clients.data.findIndex(d => d.id === clientId);\r\n                clients.data.splice(index, 1);\r\n\r\n                toast.success(res.message);\r\n                const data = clients.data;\r\n                clients.setData();\r\n                clients.setData(data);\r\n            }\r\n        }).catch(err => toast.error(err));\r\n    };\r\n\r\n    const onSearch = (searchText) => {\r\n        let url = '/client';\r\n        if(searchText !== null)\r\n            url = `/client/search?q=${searchText}`;\r\n        setQ(searchText);\r\n        search.request(url).then(res => {\r\n            if (res.ok) {\r\n                clients.setData(res.data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const options = {\r\n        ...tableOptions,\r\n        searchText: q,\r\n        serverSide: true,\r\n        onTableChange: (action, tableState) => {\r\n            switch (action) {\r\n                case 'search':\r\n                   onSearch(tableState.searchText);\r\n                   break;\r\n                default:\r\n                    return;\r\n            }\r\n        },\r\n        customSearchRender: (searchText, handleSearch, hideSearch, options) => {\r\n            return (\r\n                <CustomSearchRender\r\n                    searchText={searchText}\r\n                    onSearch={handleSearch}\r\n                    onHide={hideSearch}\r\n                    options={options}\r\n                    loader={search.loader}\r\n                />\r\n            );\r\n        }\r\n\r\n    };\r\n\r\n    const HeaderTitle = () => {\r\n        return (\r\n            <div className={'header-btn'}>\r\n                <h3>CLIENTES</h3>\r\n                <IconButton component={Link} to={CLIENT_ADD}>\r\n                    <PersonAdd />\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const addSelectClient = (clientId) => {\r\n        setSelectClient(clientId);\r\n        setDlgConfirm(true);\r\n    };\r\n\r\n    const markMora = () => {\r\n        if (!selectClient) {\r\n            toast.error('Vuelva a seleccionar un cliente primero');\r\n            return;\r\n        }\r\n\r\n        status.request(`/client/mora/${selectClient}`).then(res => {\r\n            if (res.ok) {\r\n                setDlgConfirm(false);\r\n                toast.success(res.message);\r\n            }\r\n        }).catch(err => toast.error(err));\r\n    };\r\n\r\n    return (\r\n        <Master>\r\n            <WithLoader loader={clients.loader}>\r\n                    <MUIDataTable\r\n                        title={<HeaderTitle/>}\r\n                        data={clients.data}\r\n                        columns={columns} options={options} />\r\n            </WithLoader>\r\n            <DlgConfirm onConfirm={ () => markMora()}\r\n                        open={dlgConfirm}\r\n                        onClose={() => setDlgConfirm(false)}\r\n                        desc={'¿Estas seguro que deseas marcar este cliente en mora ??'}\r\n                        title={`Marcar cliente CLI-${selectClient} en Mora`} />\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default ListClient;\r\n","import React from 'react';\r\nimport {Container, Divider, Icon, Paper} from \"@material-ui/core\";\r\nimport Master from \"../Master\";\r\nimport FrmClient from \"./_form/FrmClient\";\r\n\r\nconst RegisterClient = () => {\r\n    return (\r\n        <>\r\n            <Master>\r\n                <Container maxWidth='md' component={Paper} className='paper-content'>\r\n                    <div className='paper-header'>\r\n                        <h4> <Icon>person_add</Icon> Agregar Cliente</h4>\r\n                        <Divider />\r\n                    </div>\r\n                    <FrmClient method={'post'} />\r\n                </Container>\r\n            </Master>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RegisterClient;\r\n","import React from 'react';\r\nimport {GoogleApiWrapper} from 'google-maps-react';\r\nimport {CircularProgress, Paper} from \"@material-ui/core\";\r\n\r\nconst Loading = () => <Paper elevation={0} className=\"loader-container\"> <CircularProgress color=\"secondary\"/> <p>Cargando mapa...</p> </Paper>;\r\n\r\nexport default (WrappedComponent) => {\r\n    const WithMapKey = ({...props}) => <WrappedComponent {...props} />\r\n\r\n    return GoogleApiWrapper({\r\n        apiKey: 'AIzaSyAdoB5hIORuaqfcPStZX8r61NCu2vV7xwE',\r\n        //libraries: ['places', 'visualization'],\r\n        LoadingContainer: Loading\r\n    })(WithMapKey)\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Map, Marker} from 'google-maps-react';\r\nimport PropTypes from 'prop-types';\r\nimport WithMapKey from \"./WithMapKey\";\r\nclass MapViewLoc extends Component {\r\n\r\n    render() {\r\n            return (\r\n                <Map className={'google-map'}\r\n                     google={this.props.google}\r\n                     initialCenter={{\r\n                         lat: this.props.lat,\r\n                         lng: this.props.lon\r\n                     }}\r\n                     zoom={15} >\r\n                    <Marker id={1} title={this.props.description}\r\n                            name={this.props.title}>\r\n                    </Marker>\r\n                </Map>\r\n            );\r\n    }\r\n}\r\n\r\nMapViewLoc.defaultProps = {\r\n    height: 450,\r\n    description: '',\r\n    title: 'Ubicación'\r\n};\r\n\r\nMapViewLoc.propTypes = {\r\n    lat: PropTypes.number.isRequired,\r\n    lon: PropTypes.number.isRequired,\r\n    height: PropTypes.number,\r\n    description: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default WithMapKey(MapViewLoc);","import React from 'react';\r\nimport {\r\n    useMediaQuery,\r\n    useTheme,\r\n    Button,\r\n    DialogContent,\r\n    DialogActions, Dialog\r\n} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nimport MapViewLoc from \"../MapViewLoc\";\r\n\r\nconst DialogViewMapLoc = ({isOpen, title, lon, lat, onClose, description}) => {\r\n\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={isOpen}\r\n                maxWidth={'md'}\r\n                onClose={() => onClose()}\r\n                aria-labelledby=\"responsive-dialog-title\">\r\n                <DialogContent className={'map-dialog'}>\r\n                    <div className={'dialog-map-header'}>\r\n                        <h2>{title}</h2>\r\n                        <small className={'text-muted'}>{description}</small>\r\n                    </div>\r\n                    <MapViewLoc lon={lon} lat={lat} title={title} description={description} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={() => onClose()} color=\"primary\">\r\n                        OK\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\nDialogViewMapLoc.propTypes = {\r\n    onClose: PropTypes.func,\r\n    isOpen: PropTypes.bool,\r\n    lon: PropTypes.number.isRequired,\r\n    lat: PropTypes.number.isRequired,\r\n    title: PropTypes.string\r\n};\r\n\r\nDialogViewMapLoc.defaultProps = {\r\n    isOpen: false,\r\n    title: 'Ver Ubicación',\r\n    description: ''\r\n};\r\n\r\nexport default DialogViewMapLoc;\r\n","import React, {useState} from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Button,\r\n    TextField,\r\n    useTheme, useMediaQuery\r\n} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DlgInput = ({open, onClose, onConfirm, title, desc, inputLabel, loader}) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <Dialog open={open}\r\n                onEnter={() => setText('')}\r\n                onClose={onClose} aria-labelledby=\"form-dialog-title\" fullScreen={fullScreen}>\r\n            <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {desc}\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    multiline={true}\r\n                    rows={2}\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                    label={inputLabel}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button color={'primary'}  onClick={onClose}>\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"secondary\" onClick={() => onConfirm(text)} disabled={loader}>\r\n                    { loader ? 'Espere...' : 'Anular'}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nDlgInput.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    onConfirm: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onFieldChange: PropTypes.func,\r\n    title: PropTypes.string,\r\n    desc: PropTypes.string,\r\n    inputLabel: PropTypes.string,\r\n    loader: PropTypes.bool\r\n};\r\n\r\nDlgInput.defaultProps = {\r\n    title: 'Confirmar',\r\n    desc: 'Ingrese el motivo de la anulación',\r\n    inputLabel: 'Motivo de la anulación',\r\n    loader: false,\r\n};\r\n\r\nexport default DlgInput;\r\n","import React, {forwardRef, useImperativeHandle, useState} from 'react';\r\nimport DialogViewMapLoc from \"../../maps/_dialog/DialogViewMapLoc\";\r\nimport DlgInput from \"../../_partials/_modals/DlgInput\";\r\nimport DlgConfirm from \"../../_partials/_modals/DlgConfirm\";\r\nimport {toast} from \"react-toastify\";\r\nimport useHttp from \"../../../utils/useHttp\";\r\n\r\nconst DlgListCredit = forwardRef(({credit}, ref) => {\r\n    const reqUpdate = useHttp('put');\r\n\r\n    // Dialogs\r\n    const [dialogMap, setDialogMap] = useState(false);\r\n    const [dialogInput, setDialogInput] = useState(false);\r\n    const [dialogConfirm, setDialogConfirm] = useState(false);\r\n\r\n    // Anular crédito\r\n    const cancelCredit = (motivo) => {\r\n        if (!motivo) {\r\n            toast.warn('Es necesario especificar el motivo de la anulación');\r\n            return;\r\n        }\r\n        reqUpdate.request(`/credit/cancel/${credit}`, {description: motivo}).then(res => {\r\n            if (res.ok) {\r\n                setDialogInput(false);\r\n                toast.success('Crédito anulado con éxito');\r\n            }\r\n        }).catch(err => {\r\n            toast.error(err);\r\n        })\r\n    };\r\n\r\n    // finalizar crédito\r\n    const finishCredit = () => {\r\n        if (!credit) {\r\n            toast.error('Vuelve a seleccionar el crédito que deseas finalizar');\r\n            return;\r\n        }\r\n\r\n        reqUpdate.request(`/credit/end/${credit}`).then(res => {\r\n            if (res.ok) {\r\n                toast.success('El crédito fué finalizado con éxito');\r\n                setDialogConfirm(false);\r\n            }\r\n        }).catch(err => toast.error(err));\r\n    };\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n\r\n        openConfirm() {\r\n            setDialogConfirm(true);\r\n        },\r\n\r\n        openInput() {\r\n            setDialogInput(true);\r\n        },\r\n\r\n        openMap() {\r\n            setDialogMap(true);\r\n        }\r\n\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            {/*Ver la localización*/\r\n                credit && credit.geo_lon && credit.geo_lat &&\r\n                <DialogViewMapLoc\r\n                    title={`${credit.client.toUpperCase()}`}\r\n                    description={`${credit.address}  ${ (credit.ref_detail) ? ' - '+credit.ref_detail : '' }`}\r\n                    isOpen={dialogMap}\r\n                    onClose={() => setDialogMap(false)}\r\n                    lon={parseFloat(credit.geo_lon)} lat={parseFloat(credit.geo_lat)} />\r\n            }\r\n            {/*------------ | CONFIRMAR ANULACIÓN | ------------*/\r\n                credit &&\r\n                <DlgInput title={`Anular crédito COD-${credit}`}\r\n                          desc={`¿Estás seguro de que deseas anular el crédito COD-${credit}?`}\r\n                          onClose={() => setDialogInput(false)}\r\n                          open={dialogInput}\r\n                          onConfirm={(e) => cancelCredit(e)}/>\r\n            }\r\n            {/*------------ | CONFIRMAR FINALIZACIÓN | ------------*/\r\n                credit &&\r\n                <DlgConfirm title={`Finalizar crédito COD-${credit}`}\r\n                            desc={`Al finalizar un crédito el sistema entiende que se cumplió con todos los pagos y todo es correcto ¿Desea finalizar?`}\r\n                            onConfirm={() => finishCredit()}\r\n                            open={dialogConfirm}\r\n                            onClose={() => setDialogConfirm(false)}/>\r\n            }\r\n        </>\r\n    );\r\n});\r\n\r\nexport default DlgListCredit;\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport Axios from \"axios\";\r\nimport {Chip, Icon, IconButton, Tooltip} from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport WithLoader from \"../../_partials/hoc/WithLoader\";\r\nimport {money, tableOptions} from \"../../../config/config\";\r\nimport {CREDIT_SHOW, toName} from \"../../../config/urls\";\r\nimport {processErrors, toDate} from \"../../../utils/utils\";\r\nimport {toast} from \"react-toastify\";\r\nimport DlgListCredit from \".././_dialog/DlgListCredit\";\r\nimport CustomSearchRender from \"../../_partials/CustomSearchRender\";\r\nimport useHttp from \"../../../utils/useHttp\";\r\n\r\n\r\nconst TableListCredit = ({personId, userId, searchable}) => {\r\n    const search = useHttp('get');\r\n    const dialog = useRef();\r\n\r\n    // state\r\n    const [credits, setCredits] = useState([]);\r\n    const [loader, setLoader] = useState(false);\r\n    const [credit, setCredit] = useState({geo_lat: null, geo_lon: null});\r\n    const [q, setQ] = useState(''); // para las búsquedas\r\n    const [total, setTotal] = useState(0); // para paginar\r\n    const [filters, setFilters] = useState({\r\n        page: 0,\r\n        rowPerPage: 15\r\n    });\r\n\r\n\r\n    // Obtener todos los creditos\r\n    useEffect(() => {\r\n        const getCredits = () => {\r\n            let url = `/credit?page=${(filters.page+1)}&limit=${filters.rowPerPage}`;\r\n\r\n            if (personId !== null)\r\n                url+= `&person_id=${personId}`;\r\n\r\n            setLoader(true);\r\n            Axios.get(url).then(res => {\r\n                if(res.ok) {\r\n                    setCredits(res.data);\r\n                    setTotal(res.total);\r\n                }\r\n            })\r\n                .catch(err => toast.error(processErrors(err)))\r\n                .finally(() => setLoader(false))\r\n        };\r\n\r\n        getCredits();\r\n    }, [filters, personId]);\r\n\r\n    // Ver localización GPS\r\n    const viewLoc = (creditId) => {\r\n        const cred = credits.find(c => c.id === creditId);\r\n        if(!cred) return;\r\n        setCredit(cred);\r\n        dialog.current.openMap();\r\n    };\r\n\r\n    // confirmar el crédito para anular o finalizar\r\n    const confirmCredit = (creditId, end = false) => {\r\n        if (!creditId) {\r\n            toast.warn('Vuelve a seleccionar crédito');\r\n            return;\r\n        }\r\n\r\n        setCredit(creditId);\r\n\r\n        if (!end)\r\n            dialog.current.openInput(true);\r\n        else\r\n            dialog.current.openConfirm(true);\r\n    };\r\n\r\n    // buscar créditos\r\n    const onSearch = (searchText) => {\r\n        let url = `/credit?page=${(filters.page+1)}&limit=${filters.rowPerPage}`;\r\n        if(searchText !== null)\r\n            url = `/credit?q=${searchText}&limit=30`;\r\n        setQ(searchText);\r\n        search.request(url).then(res => {\r\n            if (res.ok) {\r\n                setCredits(res.data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            name: \"client\", label: 'CLIENTE',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value, tableMeta) => {\r\n                    return value ? value.toUpperCase() : 'Indefinido';\r\n                }\r\n            },\r\n        },\r\n        {name: \"monto\", label: 'MONTO', options: {filter: false,\r\n                setCellHeaderProps: () => ({ align: 'right' }),\r\n                setCellProps: () => ({ align: 'right' }),\r\n                customBodyRender: (value) => {return <b>{money(value)}</b>;}}},\r\n        {name: \"utilidad\", label: '%', options: {filter: false,\r\n                display: false}},\r\n        {name: \"total_utilidad\", label: 'TOTAL %', options: {filter: false, display: false,\r\n                setCellHeaderProps: () => ({ align: 'right' }),\r\n                setCellProps: () => ({ align: 'right' }),\r\n                customBodyRender: (value) => {return <b>{money(value)}</b>;}}},\r\n        {name: \"total\", label: 'TOTAL', options: {filter: false,\r\n                setCellHeaderProps: () => ({ align: 'right' }),\r\n                setCellProps: () => ({ align: 'right' }),\r\n                customBodyRender: (value) => {return <b>{money(value)}</b>;}}},\r\n        {name: \"plazo\", label: 'PLAZO', options: {filter: false}},\r\n        {name: \"cobro\", label: 'COBRO', options: {filter: false, display: 'false'}},\r\n        {name: \"ruta\", label: 'RUTA', options: {filter: false}},\r\n        {\r\n            name: \"description\", label: 'DETALLE',\r\n            options: {\r\n                filter: false,\r\n                display: 'false',\r\n                customBodyRender: (value) => {\r\n                    return <small>{value}</small>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            name: \"f_inicio\", label: 'F. INICIO',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {\r\n                    return toDate(value);\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: \"f_fin\", label: 'F. FIN',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {\r\n                    return toDate(value);\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: 'status', label: 'ESTADO', options: {\r\n                filter: true,\r\n                customFilterListOptions: { render: v => `Estado: ${v}` },\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            { value === 1 && <Chip label=\"Activo\" size={'small'} className={'bg-green'}/>}\r\n                            { value === 0 && <Chip label=\"Anulado\" size={'small'} className={'bg-red'}/>}\r\n                            { value === 2 && <Chip label=\"Exitoso\" size={'small'} className={'bg-info'}/>}\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        },\r\n        {\r\n            label: 'OPCIONES', name: 'id',\r\n            options: {\r\n                filter: false, sort: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    const status = tableMeta.rowData[11];\r\n                    return (\r\n                        <>\r\n                            <Tooltip title={'Ver detalles'}>\r\n                                <IconButton component={Link}\r\n                                            to={toName(CREDIT_SHOW, {id: value})}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"Detalle\">\r\n                                    <Icon>chrome_reader_mode</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={'Ver Dirección'}>\r\n                                <IconButton onClick={() => viewLoc(value)}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"Detalle\">\r\n                                    <Icon>not_listed_location</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n\r\n                            { /*ANULA SOLO SI EL CRÉDITO ESTA ACTIVO*/\r\n                                status === 1 &&\r\n                                <>\r\n                                    <Tooltip title={'Anular Crédito'}>\r\n                                        <IconButton\r\n                                            onClick={() => confirmCredit(value)}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"Anular\">\r\n                                            <Icon>block</Icon>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                    <Tooltip title={'Marcar como finalizado'}>\r\n                                        <IconButton\r\n                                            color={'secondary'}\r\n                                            onClick={() => confirmCredit(value, true)}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"Finalizar\">\r\n                                            <Icon>done-all</Icon>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </>\r\n                            }\r\n\r\n\r\n                        </>\r\n                    );\r\n                },\r\n            }\r\n        }\r\n    ];\r\n\r\n    const options = {\r\n        ...tableOptions,\r\n        search: searchable,\r\n        serverSide: true,\r\n        searchText: q,\r\n        rowsPerPage: filters.rowPerPage,\r\n        page: filters.page,\r\n        count: total,\r\n        onTableChange: (action, tableState) => {\r\n            switch (action) {\r\n                case 'search':\r\n                    onSearch(tableState.searchText);\r\n                    break;\r\n                case 'changePage':\r\n                    setFilters({...filters, page: tableState.page});\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        },\r\n        customSearchRender: (searchText, handleSearch, hideSearch, options) => {\r\n            return (\r\n                <CustomSearchRender\r\n                    searchText={searchText}\r\n                    onSearch={handleSearch}\r\n                    onHide={hideSearch}\r\n                    options={options}\r\n                    loader={false}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/*Tabla*/}\r\n            <WithLoader loader={loader}>\r\n                <MUIDataTable\r\n                    title={ (userId || personId) ? `HISTORIAL DE CRÉDITOS` : 'CRÉDITOS'}\r\n                    data={credits}\r\n                    columns={columns} options={options} />\r\n            </WithLoader>\r\n\r\n            <DlgListCredit ref={dialog} credit={credit}/>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nTableListCredit.propTypes = {\r\n    personId: PropTypes.string,\r\n    userId: PropTypes.number,\r\n    searchable: PropTypes.bool,\r\n};\r\n\r\nTableListCredit.defaultProps = {\r\n    personId: null,\r\n    userId: null,\r\n    searchable: true\r\n};\r\n\r\nexport default TableListCredit;\r\n","import React from 'react';\r\nimport Master from \"../Master\";\r\n\r\nimport TableListCredit from \"./_table/TableListCredit\";\r\n\r\nconst ListCredit = () => {\r\n    return (\r\n        <Master>\r\n            {/*Tabla*/}\r\n            <TableListCredit />\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default ListCredit;\r\n","import React from 'react';\r\nimport {Grid, Icon} from \"@material-ui/core\";\r\n\r\nconst BoxInfoCredit = ({info, text, icon, color, md=2}) => {\r\n    return (\r\n        <Grid item xs={6} sm={4} md={md}>\r\n            <div className={`box-info  ${(color) ? color.toLowerCase() : ''}`} style={{margin: '0 .1rem .2rem .1rem', borderRadius: 0}}>\r\n                {!icon ? <Icon>today</Icon> : <Icon>{icon}</Icon>}\r\n\r\n                <h3>{info}</h3>\r\n                <p>{text}</p>\r\n            </div>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default BoxInfoCredit;\r\n","import React from 'react';\r\nimport {Alert} from \"@material-ui/lab\";\r\n\r\nconst StatusCredit = ({status, description}) => {\r\n\r\n\r\n    if (status === 0) {\r\n        return (\r\n            <Alert severity=\"error\">Este crédito fué anulado. Motivo: {description}</Alert>\r\n        );\r\n    }\r\n\r\n    if (status === 1) {\r\n        return (\r\n            <Alert severity=\"info\">Crédito actualmente activo</Alert>\r\n        );\r\n    }\r\n\r\n    if (status === 2) {\r\n        return (\r\n            <Alert severity=\"success\">Crédito finalizado</Alert>\r\n        );\r\n    }\r\n\r\n    if (!status)\r\n        return (<></>);\r\n};\r\n\r\nexport default StatusCredit;\r\n","import React from 'react';\r\nimport {Paper, Grid, TextField} from \"@material-ui/core\";\r\n\r\nconst PayCobroCredit = ({plazo, cobro, description}) => {\r\n    return (\r\n        <Paper style={{padding: '1rem', borderRadius: 0}}>\r\n            <div className={'title-muted'}>Datos de pagos y cobros</div>\r\n            <Grid container style={{marginTop: '1rem'}} spacing={1}>\r\n                <Grid item xs={6}>\r\n                    <TextField readOnly label={'Plazo'}\r\n                               value={ plazo ? plazo: 'Desconocido'}/>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField readOnly label={'Periodo de Cobro'} value={ cobro ? cobro: 'Desconocido'} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField readOnly label={'Detalle'} multiline value={ description ? description: 'Ninguna'} fullWidth/>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default PayCobroCredit;\r\n","import React from 'react';\r\nimport {Grid, Paper, TextField} from \"@material-ui/core\";\r\n\r\nconst ClientDataCredit = ({name, surname, address, clientId}) => {\r\n\r\n    const getName = () => {\r\n        if (!name && !surname) return 'No especifica';\r\n        if (name && !surname) return name.toUpperCase();\r\n        if (name && surname) return `${name.toUpperCase()} ${surname.toUpperCase()}`;\r\n        return 'No especifica';\r\n    };\r\n\r\n    return (\r\n        <Paper className={'p-1'} style={{borderRadius: 0}}>\r\n            <div className={'title-muted'}>Datos del Cliente</div>\r\n            <Grid container className={'mt-1'} spacing={1}>\r\n                <Grid item xs={6}>\r\n                    <TextField readOnly label={'Nombres'} multiline={true} value={getName()} fullWidth />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField readOnly label={'Dirección'} multiline={true} value={address ? address : 'Ninguna'} fullWidth />\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default ClientDataCredit;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`wrapped-tabpanel-${index}`}\r\n            aria-labelledby={`wrapped-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <div style={{width: '100%'}}>{children}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default TabPanel;\r\n","import React from 'react';\r\nimport {Button, Dialog, DialogActions, DialogContent, useMediaQuery, useTheme} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nimport {asset} from \"../../../config/config\";\r\n\r\nconst DlgViewImg = ({isOpen, onClose, img, description, title}) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            open={isOpen}\r\n            maxWidth={'md'}\r\n            onClose={() => onClose()}\r\n            aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogContent className={'map-dialog'}>\r\n                <div className={'dialog-map-header'}>\r\n                    <h2>{title}</h2>\r\n                    {\r\n                        description && <small className={'text-muted'}>{description}</small>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <img src={asset(img)} alt={img} width={'100%'}/>\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button autoFocus onClick={() => onClose()} color=\"primary\">\r\n                    OK\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nDlgViewImg.propTypes = {\r\n    img: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func,\r\n    title: PropTypes.string\r\n};\r\n\r\n\r\nDlgViewImg.defaultProps = {\r\n    img: null,\r\n    isOpen: false,\r\n    description: '',\r\n    title: 'Ver Imagen'\r\n};\r\n\r\nexport default DlgViewImg;\r\n","import React, {useState} from 'react';\r\nimport {Button, IconButton, Tooltip} from \"@material-ui/core\";\r\nimport {Photo} from \"@material-ui/icons\";\r\nimport PropTypes from 'prop-types';\r\nimport DlgViewImg from \"../_modals/DlgViewImg\";\r\n\r\nconst BtnShowImg = ({img, title, iconButton}) => {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const openDialogImg = () => {\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n                {\r\n                    iconButton &&\r\n                    <Tooltip title={title}>\r\n                        <IconButton onClick={() => openDialogImg()}\r\n                                                 aria-label=\"Detalle\">\r\n                            <Photo/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                { !iconButton &&\r\n                    <Button\r\n                        onClick={() => openDialogImg()}\r\n                        variant=\"text\"\r\n                        size={'small'}\r\n                        color=\"default\"\r\n                        startIcon={<Photo/>}\r\n                    >{title}</Button>\r\n                }\r\n\r\n\r\n            <DlgViewImg img={img}\r\n                        title={title}\r\n                        isOpen={openDialog}\r\n                        onClose={() => setOpenDialog(false)} />\r\n        </>\r\n    );\r\n};\r\n\r\nBtnShowImg.propTypes = {\r\n    img: PropTypes.string.isRequired,\r\n    title: PropTypes.string,\r\n    iconButton: PropTypes.bool,\r\n};\r\n\r\nBtnShowImg.defaultProps = {\r\n    title: 'Ver Imágen',\r\n    iconButton: false\r\n};\r\n\r\nexport default BtnShowImg;\r\n","import React from 'react';\r\nimport {makeStyles, withStyles, Table, TableRow, TableCell, TableContainer, TableBody} from \"@material-ui/core\";\r\nimport {AppBar, Tabs, Tab} from '@material-ui/core';\r\nimport TabPanel from \"../../../_partials/TabPanel\";\r\nimport BtnShowImg from \"../../../_partials/_buttons/BtnShowImg\";\r\n\r\nconst RefPrendaCredit = ({ref_detail, ref_img, prenda}) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('one');\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" className={classes.root} elevation={0}>\r\n                <StyledTabs value={value} onChange={handleChange}>\r\n                    <StyledTab value=\"one\" label={`Referencias (${ref_detail ? 1: 0})`} {...a11yProps('one')} />\r\n                    <StyledTab value=\"two\" label={ `Prendas (${prenda ? prenda.length : 0})`} {...a11yProps('two')} />\r\n                </StyledTabs>\r\n\r\n                {/*REFERENCIAS*/}\r\n                <TabPanel value={value} index={'one'}>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableBody>\r\n                                {\r\n                                    (ref_detail || ref_img ) &&\r\n                                    <TableRow>\r\n                                        <TableCell width={'30%'}>\r\n                                            { ref_img ? <BtnShowImg img={ref_img} title={'Ver Ref.'} />   : ''}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            { ref_detail ? ref_detail : 'No hay referencia'}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                }\r\n                                {\r\n                                    (!ref_detail && !ref_img) &&\r\n                                    <TableRow>\r\n                                        <TableCell colSpan={2}>\r\n                                            <div className={'text-muted text-center pt-1'}>No existen referencias</div>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </TabPanel>\r\n\r\n                {/*PRENDAS*/}\r\n                <TabPanel value={value} index={'two'}>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableBody>\r\n                            {\r\n                                prenda && prenda.map(p => (\r\n                                    <TableRow key={p.id}>\r\n                                        <TableCell width={'30%'}>\r\n                                            <BtnShowImg img={p.img} title={'Ver Prenda'}/>\r\n                                        </TableCell>\r\n                                        <TableCell>{p.detail}</TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                            {\r\n                                prenda.length === 0 &&\r\n                                <TableRow>\r\n                                    <TableCell colSpan={2} >\r\n                                        <div className={'text-muted text-center pt-1'}>No existen prendas</div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </TabPanel>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst a11yProps = (index) => {\r\n    return {\r\n        id: `wrapped-tab-${index}`,\r\n        'aria-controls': `wrapped-tabpanel-${index}`,\r\n    };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: 'black'\r\n    },\r\n}));\r\nconst StyledTab = withStyles(theme => ({\r\n    root: {\r\n        textTransform: 'none',\r\n        color: 'black',\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        fontSize: theme.typography.pxToRem(15),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}))(props => <Tab disableRipple {...props} />);\r\nconst StyledTabs = withStyles({\r\n    root: {\r\n        backgroundColor: '#fafafa'\r\n    }\r\n})(props => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\r\n\r\n\r\nRefPrendaCredit.defaultProps = {\r\n    prenda: []\r\n};\r\n\r\nexport default RefPrendaCredit;\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {Button, Dialog, DialogActions, DialogContent, useMediaQuery, useTheme} from \"@material-ui/core\";\r\nimport MapViewLoc from \"../../maps/MapViewLoc\";\r\n\r\nconst DlgViewLoc = ({isOpen, title, lon, lat, onClose, description}) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    return (\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            open={isOpen}\r\n            maxWidth={'md'}\r\n            onClose={() => onClose()}\r\n            aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogContent className={'map-dialog'}>\r\n                <div className={'dialog-map-header'}>\r\n                    <h2>{title}</h2>\r\n                    <small className={'text-muted'}>{description}</small>\r\n                </div>\r\n                <MapViewLoc lon={lon} lat={lat} title={title} description={description} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button autoFocus onClick={() => onClose()} color=\"primary\">\r\n                    OK\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nDlgViewLoc.propTypes = {\r\n    onClose: PropTypes.func,\r\n    isOpen: PropTypes.bool,\r\n    lon: PropTypes.number.isRequired,\r\n    lat: PropTypes.number.isRequired,\r\n    title: PropTypes.string\r\n};\r\n\r\nDlgViewLoc.defaultProps = {\r\n    isOpen: false,\r\n    title: 'Ver Ubicación',\r\n    description: ''\r\n};\r\n\r\nexport default DlgViewLoc;\r\n","import React, {useState} from 'react';\r\nimport {Button, IconButton, Tooltip} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nimport {NotListedLocation} from \"@material-ui/icons\";\r\nimport DlgViewLoc from \"../_modals/DlgViewLoc\";\r\n\r\nconst BtnShowLoc = ({lat, lon, title, description, iconButton}) => {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const openDialogImg = () => {\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                iconButton &&\r\n                <Tooltip title={title}>\r\n                    <IconButton onClick={() => openDialogImg()}\r\n                                disabled={(!lat || !lon)}\r\n                                aria-label=\"Ver ubicación\">\r\n                        <NotListedLocation />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            }\r\n\r\n            { !iconButton &&\r\n            <Button\r\n                disabled={(!lat || !lon)}\r\n                onClick={() => openDialogImg()}\r\n                variant=\"text\"\r\n                size={'small'}\r\n                color=\"default\"\r\n                startIcon={<NotListedLocation />}\r\n            >{title}</Button>\r\n            }\r\n\r\n            <DlgViewLoc lat={parseFloat(lat)} lon={parseFloat(lon)}\r\n                        description={description}\r\n                        isOpen={openDialog} onClose={() => setOpenDialog(false)}/>\r\n        </>\r\n    );\r\n};\r\n\r\nBtnShowLoc.propTypes = {\r\n    lon: PropTypes.string.isRequired,\r\n    lat: PropTypes.string.isRequired,\r\n    title: PropTypes.string\r\n};\r\n\r\nBtnShowLoc.defaultProps = {\r\n    title: 'Ver Ubicación',\r\n    description: ''\r\n};\r\n\r\nexport default BtnShowLoc;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Chip, Grid, TextField} from \"@material-ui/core\";\r\nimport WithLoader from \"../../_partials/hoc/WithLoader\";\r\nimport useGet from \"../../../utils/useGet\";\r\n\r\nconst EmployByUser = ({userId}) => {\r\n\r\n    const employ = useGet(`/employ/user/${userId}`);\r\n\r\n    return (\r\n        <WithLoader loader={employ.loader} elevation={0}>\r\n            <Grid container spacing={2}>\r\n                <Grid item sm={6}>\r\n                    <TextField readOnly label={'Nombre'} inputProps={{ className: 'text-upper'}}\r\n                               value={`${employ.data.name} `}\r\n                               fullWidth />\r\n                </Grid>\r\n                <Grid item sm={6}>\r\n                    <TextField readOnly label={'Usuario'}\r\n                               value={employ.data.username}\r\n                               fullWidth />\r\n                </Grid>\r\n\r\n                <Grid item sm={6}>\r\n                    <TextField readOnly label={'Email'}\r\n                               value={employ.data.email}\r\n                               fullWidth />\r\n                </Grid>\r\n\r\n                <Grid item sm={6}>\r\n                    <TextField readOnly label={'Teléfono'}\r\n                               value={employ.data.phones}\r\n                               fullWidth />\r\n                </Grid>\r\n\r\n                <Grid item sm={6}>\r\n                    <TextField readOnly label={'Dirección'}\r\n                               value={employ.data.address}\r\n                               multiline={true}\r\n                               fullWidth />\r\n                </Grid>\r\n\r\n                <Grid item sm={6} className={'d-flex center'}>\r\n                    <b className={'mr-1'}>Estado:</b>\r\n                    {\r\n                        employ.data.status === 1 &&  <Chip label={\"Activo\"} className={'bg-green'} />\r\n                    }\r\n                    {\r\n                        employ.data.status === 0 &&  <Chip label={\"Inactivo\"} className={'bg-red'} />\r\n                    }\r\n                    {\r\n                        employ.data.status === -1 &&  <Chip label={\"Eliminado\"} className={'bg-red'} />\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </WithLoader>\r\n    );\r\n};\r\n\r\nEmployByUser.propTypes = {\r\n    userId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default EmployByUser;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Dialog, DialogActions, DialogContent, useMediaQuery, useTheme} from \"@material-ui/core\";\r\nimport EmployByUser from \"../_partials/EmployByUser\";\r\n\r\nconst DlgViewEmployUser = ({userId, title, open, onClose}) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    return (\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            open={open}\r\n            maxWidth={'md'}\r\n            onClose={() => onClose()}\r\n            aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogContent className={'map-dialog'}>\r\n                <div className={'dialog-map-header'}>\r\n                    <h2>{title}</h2>\r\n                </div>\r\n                {\r\n                    userId &&  <EmployByUser userId={userId} />\r\n                }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button autoFocus onClick={() => onClose()} color=\"primary\">\r\n                    OK\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nDlgViewEmployUser.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    userId: PropTypes.number,\r\n    title: PropTypes.string\r\n};\r\n\r\nDlgViewEmployUser.defaultProps = {\r\n    title: 'Ver Empleado'\r\n};\r\n\r\nexport default DlgViewEmployUser;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Icon, IconButton, Tooltip} from \"@material-ui/core\";\r\nimport DlgViewEmployUser from \"../_dialog/DlgViewEmployUser\";\r\n\r\nconst BtnPreviewEmploy = ({userId, title, iconButton}) => {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const show = () => {\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                iconButton &&\r\n                <Tooltip title={title}>\r\n                    <IconButton onClick={() => show()}\r\n                                disabled={(!userId)}\r\n                                aria-label={title}>\r\n                        <Icon>person</Icon>\r\n                    </IconButton>\r\n                </Tooltip>\r\n            }\r\n\r\n            { !iconButton &&\r\n            <Button\r\n                disabled={(!userId)}\r\n                onClick={() => show()}\r\n                variant=\"text\"\r\n                size={'small'}\r\n                color=\"default\"\r\n                startIcon={<Icon>person</Icon>}\r\n            >{title}</Button>\r\n            }\r\n\r\n            <DlgViewEmployUser userId={userId}\r\n                               onClose={() => setOpenDialog(false)}\r\n                               open={openDialog}/>\r\n        </>\r\n    );\r\n};\r\n\r\nBtnPreviewEmploy.propTypes = {\r\n    userId: PropTypes.number.isRequired,\r\n    iconButton: PropTypes.bool,\r\n    title: PropTypes.string\r\n};\r\n\r\nBtnPreviewEmploy.defaultProps = {\r\n    iconButton: false,\r\n    title: 'Ver empleado'\r\n};\r\n\r\nexport default BtnPreviewEmploy;\r\n","import React from 'react';\r\nimport {Grid, Paper, TextField} from \"@material-ui/core\";\r\nimport {toDate, toDateHour} from \"../../../utils/utils\";\r\nimport RefPrendaCredit from \"./_tabs/RefPrendaCredit\";\r\nimport BtnShowLoc from \"../../_partials/_buttons/BtnShowLoc\";\r\nimport BtnPreviewEmploy from \"../../employ/_buttons/BtnPreviewEmploy\";\r\n\r\nconst DataCredit = ({credit}) => {\r\n    return (\r\n        <>\r\n            <Paper style={{borderRadius: 0}} className={'p-1'}>\r\n                <div className={'title-muted'}>Datos del crédito</div>\r\n                <Grid container style={{marginTop: '1rem'}} spacing={1}>\r\n                    <Grid item xs={6}>\r\n                        <TextField readOnly label={'Fecha inicio'} fullWidth\r\n                                   value={ credit.f_inicio ? toDate(credit.f_inicio) : 'dd/mm/yyyy'}/>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField readOnly label={'Fecha fin'}\r\n                                    fullWidth\r\n                                   value={ credit.f_fin ? toDate(credit.f_fin): 'dd/mm/yyyy'} />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField readOnly label={'Fecha de Registro'} value={ credit.created_at ? toDateHour(credit.created_at): 'dd/mm/yyyy'} fullWidth/>\r\n                    </Grid>\r\n                    <Grid item xs={6} className={'d-flex center'} >\r\n                        <TextField readOnly value={credit.ruta ? credit.ruta: 'Desconocida'} label={'Ruta/Zona'} fullWidth/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n\r\n                        {\r\n                            credit.geo_lat && credit.geo_lon && <BtnShowLoc lat={credit.geo_lat}\r\n                                                                            lon={credit.geo_lon} description={credit.address} />\r\n                        }\r\n                        {\r\n                            credit.user_id && <BtnPreviewEmploy userId={credit.user_id} title={'Empleado'} />\r\n                        }\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            <Paper>\r\n                {/*Prendas y Referencias*/}\r\n                <RefPrendaCredit ref_detail={credit.ref_detail}\r\n                                 ref_img={credit.ref_img} prenda={credit.prenda}/>\r\n            </Paper>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DataCredit;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DlgInput from \"../../_partials/_modals/DlgInput\";\r\nimport {toast} from \"react-toastify\";\r\nimport Axios from \"axios\";\r\nimport {processErrors} from \"../../../utils/utils\";\r\n\r\n\r\nconst DlgCancelPayment = ({open, onClose, selectPay, success}) => {\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const confirmCancel = (motivo) => {\r\n        if (!selectPay) {\r\n            toast.warn('Vuelva a seleccionar el pago que desea anular');\r\n            return;\r\n        }\r\n\r\n        if (!motivo) {\r\n            toast.warn('Es necesario especificar un motivo de anulación');\r\n            return;\r\n        }\r\n        setLoader(true);\r\n        Axios.delete(`/payment/${selectPay}`, {data: {description: motivo}})\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    toast.success('El pago fue anulado con éxito');\r\n                    success(selectPay, 1);\r\n                    onClose();\r\n                }\r\n            }).catch(err => {\r\n            toast.error(processErrors(err));\r\n        }).finally(() => setLoader(false));\r\n    };\r\n\r\n    return (\r\n        <DlgInput open={open}\r\n                  title={`Anular pago COD-${selectPay}`}\r\n                  desc={`¿Por qué deseas anular este pago COD-${selectPay}?`}\r\n                  inputLabel={'Motivo'}\r\n                  loader={loader}\r\n                  onConfirm={(v) => confirmCancel(v)}\r\n                  onClose={onClose}/>\r\n    );\r\n};\r\n\r\nDlgCancelPayment.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    selectPay: PropTypes.number,\r\n    success: PropTypes.func\r\n};\r\nDlgCancelPayment.defaultProps = {\r\n\r\n};\r\n\r\nexport default DlgCancelPayment;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DlgConfirm from \"../../_partials/_modals/DlgConfirm\";\r\nimport useHttp from \"../../../utils/useHttp\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst DlgPayOrMora = ({open, onClose, mora, selectPay, success}) => {\r\n    const processPay = useHttp('put');\r\n\r\n    // Marcar un pago como cobrado o como mora\r\n    const confirmPayOrMora = () => {\r\n\r\n        if (!selectPay) {\r\n            toast.warn('Seleccione el pago a procesar');\r\n            return;\r\n        }\r\n\r\n        let status = 2;\r\n        if (mora)\r\n            status = -1;\r\n        processPay.request(`/payment/${selectPay}`, {status}).then(res => {\r\n            if (res.ok) {\r\n                toast.success(`Pago marcado como ${mora ? 'EN MORATORIA' : 'COBRADO'}`);\r\n                success(selectPay, status);\r\n                onClose();\r\n            }\r\n        }).catch(err => {\r\n            toast.error(err);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                selectPay &&\r\n                <DlgConfirm onConfirm={() => confirmPayOrMora()}\r\n                            title={`${mora ? 'PONER EN MORA | ' : 'COBRAR | '} COD-${selectPay}`}\r\n                            desc={`¿Estas seguro que deseas poner este pago en estado ${mora ? 'de MORA': 'COBRADO'}?`}\r\n                            open={open}\r\n                            loader={processPay.loader}\r\n                            onClose={onClose} />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nDlgPayOrMora.propTypes = {\r\n    mora: PropTypes.bool.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    selectPay: PropTypes.number,\r\n    success: PropTypes.func\r\n};\r\n\r\nDlgPayOrMora.defaultProps = {\r\n    mora: false\r\n};\r\n\r\nexport default DlgPayOrMora;\r\n","import React, {useState} from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport {Chip, Button, Tooltip, IconButton, Icon} from \"@material-ui/core\";\r\nimport useGet from \"../../../utils/useGet\";\r\nimport WithLoader from \"../../_partials/hoc/WithLoader\";\r\nimport {money, tableOptions} from \"../../../config/config\";\r\nimport {toDate} from \"../../../utils/utils\";\r\nimport DlgViewEmployUser from \"../../employ/_dialog/DlgViewEmployUser\";\r\nimport DlgCancelPayment from \"../_dialogs/DlgCancelPayment\";\r\nimport DlgPayOrMora from \"../_dialogs/DlgPayOrMora\";\r\n\r\nconst ViewPayments = ({creditId}) => {\r\n    const pay = useGet(`/payment/only/${creditId}`);\r\n\r\n    // diálogos\r\n    const [open, setOpen] = useState(false);\r\n    const [openInput, setOpenInput] = useState(false);\r\n    const [openConfirm, setOpenConfirm] = useState(false);\r\n    const [mora, setMora] = useState(false);\r\n\r\n    // data seleccionada\r\n    const [selectUser, setSelectUser] = useState(null);\r\n    const [selectPay, setSelectPay] = useState(null);\r\n\r\n    // columnas de la tabla\r\n    const columns = [\r\n        {\r\n            name: 'total', label: 'TOTAL',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return <b>{money(value)}</b>;}}\r\n        },\r\n        {\r\n            name: 'date', label: 'F. PAGO',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return toDate(value);}}\r\n        },\r\n        {\r\n            name: 'description', label: 'DETALLE',\r\n            options: {filter: false}\r\n        },\r\n        {\r\n            name: 'status', label: 'ESTADO', options: {\r\n                filter: true,\r\n                customFilterListOptions: {render: v => `Estado: ${v}`},\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            {value === 2 &&\r\n                            <>\r\n                                <Chip\r\n                                    size={'small'}\r\n                                    label={\"COBRADO\"}\r\n                                    className={'bg-green'}/>\r\n                            </>\r\n                            }\r\n                            {value === 1 &&\r\n                            <>\r\n                                <Chip\r\n                                    size={'small'}\r\n                                    label=\"PENDIENTE\"\r\n                                    className={'bg-primary'}/>\r\n                            </>\r\n                            }\r\n                            {value === -1 &&\r\n                            <>\r\n                                <Chip\r\n                                    size={'small'}\r\n                                    label=\"EN MORA\"\r\n                                    className={'bg-red'}/>\r\n                            </>\r\n                            }\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: 'date_payment', label: 'F. COBRO',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return toDate(value);}}\r\n        },\r\n        {\r\n            name: 'mora', label: 'MORA',\r\n            options: {\r\n                customBodyRender: (value) => {return (value ? 'Si': 'No');}}\r\n        },\r\n        {\r\n            name: 'user_id', label: 'EMPLEADO',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return (\r\n                    <>\r\n                        { value && <Button size={'small'} onClick={() => showUser(value)}>Ver</Button> }\r\n                        { !value && <Button size={'small'} disabled>Ver</Button>}\r\n                    </>\r\n                );}\r\n            }\r\n        },\r\n        {\r\n            name: \"id\",\r\n            label: ' ',\r\n            options: {\r\n                customBodyRender: (value, tableMeta) => {\r\n                    // status[-1: 'MORA', 1: 'PENDIENTE', 2: 'PROCESADO']\r\n                    const status = tableMeta.rowData[3];\r\n                    return <>\r\n                        {\r\n                            status === 1\r\n                            &&\r\n\r\n                                <Tooltip title={'Marcar pago como en MORA'}>\r\n                                    <IconButton\r\n                                        onClick={() => setPay(value, true, true)}\r\n                                        size={\"small\"}\r\n                                        aria-label=\"Poner en moratoria el pago\">\r\n                                        <MoneyOffIcon/>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                        }\r\n                        {\r\n                            (status === 1 || status === -1) &&\r\n                            <Tooltip title={'Marcar pago como COBRADO'}>\r\n                                <IconButton\r\n                                    onClick={() => setPay(value, true, false)}\r\n                                    size={\"small\"}\r\n                                    aria-label=\"Cobrar este pago\">\r\n                                    <MonetizationOnIcon/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        }\r\n                        {\r\n                            status === 2\r\n                            &&\r\n                            <Tooltip title={'Anular'}>\r\n                                <IconButton\r\n                                    onClick={() => setPay(value)}\r\n                                    size={\"small\"}\r\n                                    aria-label=\"Anular Pago\">\r\n                                    <Icon>cancel</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        }\r\n                    </>;\r\n                }\r\n            }\r\n        },\r\n    ];\r\n\r\n    // mostrar datos del empleado\r\n    const showUser = (userId) => {\r\n        setSelectUser(userId);\r\n        setOpen(true);\r\n    };\r\n\r\n    // abrir el dialogo de ingreso de motivo\r\n    const setPay = (paymentId, confirm = false, mora = false) => {\r\n        if (confirm) {\r\n            setOpenConfirm(true);\r\n            setMora(mora);\r\n        }\r\n        else {\r\n            setOpenInput(true);\r\n        }\r\n        setSelectPay(paymentId);\r\n    };\r\n\r\n    const options = {\r\n        ...tableOptions,\r\n        electableRowsHeader: false,\r\n        filter: false,\r\n        search: false,\r\n        sort: false,\r\n        download: false,\r\n        print: false,\r\n        viewColumns: false,\r\n        selectableRows: 'none',\r\n        setTableProps: () => {\r\n            return {\r\n                padding: \"default\" ,\r\n                size: \"small\"\r\n            };\r\n        }\r\n    };\r\n\r\n    return (\r\n        <WithLoader loader={pay.loader} elevation={0} text={''}>\r\n            <MUIDataTable\r\n                title={'Pagos'}\r\n                data={pay.data.pays}\r\n                columns={columns} options={options} />\r\n            {\r\n                selectUser && <DlgViewEmployUser userId={selectUser}\r\n                                                 onClose={() => setOpen(false)} open={open} />\r\n            }\r\n\r\n\r\n            <DlgCancelPayment selectPay={selectPay}\r\n                               open={openInput}\r\n                               onClose={() => setOpenInput(false)}/>\r\n\r\n            <DlgPayOrMora selectPay={selectPay}\r\n                          mora={mora}\r\n                          open={openConfirm}\r\n                          onClose={() => setOpenConfirm(false)}/>\r\n        </WithLoader>\r\n    );\r\n};\r\n\r\nexport default ViewPayments;\r\n\r\n","import React from 'react';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\n\r\nconst SKShowCredit = ({children, loader}) => {\r\n\r\n\r\n    if (loader) {\r\n        return (\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} md={12}>\r\n                    <Grid container>\r\n                        <Grid item xs={6} sm={4} md={3}><Skeleton style={{margin: '0 .1rem .2rem .1rem', borderRadius: 0}} variant=\"rect\" height={79} /></Grid>\r\n                        <Grid item xs={6} sm={4} md={2}><Skeleton style={{margin: '0 .1rem .2rem .1rem', borderRadius: 0}} variant=\"rect\" height={79} /></Grid>\r\n                        <Grid item xs={6} sm={4} md={3}><Skeleton style={{margin: '0 .1rem .2rem .1rem', borderRadius: 0}} variant=\"rect\" height={79} /></Grid>\r\n                        <Grid item xs={6} sm={4} md={2}><Skeleton style={{margin: '0 .1rem .2rem .1rem', borderRadius: 0}} variant=\"rect\" height={79} /></Grid>\r\n                        <Grid item xs={6} sm={4} md={2}><Skeleton style={{margin: '0 .1rem .2rem .1rem', borderRadius: 0}} variant=\"rect\" height={79} /></Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Skeleton variant=\"rect\" height={300} />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Skeleton variant=\"rect\" height={300} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton variant=\"rect\" height={100} />\r\n                </Grid>\r\n            </Grid>\r\n\r\n        );\r\n    }\r\n\r\n    else return children;\r\n};\r\n\r\nSKShowCredit.defaultProps = {\r\n    loader: false\r\n};\r\n\r\nexport default SKShowCredit;\r\n","import React from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport useGet from \"../../utils/useGet\";\r\nimport Master from \"../Master\";\r\nimport BoxInfoCredit from \"./_partials/BoxInfoCredit\";\r\nimport StatusCredit from \"./_partials/StatusCredit\";\r\nimport {money} from \"../../config/config\";\r\nimport PayCobroCredit from \"./_partials/PayCobroCredit\";\r\nimport ClientDataCredit from \"./_partials/ClientDataCredit\";\r\nimport DataCredit from \"./_partials/DataCredit\";\r\nimport ViewPayments from \"../payments/_partials/ViewParyments\";\r\nimport SKShowCredit from \"./_skeleton/SkShowCredit\";\r\n\r\nconst ShowCredit = ({match}) => {\r\n    const id = match.params.id;\r\n    const credit = useGet(`/credit/${id}`);\r\n\r\n    return (\r\n        <Master>\r\n            <SKShowCredit loader={credit.loader}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} md={12}>\r\n                    <Grid container>\r\n                        <BoxInfoCredit md={3} color={'primary'} icon={'credit_card'}\r\n                                       info={`${money(credit.data.monto)}`} text={'MONTO INICIAL'} />\r\n\r\n                        <BoxInfoCredit color={'deal'} icon={'money'}\r\n                                       info={`% ${credit.data.utilidad}`} text={'UTILIDAD'} />\r\n\r\n                        <BoxInfoCredit md={3} color={'cyan'} icon={'local_atm'}\r\n                                       info={`${money(credit.data.total_utilidad)}`} text={'SUBT. UTILIDAD'} />\r\n\r\n                        <BoxInfoCredit color={'purple'} icon={'attach_money'}\r\n                                       info={`${money(credit.data.total)}`} text={'TOTAL'} />\r\n\r\n                        <BoxInfoCredit  color={'red'} icon={'exposure_plus_1'}\r\n                                  info={`${credit.data.n_pagos}`} text={'# DE PAGOS'} />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <StatusCredit description={credit.data.description} status={credit.data.status} />\r\n                            {/*Datos del Pagos*/}\r\n                            <PayCobroCredit description={credit.data.description} plazo={credit.data.plazo} cobro={credit.data.cobro} />\r\n                            {/*Datos del cliente*/}\r\n                            <ClientDataCredit name={credit.data.client_name}\r\n                                              surname={credit.data.client_surname}\r\n                                              address={credit.data.client_address}\r\n                                              clientId={credit.data.person_id}/>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            {/*Datos del crédito*/}\r\n                            <DataCredit credit={credit.data} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    {\r\n                        credit.data.id && credit.data.status !== 0 && <ViewPayments creditId={credit.data.id} />\r\n                    }\r\n                </Grid>\r\n\r\n            </Grid>\r\n            </SKShowCredit>\r\n        </Master>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\nexport default ShowCredit;\r\n\r\n","import React, {useState} from 'react';\r\nimport {\r\n    Button, Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    Container,\r\n    Grid,\r\n    DialogTitle,\r\n    useMediaQuery,\r\n    useTheme, InputLabel, Input, InputAdornment, IconButton, FormControl\r\n} from \"@material-ui/core\";\r\nimport {VisibilityOff, Visibility} from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\nimport useHttp from \"../../../utils/useHttp\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst DlgPassword = ({title, open, onClose}) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const [values, setValues] = useState({showPassword: false});\r\n    const [data, setData] = useState({\r\n        password: '',\r\n        password_now: ''\r\n    });\r\n\r\n    const password = useHttp('post');\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value});\r\n    };\r\n\r\n    const changePw = () => {\r\n        if (!data.password || !data.password_now) {\r\n            toast.error('Complete el formulario');\r\n            return;\r\n        }\r\n\r\n        password.request(`/user/password`, data).then(res => {\r\n            if (res.ok) {\r\n                toast.success('Contraseña cambiada con éxito');\r\n                onClose();\r\n            }\r\n        }).catch(err => toast.error(err));\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open}\r\n                onClose={onClose} aria-labelledby=\"form-dialog-title\" fullScreen={fullScreen}>\r\n            <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n            <DialogContent>\r\n                <Container>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"standard-adornment-password\">Contraseña actual</InputLabel>\r\n                                <Input\r\n                                    id=\"standard-adornment-password\"\r\n                                    type={values.showPassword ? 'text' : 'password'}\r\n                                    value={data.password_now !== null ? data.password_now : ''}\r\n                                    name={'password_now'}\r\n                                    onChange={e => onChange(e)}\r\n                                    fullWidth\r\n                                    required\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                onClick={handleClickShowPassword}>\r\n                                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"standard-adornment-password\">Contraseña nueva</InputLabel>\r\n                                <Input\r\n                                    id=\"standard-adornment-password-2\"\r\n                                    type={values.showPassword ? 'text' : 'password'}\r\n                                    value={data.password !== null ? data.password : ''}\r\n                                    name={'password'}\r\n                                    onChange={e => onChange(e)}\r\n                                    fullWidth\r\n                                    required\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                onClick={handleClickShowPassword}>\r\n                                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button color={'primary'}  onClick={onClose}>\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"secondary\" onClick={() => changePw()} disabled={password.loader}>\r\n                    {password.loader ? 'Espere...' :  'Aceptar'}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nDlgPassword.propTypes = {\r\n    title: PropTypes.string,\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool\r\n};\r\n\r\nDlgPassword.defaultProps = {\r\n    title: 'Cambiar contraseña'\r\n};\r\n\r\nexport default DlgPassword;\r\n","import React, {useState} from 'react';\r\nimport {Button} from \"@material-ui/core\";\r\nimport DlgPassword from \"../_dialog/DlgPassword\";\r\n\r\nconst BtnShowPasswordChange = () => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return (\r\n        <>\r\n        <Button onClick={() => setOpen(true)} className={'ml-1'}>\r\n          Cambiar contraseña\r\n        </Button>\r\n        <DlgPassword onClose={() => setOpen(false)} open={open}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BtnShowPasswordChange;\r\n","import React from 'react';\r\nimport Master from \"../Master\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport {Container, Divider, Icon, Paper} from \"@material-ui/core\";\r\nimport FrmClient from \"../client/_form/FrmClient\";\r\nimport BtnShowPasswordChange from \"./_buttons/BtnShowPasswordChange\";\r\n\r\nconst EditAuth = () => {\r\n\r\n    const user = useGet(`/user`);\r\n\r\n    return (\r\n        <>\r\n            <Master>\r\n                <WithLoader loader={user.loader}>\r\n                    <Container maxWidth='md' component={Paper} className='paper-content'>\r\n                        <div className='paper-header'>\r\n                            <h4> <Icon>person_edit</Icon> Mis Datos</h4>\r\n                            <Divider />\r\n                        </div>\r\n                        {\r\n                            user.data.person && <FrmClient method={'put'} url={`/client/${user.data.person.id}`}\r\n                                                           initialData={user.data.person}>\r\n                                <BtnShowPasswordChange />\r\n                            </FrmClient>\r\n                        }\r\n\r\n                    </Container>\r\n                </WithLoader>\r\n            </Master>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditAuth;\r\n","import React from 'react';\r\nimport TableListCredit from \"./_table/TableListCredit\";\r\nimport Master from \"../Master\";\r\nconst HistoryClientCredit = ({match}) => {\r\n    const id = match.params.id;\r\n    return (\r\n        <Master>\r\n            <TableListCredit personId={id} searchable={false} />\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default HistoryClientCredit;\r\n","import React, {Component} from 'react';\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete/Autocomplete\";\r\nimport {CircularProgress, TextField} from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SelectZone extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            zones: [],\r\n            loader: false,\r\n            open: false,\r\n            value: ''\r\n        }\r\n    }\r\n\r\n    getZones() {\r\n        this.setState({...this.state, open: true, loader: true});\r\n        if (this.state.zones.length <= 0) {\r\n            Axios.get('/route').then(res => {\r\n                if (res.ok) {\r\n                    this.setState({...this.state, zones: res.data})\r\n                }\r\n            }).finally(() => this.setState({loader: false}));\r\n        } else {\r\n            this.setState({loader: false});\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({...this.state, value:''});\r\n    }\r\n\r\n    selected(o, v) {\r\n        if(v) {\r\n            this.setState({...this.state, value: v});\r\n        } else {\r\n            this.setState({...this.state, value: ''});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Autocomplete\r\n                    id=\"zone_id\"\r\n                    open={this.state.open}\r\n                    onOpen={() => this.getZones()}\r\n                    onClose={() => this.setState({...this.state, open: false})}\r\n                    options={this.state.zones}\r\n                    loading={this.state.loader}\r\n                    onChange={(option, value) => this.props.onChange(value ? value.id : value)}\r\n                    loadingText={'Cargando zonas'}\r\n                    inputValue={this.state.value}\r\n                    onInputChange={(v,r) => this.selected(v, r)}\r\n                    getOptionLabel={option => option ? (option.name).toUpperCase() : this.state.value }\r\n\r\n                    renderInput={params => (\r\n                        <TextField\r\n                            {...params}\r\n                            required\r\n                            label=\"Zonas/Rutas\" variant=\"standard\" fullWidth\r\n                            InputProps={{\r\n                                ...params.InputProps,\r\n                                endAdornment: (\r\n                                    <React.Fragment>\r\n                                        {this.state.loader ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                        {params.InputProps.endAdornment}\r\n                                    </React.Fragment>\r\n                                ),\r\n                            }}/>\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSelectZone.propTypes = {\r\n    onChange: PropTypes.func\r\n};\r\n\r\nSelectZone.defaultProps = {\r\n};\r\n\r\nexport default SelectZone;\r\n","import React, {Component} from 'react';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete/Autocomplete\";\r\nimport {cobros} from \"../../../config/config\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass SelectCobro extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: ''\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({value: ''});\r\n    }\r\n\r\n    selected(e, v) {\r\n        if(v) {\r\n            this.setState({...this.state, value: v});\r\n        } else {\r\n            this.setState({...this.state, value: ''});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Autocomplete\r\n                    id=\"cobros\"\r\n                    options={cobros}\r\n                    onChange={(option, value) => this.props.onChange(value ? value.name: value)}\r\n                    onInputChange={(v, o) => this.selected(v, o)}\r\n                    inputValue={this.state.value}\r\n                    getOptionLabel={option => option ? (option.value).toUpperCase() : this.state.value.value }\r\n                    renderInput={params => (\r\n                        <TextField\r\n                            {...params}\r\n                            label=\"Recaudación\" variant=\"standard\" fullWidth />\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSelectCobro.propTypes = {\r\n    onChange: PropTypes.func\r\n};\r\n\r\nSelectCobro.defaultProps = {\r\n};\r\n\r\nexport default SelectCobro;\r\n","import React, {Component} from 'react';\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass SelectDate extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            date: props.initialDate\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({date: null});\r\n    };\r\n\r\n    onChangeDate (date) {\r\n        this.setState({date: date});\r\n        if (date) {\r\n            this.props.onChange(date.format('YYYY-MM-DD'), this.props.key);\r\n        } else {\r\n            this.props.onChange(null, this.props.key);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <KeyboardDatePicker\r\n                    disableToolbar={this.props.hideToolbar}\r\n                    variant=\"inline\"\r\n                    format=\"DD/MM/YYYY\"\r\n                    fullWidth\r\n                    autoOk={this.props.autoOk}\r\n                    id={this.props.key}\r\n                    value={this.state.date}\r\n                    label={this.props.label}\r\n                    onChange={(dateSelected) => this.onChangeDate(dateSelected)}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': this.props.label,\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSelectDate.propTypes = {\r\n    onChange: PropTypes.func,\r\n    key: PropTypes.string,\r\n    label: PropTypes.string,\r\n};\r\n\r\nSelectDate.defaultProps = {\r\n    key: 'date',\r\n    label: 'Seleccione fecha',\r\n    autoOk: true,\r\n    initialDate: null,\r\n    hideToolbar: false\r\n};\r\n\r\nexport default SelectDate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {IconButton, Tooltip, withStyles} from \"@material-ui/core\";\r\nimport {Cancel, Info, MonetizationOn, MoneyOff, Payment} from \"@material-ui/icons\";\r\nimport BtnShowLoc from \"../../_partials/_buttons/BtnShowLoc\";\r\nimport BtnShowImg from \"../../_partials/_buttons/BtnShowImg\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {CREDIT_SHOW, toName} from \"../../../config/urls\";\r\n\r\nconst BtnsPayOptions = ({pay, exec}) => {\r\n    const HtmlTooltip = withStyles((theme) => ({\r\n        tooltip: {\r\n            backgroundColor: '#f5f5f9',\r\n            color: 'rgba(0, 0, 0, 0.87)',\r\n            maxWidth: 220,\r\n            fontSize: theme.typography.pxToRem(12),\r\n            border: '1px solid #dadde9',\r\n        },\r\n    }))(Tooltip);\r\n    return (\r\n        <>\r\n            {/*Ver info de dirección y ubicación*/}\r\n            <HtmlTooltip\r\n                title={\r\n                    <>\r\n                        <b>Dirección</b>\r\n                        <p>{pay.address}{pay.ref_detail && <span>&nbsp;|&nbsp;{pay.ref_detail}</span>}</p>\r\n                        {\r\n                            pay.description &&\r\n                            <>\r\n                                <b>Descripción</b>\r\n                                <p>{pay.description}</p>\r\n                            </>\r\n                        }\r\n\r\n                    </>\r\n                }>\r\n                <IconButton><Info /></IconButton>\r\n            </HtmlTooltip>\r\n            {/*Mostrar Geolocalización*/}\r\n            <BtnShowLoc lon={pay.lon} lat={pay.lat} iconButton={true} />\r\n            {/*Ver Imagen de referencia*/\r\n                pay.ref_img && <BtnShowImg img={pay.ref_img}\r\n                                           iconButton\r\n                                           title={'Ver referencia'} />\r\n            }\r\n            {/*ver crédito*/}\r\n            <Tooltip title={'Ver Crédito'}>\r\n                <IconButton component={Link} to={toName(CREDIT_SHOW, {id: pay.credit_id})}>\r\n                    <MonetizationOn />\r\n                </IconButton>\r\n            </Tooltip>\r\n            {/*Marcar Como mora*/\r\n                pay.status !== 2 &&\r\n                <Tooltip title={'Marcar como Mora'}>\r\n                    <IconButton onClick={ () => exec('mora', {id: pay.id})}>\r\n                        <MoneyOff />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            }\r\n\r\n            {/*Pagar*/\r\n                pay.status !== 2 &&\r\n                <Tooltip title={'Marcar como pagado'}>\r\n                    <IconButton onClick={ () => exec('pay', {id: pay.id}) }>\r\n                        <Payment />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            }\r\n\r\n            {/*Anular*/\r\n                pay.status === 2 &&\r\n                <Tooltip title={'Anular Pago'}>\r\n                    <IconButton onClick={ () => exec('cancel', {id: pay.id}) }>\r\n                        <Cancel />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nBtnsPayOptions.propTypes = {\r\n    exec: PropTypes.func.isRequired,\r\n    pay: PropTypes.object\r\n};\r\n\r\nexport default BtnsPayOptions;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {money} from \"../../../config/config\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {CREDIT_BY_CLIENT, toName} from \"../../../config/urls\";\r\nimport BtnsPayOptions from \"./BtnsPayOptions\";\r\n\r\nconst PayItemCard = ({pay, exec}) => {\r\n\r\n    const color = (status) => {\r\n        switch (status) {\r\n            case 1: return 'pendiente';\r\n            case 2: return 'cobrado';\r\n            case -1: return 'mora';\r\n            default: return 'pendiente';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`pay-content ${color(pay.status)}`}>\r\n            <div className={'pay-header'}>\r\n                <div className={`dollar ${color(pay.status)}`}>{money(pay.total)}</div>\r\n                <small>Pago #{pay.number}</small>\r\n            </div>\r\n            <div className={'client'}>\r\n                <Link to={toName(CREDIT_BY_CLIENT, {id: pay.client_id})} className={'client'}>{pay.client_name} {pay.client_surname}</Link>\r\n                <small className={color(pay.status)}>{color(pay.status).toUpperCase()}</small>\r\n            </div>\r\n            <div className={'buttons'}>\r\n                <BtnsPayOptions exec={exec} pay={pay} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nPayItemCard.propTypes = {\r\n    exec: PropTypes.func\r\n};\r\nexport default PayItemCard;\r\n","import React from \"react\";\r\n\r\nconst status = (number, upper = false) => {\r\n    let st = 'pendiente';\r\n    switch (number) {\r\n        case 1: st = 'pendiente'; break;\r\n        case 2: st = 'cobrado'; break;\r\n        case -1: st =  'mora'; break;\r\n        default: st = 'pendiente'; break;\r\n    }\r\n    if (upper) st = st.toUpperCase();\r\n    return st;\r\n};\r\n\r\nconst elStatus = number => {\r\n    const st = status(number);\r\n  return (<div className={`st ${st}`}>{st.toUpperCase()}</div>);\r\n};\r\n\r\nconst getPin = (st, cobro = 'diario') => {\r\n    return `/img/pin/${cobro.toLowerCase()}/${status(st)}.png`;\r\n};\r\n\r\n\r\nexport default {\r\n    status, elStatus, getPin\r\n}\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WithMapKey from \"../../maps/WithMapKey\";\r\nimport {InfoWindow, Map, Marker} from \"google-maps-react\";\r\nimport PayModel from \"../../../models/PayModel\";\r\nimport BtnsPayOptions from \"../_partials/BtnsPayOptions\";\r\n\r\nconst PayMap = ({payments, google, height, zoom, exec}) => {\r\n\r\n    const [state, setState] = useState({\r\n        showingInfoWindow: false,\r\n        activeMarker: {},\r\n        selectedPlace: {},\r\n        selectedPay: null\r\n    });\r\n\r\n    const onMarkerClick = (props, marker, pay) =>\r\n        setState({\r\n            ...state,\r\n            selectedPlace: props,\r\n            activeMarker: marker,\r\n            showingInfoWindow: true,\r\n            selectedPay: pay});\r\n\r\n    const onMapClicked = (props) => {\r\n        if (state.showingInfoWindow) {\r\n            setState({\r\n                ...state,\r\n                showingInfoWindow: false,\r\n                activeMarker: null,\r\n                selectedPay: null\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    const displayMarkers = () => {\r\n        return payments.map((store, index) => {\r\n            return <Marker key={store.id} id={store.id}\r\n                           title={`${store.address} ${store.ref_detail ? ' | '+store.ref_detail: ''}`}\r\n                           name={store.client_name}\r\n                           position={{\r\n                            lat: store.lat,\r\n                            lng: store.lon\r\n                           }}\r\n                           icon={{\r\n                               url: PayModel.getPin(store.status, store.cobro),\r\n                               anchor: new google.maps.Point(38,38),\r\n                               scaledSize: new google.maps.Size(42,42)\r\n                           }}\r\n                           onClick={(m,e) => onMarkerClick(m, e, store) } />\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div className={'content-google-map'}>\r\n            {payments && payments.length >= 1 &&\r\n                <Map google={google}  onClick={ (p) => onMapClicked(p) }\r\n                     style={{width: '100%', height: height, minHeight: height, position: 'relative'}}\r\n                     className={'google-map-min'}\r\n                     initialCenter={{ lat: payments[0].lat+3, lng: payments[0].lon+12}}\r\n                     zoom={zoom}>\r\n                    {displayMarkers()}\r\n                    <InfoWindow\r\n                        marker={state.activeMarker}\r\n                        visible={state.showingInfoWindow}>\r\n                        <div>\r\n                            {\r\n                                state.selectedPay &&\r\n                                <>\r\n                                    <h4>{state.selectedPay.client_name} {state.selectedPay.client_surname}</h4>\r\n                                    <p>{state.selectedPay.address}</p>\r\n                                    <small>{PayModel.elStatus(state.selectedPay.status)}</small>\r\n                                    {/*ver crédito*/}\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </InfoWindow>\r\n                </Map>\r\n            }\r\n\r\n            {/*BUTTONS*/\r\n                state.selectedPay &&\r\n                <div className={'map-btn'}>\r\n                    <BtnsPayOptions exec={exec} pay={state.selectedPay}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nPayMap.propTypes = {\r\n    payments: PropTypes.array,\r\n    zoom: PropTypes.number,\r\n    height: PropTypes.string,\r\n    exec: PropTypes.func\r\n};\r\n\r\nPayMap.defaultProps = {\r\n    height: '100%',\r\n    zoom: 12\r\n};\r\n\r\nexport default WithMapKey(PayMap);\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nimport PayItemCard from \"./PayItemCard\";\r\nimport DlgCancelPayment from \"../_dialogs/DlgCancelPayment\";\r\nimport DlgPayOrMora from \"../_dialogs/DlgPayOrMora\";\r\nimport PayMap from \"./../_map/PayMap\";\r\n\r\nconst PayCardOrMap = ({data, title, maps, grid}) => {\r\n    const [dlgCancel, setDlgCancel] = useState(false);\r\n    const [dlgPayMora, setDlgPayMora] = useState(false);\r\n    const [isMora, setIsMora] = useState(false);\r\n    const [selectPay, setSelectPay] = useState(null);\r\n    const [localGrid, setLocalGrid] = useState({\r\n       xs: 12, sm: 12, md: 12, lg: 6\r\n    });\r\n\r\n    const onExecute = (o, payload) => {\r\n        if (!payload.id || !o) {\r\n            return;\r\n        }\r\n        setSelectPay(payload.id);\r\n        switch (o) {\r\n            case 'cancel':\r\n                setDlgCancel(true);\r\n                //data[index].status = 1;\r\n                break;\r\n            case 'mora':\r\n                setIsMora(true);\r\n                setDlgPayMora(true);\r\n                //data[index].status = -1;\r\n                break;\r\n            case 'pay':\r\n                setIsMora(false);\r\n                setDlgPayMora(true);\r\n                //data[index].status = 2;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const success = (paymentId, status) => {\r\n        if (!paymentId || !status) return;\r\n        let index = data.findIndex(d => d.id === paymentId);\r\n        if (index >= 0) {\r\n            data[index].status = status;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const checkGrid = () => {\r\n            if (grid.lg === 12 || grid.md === 12) {\r\n                setLocalGrid({...grid, lg: 3});\r\n            }\r\n            if (grid.lg === 6 || grid.md === 6) {\r\n                setLocalGrid({...grid, lg: 6, md: 12});\r\n            }\r\n        };\r\n        checkGrid();\r\n    }, [grid]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                data && data.length > 0\r\n                    &&\r\n                    <>\r\n                        <h4>{title.toUpperCase()}</h4>\r\n                        {/*------------ | Render Cards | ------------*/}\r\n                        <Grid container spacing={2}>\r\n                            {/*TARJETAS*/\r\n                                !maps && data && data.map(p => (\r\n                                    <Grid item xs={localGrid.xs} sm={localGrid.sm} md={localGrid.md} lg={localGrid.lg} key={p.id}>\r\n                                        <PayItemCard pay={p} exec={(o, p) => onExecute(o, p)}/>\r\n                                    </Grid>\r\n                                ))\r\n                            }\r\n                            {/*MAPAS*/\r\n                                maps && data &&\r\n                                <Grid item xs={12}>\r\n                                    <PayMap payments={data} height={'380px'} zoom={11} exec={(o, p) => onExecute(o, p)} />\r\n                                </Grid>\r\n                            }\r\n                        </Grid>\r\n\r\n                        {/*------------ | Diálogos | ------------*/}\r\n                        <DlgCancelPayment open={dlgCancel}\r\n                                          selectPay={selectPay}\r\n                                          success={(p, s) => success(p, s)}\r\n                                          onClose={() => setDlgCancel(false)} />\r\n\r\n                        <DlgPayOrMora selectPay={selectPay}\r\n                                      mora={isMora}\r\n                                      open={dlgPayMora}\r\n                                      success={(p, s) => success(p, s)}\r\n                                      onClose={() => setDlgPayMora(false)} />\r\n                    </>\r\n\r\n            }\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nPayCardOrMap.propTypes = {\r\n    maps: PropTypes.bool.isRequired\r\n};\r\n\r\nPayCardOrMap.defaultProps = {\r\n    maps: false\r\n};\r\n\r\nexport default PayCardOrMap;\r\n","import React, {useRef, useState, Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Master from \"../Master\";\r\nimport {\r\n    Container, Paper, Grid, Button, Icon, IconButton,\r\n} from \"@material-ui/core\";\r\nimport {Settings} from '@material-ui/icons';\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport SelectZone from \"../zone/_partials/SelectZone\";\r\nimport SelectCobro from \"./_partials/SelectCobro\";\r\nimport SelectDate from \"./_partials/SelectDate\";\r\nimport Axios from \"axios\";\r\nimport {toast} from \"react-toastify\";\r\nimport {processErrors} from \"../../utils/utils\";\r\nimport PayCardOrMap from \"./_partials/PayCardOrMap\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst INITIAL = {\r\n    payments: [],\r\n    loader: false,\r\n    map: (localStorage.getItem('map') === 'true'),\r\n    grid: {md: 6, sm: 12, xs: 12},\r\n    filters: {\r\n        date: null,\r\n        zone: null,\r\n        cobro: null\r\n    }\r\n};\r\n\r\nclass PaymentList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = INITIAL\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPays();\r\n    }\r\n\r\n    getPays = (filters = INITIAL.filters) => {\r\n        let url = '/payment?q=';\r\n\r\n        if (filters.date) {\r\n            url += `&date=${filters.date}`;\r\n        }\r\n        if (filters.zone) {\r\n            url += `&zone=${filters.zone}`;\r\n        }\r\n        if (filters.cobro) {\r\n            url += `&only=${filters.cobro}`;\r\n        }\r\n        this.setState({...this.state, filters: filters, loader: true});\r\n        Axios.get(url).then(res => {\r\n            if (res.ok) {\r\n\r\n                let i = 0;\r\n                let grid = INITIAL.grid;\r\n                if (res.data.diario && res.data.diario.length > 0) i++;\r\n                if (res.data.semanal && res.data.semanal.length >0 ) i++;\r\n                if (res.data.quincenal && res.data.quincenal.length >0) i++;\r\n                if (res.data.mensual && res.data.mensual.length >0) i++;\r\n\r\n                if ( (i === 1 || i === 2) && this.state.map ) {\r\n                    grid = {\r\n                        xs: 12,\r\n                        sm: 12,\r\n                        md: 12,\r\n                        lg: 12\r\n                    }\r\n                }\r\n                if (i===1 && !this.state.map) {\r\n                    grid = {\r\n                        xs: 12,\r\n                        sm: 12,\r\n                        md: 12,\r\n                        lg: 12\r\n                    }\r\n                }\r\n\r\n                this.setState({...this.state, payments: res.data, grid: grid});\r\n            }\r\n        }).catch(err => toast.error(processErrors(err)))\r\n            .finally(() => this.setState({...this.state, loader: false}));\r\n\r\n    };\r\n\r\n    onConfig = type => {\r\n        switch (type) {\r\n            case 'map':\r\n                this.setState({...this.state, map: true});\r\n                localStorage.setItem('map', 'true');\r\n                break;\r\n            case 'noMap':\r\n                this.setState({...this.state, map: false});\r\n                localStorage.setItem('map', 'false');\r\n                break;\r\n            case 'x1':\r\n                this.setState({...this.state, grid: {...this.state.grid, md:12}});\r\n                break;\r\n            case 'x4':\r\n                this.setState({...this.state, grid: {...this.state.grid, md:6}});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onFilters = filters => {\r\n        this.getPays(filters);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Master>\r\n                <Container component={Paper}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <PayFilters initFilters={this.state.filters}\r\n                                        onFilter={(f) => this.onFilters(f)}>\r\n                                <PaymentListConfig map={this.state.map} onChange={(e) => this.onConfig(e)}/>\r\n                            </PayFilters>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <WithLoader loader={this.state.loader} elevation={0}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={this.state.grid.xs} sm={this.state.grid.sm} md={this.state.grid.md}>\r\n                                <PayCardOrMap title={'Diario'}\r\n                                              grid={this.state.grid}\r\n                                              maps={this.state.map}\r\n                                              data={this.state.payments.diario}/>\r\n                            </Grid>\r\n                            <Grid item xs={this.state.grid.xs} sm={this.state.grid.sm} md={this.state.grid.md}>\r\n                                <PayCardOrMap title={'Semanal'}\r\n                                              grid={this.state.grid}\r\n                                              maps={this.state.map}\r\n                                              data={this.state.payments.semanal}/>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={this.state.grid.xs} sm={this.state.grid.sm} md={this.state.grid.md}>\r\n                                <PayCardOrMap title={'Quincenal'}\r\n                                              maps={this.state.map}\r\n                                              grid={this.state.grid}\r\n                                              data={this.state.payments.quincenal}/>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={this.state.grid.xs} sm={this.state.grid.sm} md={this.state.grid.md}>\r\n                                <PayCardOrMap title={'Mensual'}\r\n                                              maps={this.state.map}\r\n                                              grid={this.state.grid}\r\n                                              data={this.state.payments.mensual}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </WithLoader>\r\n                </Container>\r\n            </Master>\r\n        );\r\n    }\r\n}\r\n\r\nconst PaymentListConfig = ({map, onChange}) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (type = '') => {\r\n        onChange(type);\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                <Settings />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {\r\n                    !map ? <MenuItem onClick={() => handleClose('map') }>Vista de Mapa</MenuItem>\r\n                        : <MenuItem onClick={() => handleClose('noMap') }>Vista de Pagos</MenuItem>\r\n                }\r\n\r\n                <MenuItem onClick={() => handleClose('x1')}>Cuadricula x1</MenuItem>\r\n                <MenuItem onClick={() => handleClose('x4')}>Cuadricula x4</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst PayFilters = ({onFilter, onClear, initFilters, children}) => {\r\n    const selectZRef = useRef();\r\n    const selectCRef = useRef();\r\n    const selectDRef = useRef();\r\n\r\n    const [filters, setFilters] = useState(initFilters);\r\n\r\n    const clearFilters = () => {\r\n        setFilters({date: null, zone: null, cobro: null});\r\n        selectZRef.current.reset();\r\n        selectCRef.current.reset();\r\n        selectDRef.current.reset();\r\n    };\r\n\r\n    return (\r\n      <Grid container spacing={1}>\r\n          <Grid item xs={6} md={3}>\r\n              <SelectZone ref={selectZRef}\r\n                          onChange={(z) => setFilters({...filters, zone: z})} />\r\n          </Grid>\r\n          <Grid item xs={6} md={3}>\r\n              <SelectCobro ref={selectCRef}\r\n                           onChange={(c) => setFilters({...filters, cobro: c})} />\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <SelectDate label={'Fecha recaudación'}\r\n                        initialDate={filters.date}\r\n                        ref={selectDRef}\r\n                        onChange={(d) => setFilters({...filters, date: d})}/>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={3} className={'d-flex'}>\r\n              {/*------------ | Botones | ------------*/}\r\n              <Button variant={'text'} color={'primary'} fullWidth onClick={() => onFilter(filters)}>\r\n                  <Icon>filter_list</Icon> &nbsp; Filtrar\r\n              </Button>\r\n              <IconButton onClick={() =>clearFilters()}>\r\n                  <Icon>clear_two_tone</Icon>\r\n              </IconButton>\r\n              {children}\r\n          </Grid>\r\n      </Grid>\r\n    );\r\n};\r\n\r\nPayFilters.propTypes = {\r\n    onFilter: PropTypes.func.isRequired,\r\n    onClear: PropTypes.func\r\n};\r\nPayFilters.defaultProps = {\r\n    filters: {\r\n        date: null,\r\n        zone: null,\r\n        cobro: null\r\n    }\r\n};\r\n\r\nexport default PaymentList;\r\n\r\n\r\n/*\r\nconst PaymentList = () => {\r\n    const [payments, setPayments] = useState([]);\r\n    const [loader, setLoader] = useState(false);\r\n    const [filters, setFilters] = useState({date: null, zone: null, cobro: null});\r\n    const [map, setMap] = useState(Boolean(localStorage.getItem('map')));\r\n    const [grid, setGrid] = useState({md: 6, sm: 12, xs: 12});\r\n\r\n    useEffect(() => {\r\n        const getPays = () => {\r\n            let url = '/payment?q=';\r\n            if (filters.date) {\r\n                url += `&date=${filters.date}`;\r\n            }\r\n            if (filters.zone) {\r\n                url += `&zone=${filters.zone}`;\r\n            }\r\n            if (filters.cobro) {\r\n                url += `&only=${filters.cobro}`;\r\n            }\r\n            setLoader(true);\r\n            Axios.get(url).then(res => {\r\n                if (res.ok) {\r\n                    setPayments(res.data);\r\n                }\r\n            }).catch(err => toast.error(processErrors(err)))\r\n                .finally(() => setLoader(false));\r\n\r\n        };\r\n        getPays();\r\n    }, [filters]);\r\n\r\n    const onConfig = type => {\r\n        switch (type) {\r\n            case 'map':\r\n                setMap(true);\r\n                localStorage.setItem('map', 'true');\r\n                break;\r\n            case 'noMap':\r\n                setMap(false);\r\n                localStorage.setItem('map', 'false');\r\n                break;\r\n            case 'x1':\r\n                setGrid({\r\n                    ...grid,\r\n                    md: 12\r\n                });\r\n                break;\r\n            case 'x4':\r\n                setGrid({\r\n                    ...grid,\r\n                    md: 6\r\n                });\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Master>\r\n            <Container component={Paper}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <PayFilters initFilters={filters} onFilter={(f) => setFilters(f)}>\r\n                            <PaymentListConfig map={map} onChange={(e) =>onConfig(e)}/>\r\n                        </PayFilters>\r\n                    </Grid>\r\n                </Grid>\r\n                <WithLoader loader={loader} elevation={0}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={grid.xs} sm={grid.sm} md={grid.md}>\r\n                            <PayCardOrMap title={'Diario'}\r\n                                          maps={map} data={payments.diario}/>\r\n                        </Grid>\r\n                        <Grid item xs={grid.xs} sm={grid.sm} md={grid.md}>\r\n                            <PayCardOrMap title={'Semanal'}\r\n                                          maps={map} data={payments.semanal}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={grid.xs} sm={grid.sm} md={grid.md}>\r\n                            <PayCardOrMap title={'Quincenal'}\r\n                                          maps={map} data={payments.quincenal}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={grid.xs} sm={grid.sm} md={grid.md}>\r\n                            <PayCardOrMap title={'Mensual'}\r\n                                          maps={map}\r\n                                          data={payments.mensual}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </WithLoader>\r\n            </Container>\r\n        </Master>\r\n    );\r\n};\r\n*/\r\n","import ListZone from \"../components/zone/ListZone\";\r\nimport {\r\n    CLIENT_ADD,\r\n    CLIENT_EDIT,\r\n    CLIENT_LIST,\r\n    CREDIT_BY_CLIENT,\r\n    CREDIT_LIST,\r\n    CREDIT_SHOW,\r\n    EMPLOY_ADD,\r\n    EMPLOY_EDIT,\r\n    EMPLOY_LIST,\r\n    EXPENSE_ADD,\r\n    EXPENSE_LIST,\r\n    EXPENSE_SHOW,\r\n    HOME,\r\n    LOGIN,\r\n    NOT_CONNECTED,\r\n    PAYMENT_LIST,\r\n    PAYROLL_ADD,\r\n    PAYROLL_ADD_USER,\r\n    PAYROLL_LIST,\r\n    PAYROLL_SHOW,\r\n    USER_EDIT,\r\n    ZONE_ADD,\r\n    ZONE_EDIT,\r\n    ZONE_LIST\r\n} from \"./urls\";\r\nimport Login from \"../components/auth/Login\";\r\nimport NotConnected from \"../components/errors/NotConnected\";\r\nimport EditEmploy from \"../components/employ/EditEmploy\";\r\nimport RegisterEmploy from \"../components/employ/RegisterEmploy\";\r\nimport ListEmploy from \"../components/employ/ListEmploy\";\r\nimport ShowExpense from \"../components/expenses/ShowExpense\";\r\nimport RegisterExpense from \"../components/expenses/RegisterExpense\";\r\nimport ListExpenses from \"../components/expenses/ListExpenses\";\r\nimport UpdateZone from \"../components/zone/UpdateZone\";\r\nimport RegisterZone from \"../components/zone/RegisterZone\";\r\nimport RegisterPayRoll from \"../components/payroll/RegisterPayRoll\";\r\nimport RegisterPayRollUser from \"../components/payroll/RegisterPayRollUser\";\r\nimport ShowPayRoll from \"../components/payroll/ShowPayRoll\";\r\nimport ListPayRoll from \"../components/payroll/ListPayRoll\";\r\nimport EditClient from \"../components/client/EditClient\";\r\nimport ListClient from \"../components/client/ListClient\";\r\nimport RegisterClient from \"../components/client/RegisterClient\";\r\nimport ListCredit from \"../components/credit/ListCredit\";\r\nimport ShowCredit from \"../components/credit/ShowCredit\";\r\nimport EditAuth from \"../components/auth/EditAuth\";\r\nimport HistoryClientCredit from \"../components/credit/HistoryClientCredit\";\r\nimport PaymentList from \"../components/payments/PaymentList\";\r\nimport NotFound from \"../components/errors/NotFound\";\r\n\r\nexport const routes = [\r\n    {\r\n        path: HOME,\r\n        name: 'Home',\r\n        exact: true,\r\n        //private: false,\r\n        component: Login\r\n    },\r\n    {\r\n        path: LOGIN,\r\n        name: 'Login',\r\n        exact: true,\r\n        component: Login\r\n    },\r\n    {\r\n        path: USER_EDIT,\r\n        name: 'userEdit',\r\n        exact: false,\r\n        component: EditAuth\r\n    },\r\n    {\r\n        path: NOT_CONNECTED,\r\n        name: 'NOT_CONNECTED',\r\n        component: NotConnected\r\n    },\r\n    /* Employ */\r\n    {\r\n        name: 'EmployEdit',\r\n        path: EMPLOY_EDIT,\r\n        exact: true,\r\n        private: true,\r\n        component: EditEmploy\r\n    },\r\n    {\r\n        name: 'EmployAdd',\r\n        path: EMPLOY_ADD,\r\n        private: true,\r\n        component: RegisterEmploy\r\n    },\r\n    {\r\n        name: 'EmployList',\r\n        path: EMPLOY_LIST,\r\n        private: true,\r\n        component: ListEmploy\r\n    },\r\n    /*Expense*/\r\n    {\r\n        name: 'ExpenseShow',\r\n        path: EXPENSE_SHOW,\r\n        exact: true,\r\n        private: true,\r\n        component: ShowExpense\r\n    },\r\n    {\r\n        name: 'ExpenseAdd',\r\n        path: EXPENSE_ADD,\r\n        private: true,\r\n        component: RegisterExpense\r\n    },\r\n    {\r\n        name: 'ExpenseList',\r\n        path: EXPENSE_LIST,\r\n        private: true,\r\n        component: ListExpenses\r\n    },\r\n    /*Zones*/\r\n    {\r\n        name: 'ZoneEdit',\r\n        path: ZONE_EDIT,\r\n        exact: true,\r\n        private: true,\r\n        component: UpdateZone\r\n    },\r\n    {\r\n        name: 'ZoneAdd',\r\n        path: ZONE_ADD,\r\n        exact: true,\r\n        private: true,\r\n        component: RegisterZone\r\n    },\r\n    {\r\n        name: 'ZoneList',\r\n        path: ZONE_LIST,\r\n        private: true,\r\n        component: ListZone\r\n    },\r\n    /*PayRolls*/\r\n    {\r\n        name: 'PayrollAdd',\r\n        path: PAYROLL_ADD,\r\n        exact: true,\r\n        private: true,\r\n        component: RegisterPayRoll\r\n    },\r\n    {\r\n        name: 'PayrollAddUser',\r\n        path: PAYROLL_ADD_USER,\r\n        exact: true,\r\n        private: true,\r\n        component: RegisterPayRollUser\r\n    },\r\n    {\r\n        name: 'PayrollShow',\r\n        path: PAYROLL_SHOW,\r\n        exact: true,\r\n        private: true,\r\n        component: ShowPayRoll\r\n    },\r\n    {\r\n        name: 'PayrollList',\r\n        path: PAYROLL_LIST,\r\n        exact: true,\r\n        private: true,\r\n        component: ListPayRoll\r\n    },\r\n    /*Client*/\r\n    {\r\n        name: 'ClientEdit',\r\n        path: CLIENT_EDIT,\r\n        exact: true,\r\n        private: true,\r\n        component: EditClient\r\n    },\r\n    {\r\n        name: 'ClientList',\r\n        path: CLIENT_LIST,\r\n        private: true,\r\n        component: ListClient\r\n    },\r\n    {\r\n        name: 'ClientAdd',\r\n        path: CLIENT_ADD,\r\n        private: true,\r\n        component: RegisterClient\r\n    },\r\n    /*Credit*!*/\r\n    {\r\n        name: 'CreditList',\r\n        path: CREDIT_LIST,\r\n        exact: true,\r\n        private: true,\r\n        component: ListCredit\r\n    },\r\n    {\r\n        name: 'CreditShow',\r\n        path: CREDIT_SHOW,\r\n        private: true,\r\n        component: ShowCredit\r\n    },\r\n    {\r\n        name: 'CreditClientHistory',\r\n        path: CREDIT_BY_CLIENT,\r\n        private: true,\r\n        component: HistoryClientCredit\r\n    },\r\n    /*PAYMENTS*/\r\n    {\r\n        name: 'PaymentList',\r\n        path: PAYMENT_LIST,\r\n        private: true,\r\n        component: PaymentList\r\n    },\r\n    {\r\n        name: 'not_found',\r\n        path: '*',\r\n        private: false,\r\n        component: NotFound\r\n    }\r\n];\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className={'not-found'}>\r\n            <h2>Error 404 | No se encontró la página</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nimport userService from '../../config/user.service';\r\n\r\nconst Protected = ({component: Component,...rest}) => {\r\n\r\n    if (userService.getToken()) {\r\n        return <Route component={Component}  {...rest}/>\r\n    }\r\n    //return <Route component={Component}  {...rest}/>\r\n    return <Redirect to=\"/login\"/>\r\n\r\n};\r\n\r\nexport {Protected};","import Axios from \"axios\";\r\nimport userService from '../../config/user.service'\r\nimport config from \"../../config/config\";\r\nimport {NOT_CONNECTED} from \"../../config/urls\";\r\n\r\n\r\nAxios.defaults.baseURL = config.api;\r\n\r\nAxios.interceptors.response.use(function (response) {\r\n\r\n    if(response.data.data!==null){\r\n\r\n        return response.data;\r\n    } else {\r\n\r\n        return  response;\r\n    }\r\n}, function (error) {\r\n\r\n\r\n    if (!error.status && !error.response) {\r\n        console.log('Sin conexión');\r\n        window.location.href = `${NOT_CONNECTED}`;\r\n        return;\r\n    }\r\n\r\n    const { response: { status }} = error;\r\n    if(status === 401) {\r\n        if(userService.getToken()) {\r\n            userService.clearSession();\r\n        }\r\n    }\r\n    return Promise.reject(error);\r\n});\r\n\r\nAxios.interceptors.request.use(function(config) {\r\n    const token = userService.getToken();\r\n    if ( token !== null ) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n}, function(err) {\r\n    return Promise.reject(err);\r\n});\r\n","import React, {useEffect} from 'react';\nimport {Provider} from \"react-redux\";\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport Axios from \"axios\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\n\nimport store from \"./store/store\";\nimport userService from './config/user.service';\nimport {ToastContainer} from \"react-toastify\";\n\nimport {theme} from './config/config';\nimport {routes} from \"./config/routes\";\nimport {NOT_CONNECTED} from \"./config/urls\";\nimport {addUser} from \"./store/actionsCreators\";\nimport {Protected} from \"./utils/auth\";\n\nimport './styles/app.scss';\nimport './utils/auth';\n\nimport 'moment-timezone';\nimport 'moment/locale/es';\n\nfunction App() {\n\n\n    useEffect(() => {\n        if(userService.getToken() && !window.location.pathname.includes(NOT_CONNECTED)) {\n            Axios.get('/user').then(res => {\n                store.dispatch(addUser(res.data));\n            });\n        }\n    }, []);\n\n    return (\n        <>\n            <Provider store={store}>\n                <MuiPickersUtilsProvider utils={MomentUtils} locale={'es'}>\n                <ToastContainer position=\"bottom-right\" closeButton={false} hideProgressBar={true}/>\n                <ThemeProvider theme={theme}>\n\n                    <Router>\n                        <Switch>\n                            {\n                                routes.map(route => (\n                                    !route.private ?\n                                    <Route key={route.name} path={route.path}\n                                       routeDef={route} routes={routes}\n                                       component={route.component} exact={!!route.exact }/> :\n                                    <Protected key={route.name} path={route.path}\n                                                routeDef={route} routes={routes}\n                                                component={route.component} exact={!!route.exact }/>\n                                ))\n                            }\n                        </Switch>\n                    </Router>\n                </ThemeProvider >\n                </MuiPickersUtilsProvider>\n            </Provider>\n        </>\n    );\n}\n\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}