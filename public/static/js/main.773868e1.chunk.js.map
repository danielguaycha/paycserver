{"version":3,"sources":["store/store.js","store/actions.js","config/user.service.js","config/config.js","store/actionsCreators.js","config/urls.js","components/_partials/hoc/WithAdmin.jsx","components/_partials/DrawerCustom.jsx","components/Master.jsx","utils/useGet.js","utils/utils.js","utils/useHttp.js","components/_partials/hoc/WithLoader.jsx","components/zone/ListZone.jsx","components/_partials/Alert.jsx","components/auth/Login.jsx","components/errors/NotConnected.jsx","components/employ/_form/FrmEmploy.jsx","components/employ/EditEmploy.jsx","components/employ/RegisterEmploy.jsx","components/errors/Forbidden.jsx","components/_partials/hoc/WithAdminContent.jsx","components/employ/ListEmploy.jsx","components/expenses/ShowExpense.jsx","components/expenses/_form/FrmExpense.jsx","components/expenses/RegisterExpense.jsx","components/employ/_partials/SelectEmploy.jsx","components/expenses/_partials/ExpenseFilter.jsx","components/expenses/_partials/ExpenseInfo.jsx","components/expenses/ListExpenses.jsx","components/zone/_form/FrmZone.jsx","components/zone/UpdateZone.jsx","components/zone/RegisterZone.jsx","components/payroll/DetailEmploy.jsx","components/payroll/_form/FrmPayRoll.jsx","components/payroll/RegisterPayRoll.jsx","components/payroll/RegisterPayRollUser.jsx","components/payroll/ShowPayRoll.jsx","components/payroll/ListPayRoll.jsx","components/client/_form/FrmClient.jsx","components/client/EditClient.jsx","components/_partials/CustomSearchRender.jsx","components/_partials/_modals/DlgConfirm.jsx","components/client/ListClient.jsx","components/client/RegisterClient.jsx","components/maps/WithMapKey.jsx","components/maps/MapViewLoc.jsx","components/maps/_dialog/DialogViewMapLoc.jsx","components/_partials/_modals/DlgInput.jsx","components/credit/_dialog/DlgListCredit.jsx","components/credit/_table/TableListCredit.jsx","components/credit/ListCredit.jsx","components/credit/_partials/BoxInfoCredit.jsx","components/credit/_partials/StatusCredit.jsx","components/credit/_partials/PayCobroCredit.jsx","components/credit/_partials/ClientDataCredit.jsx","components/_partials/TabPanel.jsx","components/_partials/_modals/DlgViewImg.jsx","components/_partials/_buttons/BtnShowImg.jsx","components/credit/_partials/_tabs/RefPrendaCredit.jsx","components/_partials/_modals/DlgViewLoc.jsx","components/_partials/_buttons/BtnShowLoc.jsx","components/employ/_partials/EmployByUser.jsx","components/employ/_dialog/DlgViewEmployUser.jsx","components/employ/_buttons/BtnPreviewEmploy.jsx","components/credit/_partials/DataCredit.jsx","components/payments/_dialogs/DlgCancelPayment.jsx","components/payments/_dialogs/DlgPayOrMora.jsx","components/payments/_partials/ViewParyments.jsx","components/credit/_skeleton/SkShowCredit.jsx","components/credit/ShowCredit.jsx","components/auth/_dialog/DlgPassword.jsx","components/auth/_buttons/BtnShowPasswordChange.jsx","components/auth/EditAuth.jsx","components/credit/HistoryClientCredit.jsx","components/zone/_partials/SelectZone.jsx","components/payments/_partials/SelectCobro.jsx","components/payments/_partials/SelectDate.jsx","components/payments/_partials/BtnsPayOptions.jsx","components/payments/_partials/PayItemCard.jsx","models/PayModel.js","components/payments/_map/PayMap.jsx","components/payments/_partials/PayCardOrMap.jsx","components/payments/PaymentList.jsx","config/routes.js","utils/auth/Protected.jsx","utils/auth/interceptors.js","App.jsx","serviceWorker.js","index.js"],"names":["initialStore","user","createStore","state","action","type","composeWithDevTools","token","localStorage","setItem","getItem","removeItem","window","location","href","undefined","server","api","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","success","info","warning","error","status","danger","tableOptions","filterType","download","print","selectableRowsOnClick","responsive","selectableRowsHeader","selectableRows","textLabels","body","noMatch","toolTip","columnHeaderTooltip","column","label","pagination","next","previous","rowsPerPage","displayRows","toolbar","search","downloadCsv","viewColumns","filterTable","filter","all","title","reset","titleAria","selectedRows","text","delete","deleteAria","tableMinOptions","sort","customFooter","setTableProps","padding","size","categories","asset","money","cantidad","currencyFormatter","format","code","cobros","name","value","addUser","toName","route","params","keys","Object","i","length","replace","connect","children","admin","root","userService","DrawerCustom","props","openSubmenu","employ","payroll","client","this","history","pathname","toString","includes","openSubmenuNow","submenu","setState","className","classes","src","alt","height","Divider","List","ListItem","button","activeClassName","component","NavLink","to","ListItemIcon","LocalAtm","ListItemText","Icon","onClick","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","nested","exact","PersonAdd","AttachMoney","LocalAtmRounded","React","Component","withRouter","dispatch","removeUser","useTheme","container","makeStyles","display","paddingLeft","spacing","btnContent","flexGrow","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","drawerPaper","content","position","top","useStyles","useState","mobileOpen","setMobileOpen","anchorEl","setAnchorEl","handleDrawerToggle","renderMenuUser","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","Link","CssBaseline","AppBar","Toolbar","IconButton","color","aria-label","edge","Button","aria-controls","aria-haspopup","event","currentTarget","Avatar","person","substring","Hidden","mdUp","implementation","Drawer","variant","anchor","direction","paper","ModalProps","smDown","LinearProgress","useGet","url","data","setData","loader","setLoader","setError","get","axios","config","then","res","ok","catch","err","response","console","log","useEffect","processErrors","msg","errors","message","toDate","date","moment","useHttp","method","formData","request","Promise","resolve","reject","options","baseURL","headers","WithLoader","elevation","Paper","CircularProgress","defaultProps","ListZone","zones","httpDelete","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","map","z","key","description","e","confirm","newZones","toast","Alert","show","toLowerCase","setUser","username","password","login","setErr","onChange","target","push","Container","maxWidth","Typography","sizes","onSubmit","preventDefault","access_token","finally","TextField","margin","required","fullWidth","autoComplete","autoFocus","disabled","WifiOff","startIcon","Refresh","FrmEmploy","initialData","initialRoutes","showPassword","checked","values","setValues","routes","setRoutes","http","isChecked","indexOf","chk","Grid","item","xs","sm","toUpperCase","surname","address","phones","sueldo","InputLabel","Select","labelId","pago_sueldo","md","FormControl","htmlFor","Input","endAdornment","InputAdornment","FormControlLabel","control","Checkbox","advance","FormHelperText","style","marginTop","index","splice","redirect","EditEmploy","match","RegisterEmploy","ArrowBack","goBack","ListEmploy","employs","remove","columns","customBodyRender","customFilterListOptions","render","v","tableMeta","updateValue","Chip","changeStatus","rowData","ArrowDownward","ArrowUpward","deleteEmploy","employId","findIndex","d","ShowExpense","expense","readOnly","monto","category","multiline","rows","image","selectedDate","showImage","employ_id","FormData","append","placeholder","Autocomplete","freeSolo","o","renderInput","disableToolbar","autoOk","onChangeDate","KeyboardButtonProps","option","onChangeEmploy","getOptionLabel","justifyContent","flexDirection","accept","files","URL","createObjectURL","onChangeFile","RegisterExpense","SelectEmploy","Axios","onOpen","getEmploys","loading","loadingText","inputValue","onInputChange","r","selected","InputProps","Fragment","ExpenseFilter","onFilter","filters","onClearFilters","selectERef","useRef","marginBottom","alignItems","dateFrom","dateTo","ref","current","clone","weekday","BoxInfo","icon","ExpenseInfo","Skeleton","today","week","month","HeaderTitle","Add","ListExpenses","expenses","setExpenses","total","setTotal","cancel","align","setCellHeaderProps","setCellProps","Tooltip","cancelExpense","page","rowPerPage","setFilters","expenseId","prompt","p","getExpenses","count","serverSide","onTableChange","tableState","filterList","FrmZone","initialZone","UpdateZone","zone","RegisterZone","DetailEmploy","loadData","prevProps","prevState","snapshot","now","pays","credits","FrmPayRoll","amount","extra","bonus","discount","concept","httpStore","RegisterPayRoll","RegisterPayRollUser","ShowPayRoll","ListPayRoll","invalidatePay","selectedId","FrmClient","email","inputProps","maxLength","phones_b","EditClient","CustomSearchRender","handleTextChange","searchText","onKeyDown","keyCode","onHide","onHandleSearch","onSearch","document","addEventListener","removeEventListener","Grow","appear","el","rootRef","inputRef","searchField","Search","clearIcon","Clear","withStyles","flex","paddingTop","DlgConfirm","onConfirm","desc","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","ListClient","clients","selectClient","setSelectClient","dlgConfirm","setDlgConfirm","q","setQ","addSelectClient","deleteClient","clientId","customSearchRender","handleSearch","hideSearch","RegisterClient","Loading","WrappedComponent","GoogleApiWrapper","apiKey","LoadingContainer","MapViewLoc","google","initialCenter","lat","lng","lon","zoom","WithMapKey","DialogViewMapLoc","isOpen","fullScreen","useMediaQuery","down","DlgInput","inputLabel","setText","onEnter","DlgListCredit","forwardRef","credit","reqUpdate","dialogMap","setDialogMap","dialogInput","setDialogInput","dialogConfirm","setDialogConfirm","useImperativeHandle","openConfirm","openInput","openMap","geo_lon","geo_lat","ref_detail","parseFloat","motivo","warn","TableListCredit","personId","userId","searchable","dialog","setCredits","setCredit","getCredits","confirmCredit","creditId","end","cred","find","c","viewLoc","ListCredit","BoxInfoCredit","borderRadius","StatusCredit","severity","PayCobroCredit","plazo","cobro","ClientDataCredit","TabPanel","other","role","hidden","DlgViewImg","img","BtnShowImg","iconButton","openDialog","setOpenDialog","openDialogImg","Photo","RefPrendaCredit","ref_img","prenda","setValue","StyledTabs","newValue","StyledTab","a11yProps","colSpan","detail","backgroundColor","background","textTransform","fontWeight","typography","fontWeightRegular","fontSize","pxToRem","Tab","disableRipple","Tabs","TabIndicatorProps","DlgViewLoc","BtnShowLoc","NotListedLocation","EmployByUser","DlgViewEmployUser","BtnPreviewEmploy","DataCredit","f_inicio","f_fin","created_at","ruta","user_id","DlgCancelPayment","selectPay","DlgPayOrMora","mora","processPay","confirmPayOrMora","ViewPayments","pay","setOpen","setOpenInput","setOpenConfirm","setMora","selectUser","setSelectUser","setSelectPay","showUser","setPay","paymentId","electableRowsHeader","SKShowCredit","ShowCredit","utilidad","total_utilidad","n_pagos","client_name","client_surname","client_address","person_id","DlgPassword","password_now","handleClickShowPassword","BtnShowPasswordChange","EditAuth","HistoryClientCredit","SelectZone","getZones","SelectCobro","SelectDate","initialDate","hideToolbar","dateSelected","BtnsPayOptions","exec","HtmlTooltip","tooltip","border","Info","credit_id","Payment","Cancel","PayItemCard","number","client_id","upper","st","PayMap","payments","showingInfoWindow","activeMarker","selectedPlace","selectedPay","minHeight","store","PayModel","maps","Point","scaledSize","Size","m","marker","visible","PayCardOrMap","grid","dlgCancel","setDlgCancel","dlgPayMora","setDlgPayMora","isMora","setIsMora","lg","localGrid","setLocalGrid","onExecute","payload","s","INITIAL","PaymentList","getPays","diario","semanal","quincenal","mensual","onConfig","onFilters","initFilters","f","PaymentListConfig","handleClose","Settings","PayFilters","onClear","selectZRef","selectCRef","selectDRef","path","Login","NotConnected","private","Protected","rest","defaults","interceptors","use","Authorization","App","utils","MomentUtils","locale","closeButton","hideProgressBar","ThemeProvider","routeDef","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.773868e1.chunk.js","sourcesContent":["import { createStore } from 'redux'\r\nimport {ADD_USER, REMOVE_USER} from \"./actions\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\n\r\n// init state\r\nconst initialStore = {\r\n    user: null,\r\n};\r\n\r\n// Reducer\r\nconst rootReducer = (state = initialStore, action) => {\r\n    switch (action.type) {\r\n        case ADD_USER:\r\n            return {\r\n                user: action.user\r\n            };\r\n        case REMOVE_USER:\r\n            return {\r\n                user: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default createStore(rootReducer, composeWithDevTools());","export const ADD_USER = 'ADD_USER';\r\nexport const REMOVE_USER = 'REMOVE_USER';","export default {\r\n\r\n    setSession({ token }) {\r\n        localStorage.setItem('token',token);\r\n    },\r\n\r\n    clearSession() {\r\n        if(localStorage.getItem('token')) {\r\n            localStorage.removeItem('token');\r\n            window.location.href = \"/login\";\r\n        }\r\n    },\r\n\r\n    getToken() {\r\n        return (localStorage.getItem('token') === undefined ? null : localStorage.getItem('token'));\r\n    },\r\n\r\n}\r\n","import {createMuiTheme} from \"@material-ui/core\";\r\nimport currencyFormatter from 'currency-formatter';\r\n\r\nimport React from \"react\";\r\nconst ip = '192.168.1.60';\r\nlet server = `http://${ip}:80`;\r\n\r\n// Function\r\nconst getUrl = () => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n        return '';\r\n    } else {\r\n        return `http://${ip}:80`;\r\n    }\r\n}\r\n\r\n\r\nexport default {\r\n    api: `${getUrl()}/api`,\r\n}\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#334753',\r\n            main: '#001a28',\r\n            dark: '#00121c',\r\n            contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n            light: '#ffac33',\r\n            main: '#ff9800',\r\n            dark: '#ff5722',\r\n            contrastText: '#fff',\r\n        },\r\n        success: {\r\n            main : \"#bac778\",\r\n        },\r\n        info: {\r\n            main : \"#75c7b9\",\r\n        },\r\n        warning: {\r\n            main : \"#c7925d\",\r\n        },\r\n\r\n        error: {\r\n            main : \"#e36570\",\r\n        },\r\n    },\r\n    status: {\r\n        danger: 'orange',\r\n    },\r\n});\r\n\r\nexport const tableOptions = {\r\n    filterType: \"checkbox\",\r\n    download: false,\r\n    print: false,\r\n    selectableRowsOnClick: false,\r\n    responsive: \"stacked\",\r\n    selectableRowsHeader: false,\r\n    selectableRows: 'none',\r\n    textLabels: {\r\n        body: {\r\n            noMatch: \"No se encontró coincidencias\",\r\n            toolTip: \"Ordenar\",\r\n            columnHeaderTooltip: column => `Ordenar Por: ${column.label}`\r\n        },\r\n        pagination: {\r\n            next: \"Siguiente\",\r\n            previous: \"Anterior\",\r\n            rowsPerPage: \"# Filas\",\r\n            displayRows: \"de\",\r\n        },\r\n        toolbar: {\r\n            search: \"Buscar\",\r\n            downloadCsv: \"Descargar CSV\",\r\n            print: \"Imprimir\",\r\n            viewColumns: \"Ver Columnas\",\r\n            filterTable: \"Filtrar Tabla\",\r\n        },\r\n        filter: {\r\n            all: \"Todo\",\r\n            title: \"FILTROS\",\r\n            reset: \"RESETEAR\",\r\n        },\r\n        viewColumns: {\r\n            title: \"Mostrar Columnas\",\r\n            titleAria: \"Mostrar/Ocultar Columnas\",\r\n        },\r\n        selectedRows: {\r\n            text: \"fila(s) seleccionadas\",\r\n            delete: \"Eliminar\",\r\n            deleteAria: \"Eliminar filas seleccionadas\",\r\n        },\r\n    }\r\n};\r\n\r\nexport const tableMinOptions = {\r\n    selectableRowsHeader: false,\r\n    filter: false,\r\n    search: false,\r\n    sort: false,\r\n    download: false,\r\n    print: false,\r\n    viewColumns: false,\r\n    selectableRows: 'none',\r\n    customFooter: () => {\r\n        return <></>;\r\n    },\r\n    setTableProps: () => {\r\n        return {\r\n            padding: \"default\" ,\r\n            size: \"small\"\r\n        };\r\n    }\r\n};\r\n\r\nexport const categories = [\r\n    'COMIDA',\r\n    'COMBUSTIBLE',\r\n    'PAGO DE SERVICIO',\r\n    'SERVICIO BÁSICO',\r\n    'OTROS PAGOS',\r\n    'OTRO'\r\n];\r\n\r\nexport const asset = (asset) => {\r\n  return `${server}/api/image/${asset}`;\r\n};\r\n\r\nexport const money  = (cantidad) => {\r\n    return currencyFormatter.format(cantidad, {code: 'USD'});\r\n};\r\n\r\nexport const cobros = [\r\n    {name: 'DIARIO', value: 'Diario'},\r\n    {name: 'SEMANAL', value: 'Semanal'},\r\n    {name: 'QUINCENAL', value: 'Quincenal'},\r\n    {name: 'MENSUAL', value: 'Mensual'},\r\n];\r\n\r\nexport const plazos = [\r\n    {name: 'SEMANAL', value: 'Semanal'},\r\n    {name: 'QUINCENAL', value: 'Quincenal'},\r\n    {name: 'MENSUAL', value: 'Mensual'},\r\n    {name: 'MES_Y_MEDIO', value: 'Mes y medio'},\r\n    {name: 'DOS_MESES', value: 'Dos meses'}\r\n];\r\n\r\n\r\n\r\n\r\n\r\n","import {ADD_USER, REMOVE_USER} from \"./actions\";\r\n\r\nconst addUser = (user) => ({\r\n    type: ADD_USER,\r\n    user\r\n});\r\n\r\nconst removeUser = () => ({\r\n    type: REMOVE_USER\r\n});\r\n\r\nexport {addUser, removeUser};","export const HOME = '/';\r\nexport const LOGIN = '/login';\r\nexport const LOGIN_REDIRECT = '/credit';\r\nexport const NOT_CONNECTED = '/not_connected';\r\n\r\n// USER\r\nexport const USER_EDIT = '/user';\r\n\r\n//EMPLOY\r\nexport const EMPLOY_EDIT = '/empleado/:id/edit';\r\nexport const EMPLOY_ADD = '/empleado/add';\r\nexport const EMPLOY_LIST = '/empleado';\r\n\r\n//EXPENSES\r\nexport const EXPENSE_ADD = '/expense/add';\r\nexport const EXPENSE_LIST = '/expense';\r\nexport const EXPENSE_SHOW = '/expense/view/:id';\r\n\r\n//ZONES\r\nexport const ZONE_EDIT = '/ruta/:id/edit';\r\nexport const ZONE_ADD = '/ruta/add';\r\nexport const ZONE_LIST = '/ruta';\r\n\r\n//CLIENTS\r\nexport const CLIENT_EDIT = '/cliente/:id/edit';\r\nexport const CLIENT_ADD = '/cliente/add';\r\nexport const CLIENT_LIST = '/client';\r\n\r\n//PAYROLLS\r\nexport const PAYROLL_LIST = '/payroll';\r\nexport const PAYROLL_ADD = '/payroll/add';\r\nexport const PAYROLL_ADD_USER = '/payroll/add/:id';\r\nexport const PAYROLL_SHOW = '/payroll/:id';\r\n\r\n//CREDITS\r\nexport const CREDIT_LIST = '/credit';\r\nexport const CREDIT_BY_CLIENT = '/credit/client/:id';\r\nexport const CREDIT_SHOW = '/credit/view/:id';\r\n\r\n//PAYMENTS\r\nexport const PAYMENT_LIST = '/payment';\r\n\r\nexport const toName = (route, params) => {\r\n    const keys = Object.keys(params);\r\n    for(let i = 0; i<keys.length; i++) {\r\n        route = route.replace(`:${keys[i]}`, params[keys[i]]);\r\n    }\r\n    return route;\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport userService from '../../../config/user.service';\r\n\r\nconst WithAdmin = ({user, children}) => {\r\n\r\n    return (<>\r\n        {((user.admin || user.root) && userService.getToken()) ? children: <></>}\r\n    </>)\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(WithAdmin);\r\n","import React from 'react';\r\nimport {Collapse, Divider, Icon, List, ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport {NavLink, withRouter} from \"react-router-dom\";\r\nimport {\r\n    CLIENT_LIST, CREDIT_LIST,\r\n    EMPLOY_ADD,\r\n    EMPLOY_LIST,\r\n    EXPENSE_LIST, PAYMENT_LIST,\r\n    PAYROLL_ADD,\r\n    PAYROLL_LIST,\r\n    ZONE_LIST\r\n} from \"../../config/urls\";\r\nimport WithAdmin from \"./hoc/WithAdmin\";\r\nimport {AttachMoney, ExpandLess, ExpandMore, PersonAdd, LocalAtmRounded, LocalAtm} from \"@material-ui/icons\";\r\n\r\nclass DrawerCustom extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openSubmenu: {\r\n                employ: false,\r\n                payroll: false,\r\n                client: false\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.history.location.pathname.toString().includes(EMPLOY_LIST) && !this.state.openSubmenu.employ){\r\n            this.openSubmenuNow('employ');\r\n        }\r\n\r\n        if(this.props.history.location.pathname.toString().includes(PAYROLL_LIST) && !this.state.openSubmenu.payroll){\r\n            this.openSubmenuNow('payroll');\r\n        }\r\n    }\r\n\r\n    openSubmenuNow (submenu) {\r\n        this.setState({\r\n            openSubmenu: {\r\n                [submenu]: !this.state.openSubmenu[submenu]\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={this.props.classes.toolbar}>\r\n                    <div className=\"toolbar-custom\">\r\n                        <img src={\"/img/payicon.png\"} alt=\"PayCenter\" height={40}/>\r\n                        <h5>AdminDashboard</h5>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n\r\n                    <ListItem button activeClassName={'active'} component={NavLink} to={PAYMENT_LIST} >\r\n                        <ListItemIcon><LocalAtm/></ListItemIcon>\r\n                        <ListItemText primary='Cobros' />\r\n                    </ListItem>\r\n\r\n                    <ListItem button activeClassName={'active'} component={NavLink} to={CREDIT_LIST} >\r\n                        <ListItemIcon><Icon>monetization_on</Icon></ListItemIcon>\r\n                        <ListItemText primary='Créditos' />\r\n                    </ListItem>\r\n\r\n                    {/*Zonas*/}\r\n\r\n                    <ListItem button activeClassName={'active'} component={NavLink} to={ZONE_LIST} >\r\n                        <ListItemIcon><Icon>map</Icon></ListItemIcon>\r\n                        <ListItemText primary='Rutas/Zonas' />\r\n                    </ListItem>\r\n\r\n                    {/*Clientes*/}\r\n\r\n                    <ListItem button activeClassName={'active'} component={NavLink} to={CLIENT_LIST} >\r\n                        <ListItemIcon><Icon>people_alt</Icon></ListItemIcon>\r\n                        <ListItemText primary='Clientes' />\r\n                    </ListItem>\r\n\r\n\r\n\r\n                    {/*Admin Routes*/}\r\n                    <WithAdmin>\r\n                        {/*Empleados*/}\r\n                        <>\r\n                            <ListItem button onClick={ () => this.openSubmenuNow('employ')}>\r\n                                <ListItemIcon><Icon>group</Icon></ListItemIcon>\r\n                                <ListItemText primary='Empleados' />\r\n                                {this.state.openSubmenu.employ ? <ExpandLess /> : <ExpandMore />}\r\n                            </ListItem>\r\n\r\n                            <Collapse in={this.state.openSubmenu.employ} timeout=\"auto\" unmountOnExit>\r\n                                <List component=\"div\" disablePadding>\r\n                                    {/*Agregar Empleados*/}\r\n                                    <ListItem button className={this.props.classes.nested} activeClassName={'active'}\r\n                                              exact\r\n                                              component={NavLink} to={EMPLOY_LIST}>\r\n                                        <ListItemIcon>\r\n                                            <Icon>list</Icon>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Listar\" />\r\n                                    </ListItem>\r\n\r\n                                    <ListItem button className={this.props.classes.nested} activeClassName={'active'}\r\n                                              exact\r\n                                              component={NavLink} to={EMPLOY_ADD}>\r\n                                        <ListItemIcon>\r\n                                            <PersonAdd />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Agregar\" />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </Collapse>\r\n                        </>\r\n\r\n                        {/*Roles de Pago*/}\r\n                        <>\r\n                            <ListItem button onClick={ () => this.openSubmenuNow('payroll')}>\r\n                                <ListItemIcon><AttachMoney/></ListItemIcon>\r\n                                <ListItemText primary='Sueldo/Salario' />\r\n                                {this.state.openSubmenu.payroll ? <ExpandLess /> : <ExpandMore />}\r\n                            </ListItem>\r\n\r\n                            <Collapse in={this.state.openSubmenu.payroll} timeout=\"auto\" unmountOnExit>\r\n                                <List component=\"div\" disablePadding>\r\n                                    {/*Agregar Empleados*/}\r\n                                    <ListItem button className={this.props.classes.nested} activeClassName={'active'}\r\n                                              exact\r\n                                              component={NavLink} to={PAYROLL_LIST}>\r\n                                        <ListItemIcon>\r\n                                            <Icon>list</Icon>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Listar\" />\r\n                                    </ListItem>\r\n\r\n                                    <ListItem button className={this.props.classes.nested} activeClassName={'active'}\r\n                                              exact\r\n                                              component={NavLink} to={PAYROLL_ADD}>\r\n                                        <ListItemIcon>\r\n                                            <LocalAtmRounded />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Pagar\" />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </Collapse>\r\n                        </>\r\n                    </WithAdmin>\r\n\r\n                    {/*Gastos*/}\r\n                    <ListItem button activeClassName={'active'} component={NavLink} to={EXPENSE_LIST} >\r\n                        <ListItemIcon><Icon>local_atm</Icon></ListItemIcon>\r\n                        <ListItemText primary='Gastos' />\r\n                    </ListItem>\r\n                </List>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default withRouter(DrawerCustom);\r\n","import React from 'react';\r\nimport {\r\n    CssBaseline,\r\n    Drawer,\r\n    LinearProgress,\r\n    Button,\r\n    AppBar,\r\n    makeStyles,\r\n    Toolbar,\r\n    Avatar,\r\n    Icon,\r\n    useTheme,\r\n    Hidden, Menu, MenuItem\r\n} from \"@material-ui/core\";\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport userService from '../config/user.service';\r\nimport {removeUser} from \"../store/actionsCreators\";\r\nimport DrawerCustom from \"./_partials/DrawerCustom\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {USER_EDIT} from \"../config/urls\";\r\n\r\nconst Master = (props) => {\r\n    const drawerWidth = 250;\r\n    const barHeight = 55;\r\n    const theme = useTheme();\r\n    const { container } = props;\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        nested: {\r\n            paddingLeft: theme.spacing(3),\r\n        },\r\n        btnContent: {\r\n            flexGrow: 1,\r\n        },\r\n        drawer: {\r\n            [theme.breakpoints.up('md')]: {\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n            },\r\n        },\r\n        appBar: {\r\n            height: barHeight,\r\n            [theme.breakpoints.up('md')]: {\r\n                width: `calc(100% - ${drawerWidth}px)`,\r\n                marginLeft: drawerWidth,\r\n            },\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n        toolbar: {\r\n          height: barHeight\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n            position: 'relative',\r\n            top: barHeight\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n\r\n    const handleMenuClick = event => { setAnchorEl(event.currentTarget);};\r\n    const handleMenuClose = () => {setAnchorEl(null);};\r\n    const handleDrawerToggle = () => {setMobileOpen(!mobileOpen);};\r\n\r\n    const logout = () => {\r\n        props.removeUser();\r\n        userService.clearSession();\r\n    };\r\n\r\n    const renderMenuUser = (\r\n        <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleMenuClose}>\r\n            <MenuItem component={Link} to={USER_EDIT}>Mis datos</MenuItem>\r\n            <MenuItem onClick={logout}>Cerrar Sesión</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {props.user\r\n                ?\r\n                <div className={classes.root}>\r\n                    <CssBaseline/>\r\n                    <AppBar position=\"fixed\" className={classes.appBar}>\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"Abrir menú\"\r\n                                edge=\"start\"\r\n                                onClick={handleDrawerToggle}\r\n                                className={classes.menuButton}>\r\n                                <Icon>menu</Icon>\r\n                            </IconButton>\r\n\r\n                            <div className='right-menu'>\r\n                                <Button\r\n                                    aria-label=\"account of current user\"\r\n                                    aria-controls=\"menu-appbar\"\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleMenuClick}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <Avatar className={'avatar-toolbar'}>{props.user.person.name.substring(0, 1)}</Avatar>&nbsp;\r\n                                    { props.user.person.name }\r\n                                </Button>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    { renderMenuUser }\r\n\r\n                    <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                        <Hidden mdUp implementation=\"css\">\r\n                            <Drawer\r\n                                container={container}\r\n                                variant=\"temporary\"\r\n                                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                                open={mobileOpen}\r\n                                onClose={handleDrawerToggle}\r\n                                classes={{\r\n                                    paper: classes.drawerPaper,\r\n                                }}\r\n                                ModalProps={{\r\n                                    keepMounted: true, // Better open performance on mobile.\r\n                                }}>\r\n                                <DrawerCustom classes={classes} />\r\n                            </Drawer>\r\n                        </Hidden>\r\n                        <Hidden smDown implementation=\"css\">\r\n                            <Drawer classes={{paper: classes.drawerPaper,}}\r\n                                variant=\"permanent\" open>\r\n                                <DrawerCustom classes={classes} />\r\n                            </Drawer>\r\n                        </Hidden>\r\n                    </nav>\r\n                    {/*Contenido*/}\r\n                    <main className={classes.content}>{ props.children}</main>\r\n                </div>\r\n                :\r\n                <div className=\"loader-page\" ><LinearProgress color='secondary' /></div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nMaster.propTypes = {\r\n    container: PropTypes.instanceOf(typeof Element === 'undefined' ? Object : Element),\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    removeUser() {\r\n        dispatch(removeUser());\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Master);\r\n","import { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport config from \"../config/config\";\r\nconst useGet = (url) => {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loader, setLoader] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const get = (url) =>{\r\n        setLoader(true);\r\n        axios.get(config.api+url)\r\n            .then(res => {\r\n                if(res.ok) {\r\n                    setData(res.data);\r\n                }\r\n                setLoader(false);\r\n            }).catch(err => {\r\n            if(err.response && err.response.data){\r\n                setError(err.response.data);\r\n            } else setError(err);\r\n            setLoader(false);\r\n            console.log(\"URL PATH \",config.api+url);\r\n        });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        get(url);\r\n\r\n    }, [url]);\r\n\r\n    return {\r\n        loader, error, data, setData, get\r\n    }\r\n};\r\nexport default useGet;\r\n","import moment from \"moment\";\r\nexport const processErrors = (err) => {\r\n    if(err.response && err.response.data){\r\n        let msg = '';\r\n        let response = err.response.data;\r\n\r\n        if (response.errors) {\r\n            for (let i = 0; i<response.errors.length; i++){\r\n                msg +=(response.errors[i][0])+',';\r\n            }\r\n            msg+='**';\r\n            msg = msg.replace(',**', '');\r\n        }\r\n\r\n        else if(response.message) {\r\n            msg = response.message;\r\n        }\r\n\r\n        else if(response.error) {\r\n            msg = response.error;\r\n        }\r\n\r\n        else {\r\n            msg = 'Error desconocido, contacte a soporte';\r\n        }\r\n        return(msg);\r\n    }\r\n    else if(err.message) {\r\n        return(err.message);\r\n    }\r\n    else return 'Upps! el servidor no ha respondido como se esperaba, contacte a soporte!';\r\n};\r\n\r\nexport const toDate = (date) => {\r\n    if (!date) return '--/--/----';\r\n    return moment(date).format('DD/MMMM/Y')\r\n};\r\n\r\nexport const toDateHour = (date) => {\r\n    if (!date) return '--/--/----';\r\n    return moment(date).format('DD/MMMM/Y - H:mm')\r\n};\r\n","import {useState} from 'react';\r\nimport axios from \"axios\";\r\nimport config from \"../config/config\";\r\nimport {processErrors} from \"./utils\";\r\nconst useHttp = (method='post', formData=false) => {\r\n\r\n    const [loader, setLoader] = useState(false);\r\n\r\n\r\n    const request = (url, data={}) => {\r\n        return new Promise  ((resolve, reject) => {\r\n            setLoader(true);\r\n            let options = {\r\n                method: method,\r\n                baseURL: config.api,\r\n                url,\r\n                data,\r\n            };\r\n\r\n            if (formData) {\r\n                options.headers = {\r\n                    'content-type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            axios(options).then(res => {\r\n                setLoader(false);\r\n                resolve(res);\r\n            }).catch(err => {\r\n                setLoader(false);\r\n                reject(processErrors(err));\r\n            })\r\n        });\r\n    };\r\n\r\n    return {\r\n        loader, request\r\n    }\r\n};\r\nexport default useHttp;\r\n","import React from 'react';\r\nimport {CircularProgress, Paper} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nconst WithLoader = ({ children, loader, text, elevation }) => {\r\n    return (\r\n        <>\r\n            {\r\n                loader === true\r\n                    ? <Paper elevation={elevation} className=\"loader-container\"> <CircularProgress color=\"secondary\"/> <p>{text}</p> </Paper>\r\n                    : children\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nWithLoader.propTypes = {\r\n    text: PropTypes.string,\r\n    loader: PropTypes.bool.isRequired\r\n};\r\n\r\nWithLoader.defaultProps = {\r\n    text: 'Cargando...',\r\n    loader: false,\r\n    elevation: 2\r\n};\r\n\r\nexport default WithLoader;\r\n","import React from 'react';\r\nimport Master from \"../Master\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport {\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, IconButton, Icon, Divider, Button\r\n} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport useHttp from \"../../utils/useHttp\";\r\nimport {toast} from \"react-toastify\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport WithAdmin from \"../_partials/hoc/WithAdmin\";\r\nimport {toName, ZONE_ADD, ZONE_EDIT} from \"../../config/urls\";\r\n\r\nconst ListZone = ({history}) => {\r\n\r\n    const zones = useGet('/route');\r\n    const httpDelete = useHttp('delete');\r\n\r\n    const deleteZone = (id) => {\r\n        const confirm = window.confirm('¿Estas seguro que deseas eliminar esta zona?');\r\n        if(!confirm) return;\r\n\r\n        httpDelete.request(`/route/${id}`).then(res => {\r\n            if(res.ok){\r\n                const newZones = zones.data.filter(e => e.id !== id);\r\n                zones.setData(newZones);\r\n                toast.success('Ruta eliminada con éxito');\r\n            } else toast.error('No se ha podido eliminar la ruta');\r\n        }).catch(e => {\r\n            toast.error(e);\r\n        })\r\n    };\r\n    return (\r\n        <Master>\r\n            <WithLoader loader={zones.loader}>\r\n                <TableContainer component={Paper} className=\"paper-content\">\r\n                    <div className=\"paper-header\">\r\n                        <div className=\"paper-header-ancle\">\r\n                            <h4><Icon>list</Icon> Lista de rutas</h4>\r\n                            <WithAdmin>\r\n                                <Button to={ZONE_ADD} component={Link} variant={\"text\"} color={\"secondary\"}>\r\n                                    <Icon>add</Icon> Nueva ruta\r\n                                </Button>\r\n                            </WithAdmin>\r\n                        </div>\r\n                        <Divider />\r\n                    </div>\r\n                    <Table size=\"small\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Nombre</TableCell>\r\n                                <TableCell>Descripción</TableCell>\r\n                                <WithAdmin>\r\n                                    <TableCell>Opciones</TableCell>\r\n                                </WithAdmin>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>\r\n                            {zones.data.map(z => (\r\n                                <TableRow key={z.id}>\r\n                                    <TableCell>\r\n                                        {z.name}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {z.description === null ? 'Ninguna' : z.description }\r\n                                    </TableCell>\r\n                                    <WithAdmin>\r\n                                        <TableCell>\r\n                                            <IconButton component={Link}\r\n                                                        to={toName(ZONE_EDIT, {id: z.id})}\r\n                                                        size={\"small\"}\r\n                                                        aria-label=\"Editar\">\r\n                                                <Icon>edit</Icon>\r\n                                            </IconButton>\r\n                                            <IconButton onClick={ e => deleteZone(z.id)}\r\n                                                        size={\"small\"}\r\n                                                        aria-label=\"delete\">\r\n                                                <Icon>delete</Icon>\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </WithAdmin>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </WithLoader>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default ListZone;\r\n","import React from 'react';\r\nimport {PropTypes} from \"prop-types\";\r\nimport {Icon} from \"@material-ui/core\";\r\n\r\nconst Alert = ({message, type, children, show }) => {\r\n\r\n    if(show)\r\n        return (\r\n            <div className={\"alert outline \"+type.toLowerCase()}>\r\n                <Icon>info</Icon>\r\n                <div>\r\n                    {message}\r\n                </div>\r\n            </div>);\r\n    else return (<></>);\r\n};\r\n\r\nAlert.propTypes = {\r\n    message: PropTypes.string,\r\n    type: PropTypes.string,\r\n    show: PropTypes.bool\r\n};\r\n\r\nAlert.defaultProps = {\r\n    type: 'err',\r\n    show: false\r\n};\r\n\r\nexport default Alert;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Container,\r\n    TextField,\r\n    Typography,\r\n    Button,\r\n    CssBaseline,\r\n    Avatar,\r\n    Paper, LinearProgress\r\n} from \"@material-ui/core\";\r\nimport useHttp from \"../../utils/useHttp\";\r\nimport Alert from \"../_partials/Alert\";\r\nimport userService from '../../config/user.service';\r\nimport {addUser} from \"../../store/actionsCreators\";\r\nimport {connect} from \"react-redux\";\r\nimport {toast} from \"react-toastify\";\r\nimport {LOGIN_REDIRECT} from \"../../config/urls\";\r\n\r\nconst Login = ({ history, setUser }) => {\r\n    const [data, setData] = useState({username: '', password: ''});\r\n    const login = useHttp();\r\n    const user = useHttp('get');\r\n\r\n\r\n    const [err, setErr] = useState(null);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setErr(null);\r\n        login.request('/login', data).then(res => {\r\n\r\n            if(res.access_token) {\r\n                userService.setSession({token: res.access_token});\r\n\r\n                user.request('/user').then(res => {\r\n                    login.loader = user.loader;\r\n                    if(res.ok){\r\n                        setUser(res.data);\r\n                        history.push(LOGIN_REDIRECT);\r\n                    } else {\r\n                        toast.error('Algo ha salido mal, comuníquese con soporte');\r\n                        localStorage.removeItem('token');\r\n                    }\r\n                }).finally(() => login.loader = user.loader);\r\n\r\n\r\n            } else setErr('No se ha podido iniciar, consulte con soporte');\r\n\r\n        }).catch(err => {\r\n            if(err)\r\n                setErr(err);\r\n            else\r\n                setErr('Error desconocido, comuniquese con soporte!');\r\n        })\r\n    };\r\n\r\n    const onChange = e => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value})\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(userService.getToken()) {\r\n            history.push(LOGIN_REDIRECT);\r\n        }\r\n    }, [history]);\r\n\r\n    return (\r\n        <>\r\n            <Container component=\"main\" maxWidth=\"sm\">\r\n                <CssBaseline />\r\n                <Paper className=\"form-login-content\">\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Iniciar sesión\r\n                    </Typography>\r\n                    <Avatar src=\"/img/payicon.png\" sizes=\"100\"/>\r\n                    <form onSubmit={ e => onSubmit(e)} className=\"form-login\">\r\n\r\n                        {/*Username*/}\r\n                        <TextField variant=\"outlined\" margin=\"normal\"\r\n                                   value={data.username}\r\n                                   onChange={e => onChange(e)}\r\n                                   required fullWidth type=\"text\" label=\"Nombre de usuario\"\r\n                                   id=\"username\"\r\n                                   name=\"username\"\r\n                                   autoComplete=\"username\"\r\n                                   autoFocus/>\r\n\r\n                        {/*Password*/}\r\n                        <TextField variant=\"outlined\" margin=\"normal\"\r\n                                   value={data.password}\r\n                                   onChange={e => onChange(e)}\r\n                                   required fullWidth label=\"Contraseña\"\r\n                                   name=\"password\" type=\"password\"\r\n                                   id=\"password\"\r\n                                   autoComplete=\"current-password\"/>\r\n\r\n                        {/*Submit form*/}\r\n                        <Alert message={err} show={err!==null}/>\r\n                        { login.loader && <LinearProgress color=\"secondary\" />}\r\n                        <Button\r\n                            disabled={login.loader}\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\">\r\n                            Iniciar\r\n                        </Button>\r\n                    </form>\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUser(user){\r\n        dispatch(addUser(user));\r\n    }\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Button, Container, Paper} from \"@material-ui/core\";\r\nimport {LOGIN_REDIRECT} from \"../../config/urls\";\r\nimport {WifiOff, Refresh} from '@material-ui/icons';\r\nconst NotConnected = () => {\r\n\r\n    return (\r\n        <Container maxWidth='sm' component={Paper} className='paper-content form-login-content'>\r\n            <div className={'forbidden-content '}>\r\n                <h3>No se ha podido comunicar con el servidor</h3>\r\n                <WifiOff className={'forbidden-icon'} />\r\n                <p>Revisa tu conexión a internet, puede que el cable o el adaptador de WiFi este desconectado.</p>\r\n                <div>\r\n                    <Button color={'primary'}\r\n                            startIcon={<Refresh />}\r\n                            variant={'contained'}\r\n                            onClick={() => window.location.href = LOGIN_REDIRECT}>Reintentar</Button>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default withRouter(NotConnected);\r\n","import React, {useState} from 'react';\r\nimport {\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n    MenuItem,\r\n    InputAdornment,\r\n    IconButton,\r\n    Input,\r\n    FormControl, LinearProgress, Button, FormControlLabel, Checkbox, FormHelperText\r\n} from \"@material-ui/core\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Alert from \"../../_partials/Alert\";\r\nimport useHttp from \"../../../utils/useHttp\";\r\nimport {toast} from \"react-toastify\";\r\nimport useGet from \"../../../utils/useGet\";\r\nimport WithLoader from \"../../_partials/hoc/WithLoader\";\r\nimport {EMPLOY_LIST} from \"../../../config/urls\";\r\n\r\n\r\nconst FrmEmploy = ({method, url, initialData, initialRoutes, history}) => {\r\n\r\n    const [data, setData] = useState(initialData);\r\n    const [values, setValues] = useState({\r\n        showPassword: false,\r\n        err: null,\r\n        checked: {},\r\n    });\r\n    const [routes, setRoutes] = useState(initialRoutes);\r\n\r\n    const zones = useGet('/route');\r\n    const http = useHttp(method);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setValues({\r\n            ...values,\r\n            err: null\r\n        });\r\n\r\n        http.request(url, data).then(res => {\r\n            if(res.ok && method==='post') {\r\n                toast.success('Empleado Guardado con éxito');\r\n                setValues({\r\n                    ...values, checked: {}\r\n                });\r\n                history.push(EMPLOY_LIST);\r\n            }\r\n\r\n            if(res.ok && method==='put') {\r\n                toast.success(res.message);\r\n            }\r\n        }).catch(err =>{\r\n            setValues({\r\n                ...values,\r\n                err: err\r\n            })\r\n        })\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value});\r\n    };\r\n\r\n    const onChecked = name => event => {\r\n        setValues({...values,\r\n            checked: {...values.checked, [name]: event.target.checked }});\r\n\r\n        const options = routes;\r\n        if (event.target.checked) {\r\n            options.push(+event.target.value)\r\n        } else {\r\n           let index = options.indexOf(+event.target.value)\r\n           options.splice(index, 1)\r\n        }\r\n        setRoutes(options);\r\n        setData({...data, zones: routes});\r\n    };\r\n\r\n    const isChecked = name => {\r\n        if(routes.indexOf(name)>=0)\r\n            return true;\r\n\r\n        if (values.checked === undefined)\r\n            return false;\r\n\r\n        const chk = (values.checked[name]);\r\n\r\n        if(chk === undefined)\r\n            return false;\r\n\r\n        return chk;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n            <Grid container spacing={3}>\r\n                <div className={'grid-title'}>\r\n                    <p>Datos Básicos</p>\r\n                </div>\r\n                {/*Nombre*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='text' label='Nombre'\r\n                               name='name'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.name.toUpperCase()}\r\n                               required fullWidth autoFocus/>\r\n                </Grid>\r\n                {/*Apellido*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='text' label='Apellido'\r\n                               name='surname'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.surname.toUpperCase()}\r\n                               required fullWidth />\r\n                </Grid>\r\n                {/*Dirección*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='address' label='Dirección'\r\n                               name='address'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.address}\r\n                               required fullWidth />\r\n                </Grid>\r\n                {/*Teléfono*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='phone' label='Teléfono/Celular'\r\n                               name='phones'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.phones}\r\n                               fullWidth />\r\n                </Grid>\r\n\r\n                {/*=================== DATOS DE SUELDO =====================*/}\r\n                <div className={'grid-title'}>\r\n                    <p>Datos de sueldo</p>\r\n                </div>\r\n                {/*Sueldo Base*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='number' label='Sueldo Base'\r\n                               name='sueldo'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.sueldo}\r\n                               required\r\n                               fullWidth />\r\n                </Grid>\r\n                {/*Periodo de pago*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <InputLabel  id=\"pago_sueldo\">Periodo de Pago</InputLabel>\r\n                    <Select\r\n                        labelId=\"pago_sueldo\"\r\n                        name={'pago_sueldo'}\r\n                        value={data.pago_sueldo}\r\n                        onChange={e => onChange(e)} fullWidth >\r\n                        <MenuItem value={'SEMANAL'}>SEMANAL</MenuItem>\r\n                    </Select>\r\n                </Grid>\r\n\r\n                {/*=================== CREDENCIALES =====================*/}\r\n                <div className={'grid-title'}>\r\n                    <p>Credenciales</p>\r\n                </div>\r\n                {/*Username*/}\r\n                <Grid item xs={12} md={4}>\r\n                    <TextField onChange={e => onChange(e)}\r\n                               value = {data.username}\r\n                               required fullWidth type=\"text\" label=\"Nombre de usuario\"\r\n                               id=\"username\"\r\n                               name=\"username\"\r\n                               autoComplete=\"username\"/>\r\n                </Grid>\r\n\r\n                {/*Password*/}\r\n                <Grid item xs={12} md={4}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                        <Input\r\n                            id=\"standard-adornment-password\"\r\n                            type={values.showPassword ? 'text' : 'password'}\r\n                            value={data.password !== null ? data.password : ''}\r\n                            name={'password'}\r\n                            onChange={e => onChange(e)}\r\n                            fullWidth\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        onClick={handleClickShowPassword}>\r\n                                        {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                </Grid>\r\n\r\n\r\n                {/*ADMINISTRADOR*/}\r\n                <Grid item xs={12} md={4}>\r\n                    <FormControl component=\"fieldset\">\r\n\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox checked={data.advance} spacing={0}\r\n                                      onChange={e => setData({\r\n                                          ...data,\r\n                                          admin: !data.admin,\r\n                                      })}\r\n                                      value=\"Admin\" />\r\n                        }\r\n                        title={'Titulo'}\r\n                        label=\"Administrador\"\r\n                    />\r\n                        <FormHelperText style={{marginTop: 0}}>El administrador tiene todos los permisos</FormHelperText>\r\n                    </FormControl>\r\n\r\n                </Grid>\r\n\r\n                {/*=================== ZONAS =====================*/}\r\n                <div className={'grid-title'}>\r\n                    <p>Asignación de zonas</p>\r\n                </div>\r\n                <Grid item xs={12}>\r\n                    <WithLoader loader={zones.loader} text={'Cargando Zonas'}>\r\n                            {zones.data.map(z =>\r\n                                <FormControlLabel key={z.id}\r\n                                    control={\r\n                                        <Checkbox name={'routes[]'} checked={isChecked(z.id)} onChange={onChecked(z.id)}  value={z.id} />\r\n                                    }\r\n                                    label={z.name}\r\n                                />\r\n                            )}\r\n                    </WithLoader>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} className='center'>\r\n                    <Alert show={values.err!==null} message={values.err} />\r\n                    { http.loader && <LinearProgress color=\"secondary\" />}\r\n                    <br/>\r\n                    <Button type='submit' color='primary'\r\n                            disabled={http.loader}\r\n                            variant='contained'>\r\n                        { method === 'post' ? 'Guardar' : 'Actualizar' }\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nFrmEmploy.defaultProps = {\r\n    method: 'post',\r\n    url: '/employ',\r\n    redirect: '/employ',\r\n    initialData: {\r\n        name: '', surname: '', address: '', phones: '', sueldo: '',\r\n        pago_sueldo: '', username: '', admin: false, password: '', zones: []\r\n    },\r\n    initialRoutes: []\r\n};\r\n\r\nexport default withRouter(FrmEmploy);\r\n","import React from 'react';\r\nimport {Container, Divider, Icon, Paper} from \"@material-ui/core\";\r\nimport FrmEmploy from \"./_form/FrmEmploy\";\r\nimport Master from \"../Master\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\n\r\nconst EditEmploy = ({match}) => {\r\n    const id = match.params.id;\r\n\r\n    const employ = useGet(`/employ/${id}`);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Master>\r\n                <WithLoader loader={employ.loader} text={'Cargando datos del empleado...'}>\r\n                    <Container maxWidth='md' component={Paper} className='paper-content'>\r\n                        <div className='paper-header'>\r\n                            <h4> <Icon>person_edit</Icon> Editar Empleado</h4>\r\n                            <Divider />\r\n                        </div>\r\n                        {\r\n                            employ.data.name !== undefined &&\r\n                                <FrmEmploy method={'put'} url={`/employ/${id}`}\r\n                                           initialData={employ.data}\r\n                                           initialRoutes={employ.data.zones}/>\r\n                        }\r\n                    </Container>\r\n                </WithLoader>\r\n            </Master>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditEmploy;\r\n","import React from 'react';\r\nimport FrmEmploy from \"./_form/FrmEmploy\";\r\nimport {Container, Divider, Icon, Paper} from \"@material-ui/core\";\r\nimport Master from \"../Master\";\r\n\r\nconst RegisterEmploy = () => {\r\n    return (\r\n        <>\r\n            <Master>\r\n                <Container maxWidth='md' component={Paper} className='paper-content'>\r\n                    <div className='paper-header'>\r\n                        <h4> <Icon>person_add</Icon> Agregar Empleado</h4>\r\n                        <Divider />\r\n                    </div>\r\n                    <FrmEmploy method={'post'} />\r\n                </Container>\r\n            </Master>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RegisterEmploy;\r\n","import React from 'react';\r\nimport {Container, Icon, Paper, Button} from \"@material-ui/core\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport {ArrowBack} from '@material-ui/icons';\r\n\r\nconst Forbidden = ({history}) => {\r\n\r\n    return (\r\n        <Container maxWidth='sm' component={Paper} className='paper-content'>\r\n            <div className={'forbidden-content'}>\r\n                <h3>Acceso Denegado</h3>\r\n                <Icon className={'forbidden-icon'}>security</Icon>\r\n                <p>No tienes permisos para ver este contenido, si crees que es un error, contacta con el administrador.</p>\r\n                <div>\r\n                    <Button color={'primary'}\r\n                            startIcon={<ArrowBack />}\r\n                            variant={'contained'}\r\n                            onClick={() => history.goBack(-1)}>Go Back</Button>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default withRouter(Forbidden);\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport userService from '../../../config/user.service';\r\nimport Forbidden from \"../../errors/Forbidden\";\r\n\r\nconst WithAdminContent = ({user, children}) => {\r\n\r\n    return (<>\r\n        {((user.admin || user.root) &&\r\n            userService.getToken()) ?\r\n            children: <Forbidden/>}\r\n    </>)\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(WithAdminContent);\r\n","import React from 'react';\r\nimport Master from \"../Master\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport {Link} from \"react-router-dom\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport {EMPLOY_EDIT, PAYROLL_ADD_USER, toName} from \"../../config/urls\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {Icon, IconButton, Chip} from \"@material-ui/core\";\r\nimport {ArrowUpward, ArrowDownward} from '@material-ui/icons'\r\nimport {tableOptions} from \"../../config/config\";\r\nimport useHttp from \"../../utils/useHttp\";\r\nimport {toast} from \"react-toastify\";\r\nimport WithAdminContent from \"../_partials/hoc/WithAdminContent\";\r\n\r\nconst ListEmploy = () => {\r\n\r\n    const employs = useGet('/employ');\r\n    const status = useHttp('put');\r\n    const remove = useHttp('delete');\r\n\r\n    const columns = [\r\n        {name: \"id\", label: 'ID', options: {display: 'false', filter: false}},\r\n        {\r\n            name: 'name', label: 'NOMBRE',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return value.toUpperCase();}}\r\n        },\r\n        {\r\n            name: 'surname', label: 'APELLIDO',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return value.toUpperCase();}}\r\n        },\r\n        {\r\n            name: 'username', label: 'USUARIO', options: {filter: false}\r\n        },\r\n        {\r\n            name: 'phones', label: 'TELÉFONO', options: {filter: false}\r\n        },\r\n        {\r\n            name: 'sueldo', label: 'SUELDO', options: {filter: false}\r\n        },\r\n        {\r\n            name: 'status', label: 'ESTADO', options: {\r\n                filter: true,\r\n                customFilterListOptions: { render: v => `Estado: ${v}` },\r\n\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            { value === 1 &&\r\n                                <>\r\n                                    <Chip\r\n                                        label={\"Activo\"}\r\n                                        className={'bg-green'}/>\r\n                                    <IconButton size={\"small\"}\r\n                                                onClick={() => changeStatus(tableMeta.rowData[0], updateValue)}\r\n                                                aria-label=\"Dar de baja\">\r\n                                        <ArrowDownward/>\r\n                                    </IconButton>\r\n                                </>\r\n                            }\r\n                            { value === 0 &&\r\n                                <>\r\n                                    <Chip\r\n                                        label=\"Inactivo\"\r\n                                        className={'bg-red'}/>\r\n                                    <IconButton size={\"small\"}\r\n                                                onClick={() => changeStatus(tableMeta.rowData[0], updateValue)}\r\n                                                aria-label=\"Dar de alta\">\r\n                                        <ArrowUpward/>\r\n                                    </IconButton>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        },\r\n        {\r\n            label: 'OPCIONES', name: 'id',\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            <IconButton component={Link}\r\n                                        to={toName(EMPLOY_EDIT, {id: value})}\r\n                                        size={\"small\"}\r\n                                        aria-label=\"Editar\">\r\n                                <Icon>edit</Icon>\r\n                            </IconButton>\r\n                            <IconButton onClick={() => deleteEmploy(value, updateValue)}\r\n                                        size={\"small\"}\r\n                                        aria-label=\"delete\">\r\n                                <Icon>delete</Icon>\r\n                            </IconButton>\r\n                            <IconButton component={Link}\r\n                                        to={toName(PAYROLL_ADD_USER, {id: value})}\r\n                                        size={\"small\"}\r\n                                        aria-label=\"Pagar\">\r\n                                <Icon>payment</Icon>\r\n                            </IconButton>\r\n                        </div>\r\n                    );\r\n                },\r\n            }\r\n        }\r\n    ];\r\n\r\n    const changeStatus = (employId, updateValue) => {\r\n\r\n        status.request(`/employ/cancel/${employId}`).then(res => {\r\n            if(res.ok) {\r\n                let index = employs.data.findIndex(d => d.id === employId);\r\n\r\n                const status = employs.data[index].status;\r\n                if (status === 1)\r\n                   employs.data[index].status = 0;\r\n                else\r\n                   employs.data[index].status = 1;\r\n\r\n                updateValue(employs.data[index].status);\r\n\r\n                toast.success(res.message);\r\n            }\r\n        }).catch(err => {\r\n            toast.error(err);\r\n        });\r\n    };\r\n\r\n    const deleteEmploy = (employId) => {\r\n        if(!window.confirm('¿Esta seguro que desea eliminar este empleado?')) return;\r\n\r\n        remove.request(`/employ/${employId}`).then(res => {\r\n            if(res.ok){\r\n                let index = employs.data.findIndex(d => d.id === employId);\r\n                employs.data.splice(index, 1);\r\n\r\n                toast.success(res.message);\r\n                const data = employs.data;\r\n                employs.setData();\r\n                employs.setData(data);\r\n\r\n            }\r\n        }).catch(err => toast.error(err));\r\n    };\r\n\r\n    return (\r\n        <Master>\r\n            <WithLoader loader={employs.loader}>\r\n                <WithAdminContent>\r\n                    <MUIDataTable\r\n                        title={\"EMPLEADOS\"}\r\n                        data={employs.data}\r\n                        columns={columns}\r\n                        options={tableOptions}\r\n                    />\r\n                </WithAdminContent>\r\n            </WithLoader>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default ListEmploy;\r\n","import React from 'react';\r\nimport {Container, Divider, Grid, Icon, Paper, TextField} from \"@material-ui/core\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport Master from \"../Master\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport Alert from \"../_partials/Alert\";\r\nimport {asset} from './../../config/config'\r\nconst ShowExpense = ({match}) => {\r\n    const id = match.params.id;\r\n    const expense = useGet(`/expense/${id}`);\r\n    return (\r\n        <Master>\r\n            <WithLoader loader={expense.loader}>\r\n                <Container maxWidth='sm' component={Paper} className='paper-content'>\r\n                    <div className='paper-header'>\r\n                        <h4> <Icon>local_atm</Icon> Ver Gasto</h4>\r\n                        <Divider />\r\n                    </div>\r\n                    <Grid container spacing={3}>\r\n                        {/*MONTO*/}\r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField type='text' label='Monto $'\r\n                                       readOnly\r\n                                       value={expense.data.monto}\r\n                                       fullWidth/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField type='text' label='Categoría'\r\n                                       readOnly\r\n                                       value={expense.data.category}\r\n                                       fullWidth/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField type='date' label='Fecha'\r\n                                       readOnly\r\n                                       value={expense.data.date}\r\n                                       fullWidth/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField type='text' label='Empleado'\r\n                                       readOnly\r\n                                       value={expense.data.name ? expense.data.name.toUpperCase() :  ''}\r\n                                       fullWidth/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField\r\n                                label=\"Detalle | Observación\"\r\n                                multiline\r\n                                rows=\"3\"\r\n                                fullWidth\r\n                                value={expense.data.description === null ? 'Ninguna' : expense.data.description }\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={12}>\r\n                            {\r\n                                expense.data.image &&\r\n                                <div style={{padding: 10}}>\r\n                                    <img src={asset(expense.data.image)} alt=\"Preview\" width=\"100%\"/>\r\n                                </div>\r\n                            }\r\n                             <Alert message={'No tiene comprobante'} type={'warn'} show={!expense.data.image} />\r\n\r\n                        </Grid>\r\n\r\n\r\n                    </Grid>\r\n                </Container>\r\n            </WithLoader>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default ShowExpense;\r\n","import React, {useState} from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {Grid, TextField, Button, Icon, LinearProgress} from \"@material-ui/core\";\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport {toast} from \"react-toastify\";\r\nimport {Autocomplete} from '@material-ui/lab'\r\nimport {categories} from \"../../../config/config\";\r\nimport moment from \"moment\";\r\nimport Alert from \"../../_partials/Alert\";\r\nimport useHttp from \"../../../utils/useHttp\";\r\nimport {EXPENSE_LIST} from \"../../../config/urls\";\r\nimport useGet from \"../../../utils/useGet\";\r\nimport WithAdmin from \"../../_partials/hoc/WithAdmin\";\r\nconst FrmExpense = ({history}) => {\r\n\r\n    const [data, setData] = useState({\r\n        monto: '',\r\n        category: '',\r\n        description: '',\r\n        image: null,\r\n        date: null,\r\n        selectedDate: null,\r\n        showImage: null,\r\n        employ_id: null\r\n    });\r\n    const [err, setErr] = useState(null);\r\n    const http = useHttp('post', true);\r\n    const employs = useGet('/employ');\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('monto', data.monto);\r\n        formData.append('category', data.category);\r\n        formData.append('description', data.description);\r\n        if (data.image)\r\n            formData.append('image',data.image);\r\n        if (data.date)\r\n            formData.append('date', data.date);\r\n        if (data.employ_id)\r\n            formData.append('employ_id', data.employ_id);\r\n\r\n        setErr(null);\r\n        http.request(`/expense`, formData).then(res => {\r\n            if(res.ok) {\r\n                toast.success('Gasto procesado con éxito');\r\n                history.push(EXPENSE_LIST);\r\n            }\r\n\r\n        }).catch(err =>{\r\n            setErr(err);\r\n        })\r\n    };\r\n\r\n    const onChange = (e) => {\r\n\r\n       const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value});\r\n    };\r\n\r\n    const onChangeDate = date => {\r\n        setData({\r\n            ...data,\r\n            selectedDate: date,\r\n            date: moment(date).format('YYYY-MM-DD')\r\n        });\r\n    };\r\n\r\n    const onChangeFile = e => {\r\n        if(e.target.files.length > 0) {\r\n            setData({\r\n                ...data,\r\n                image: e.target.files[0],\r\n                showImage: URL.createObjectURL(e.target.files[0])\r\n            });\r\n        }\r\n    };\r\n\r\n    const onChangeCategory = (option, value) => {\r\n        if (value === null) {\r\n            setData({\r\n                ...data, category: null\r\n            });\r\n            return;\r\n        }\r\n        setData({\r\n            ...data, category: value\r\n        });\r\n    };\r\n\r\n    const onChangeEmploy = (option, value) => {\r\n        if (value!==null){\r\n            setData({\r\n                ...data,\r\n                employ_id: value.id,\r\n            });\r\n        }\r\n        else {\r\n            setData({...data, employ_id: null})\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n            <Grid container spacing={3}>\r\n                {/*MONTO*/}\r\n                <Grid item xs={12} sm={12}>\r\n                    <TextField type='text' label='Monto $'\r\n                               name='monto'\r\n                               placeholder={'$0.00'}\r\n                               onChange={e => onChange(e)}\r\n                               value={data.monto}\r\n                               required fullWidth autoFocus/>\r\n                </Grid>\r\n                {/*CATEGORÍA*/}\r\n                <Grid item xs={12} sm={12}>\r\n                    <Autocomplete\r\n                        id=\"category\"\r\n                        name={'categories'}\r\n                        freeSolo\r\n                        value={data.category === null ? '' : data.category.toUpperCase()}\r\n                        options={categories}\r\n                        onChange={(o,v) => onChangeCategory(o, v)}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Categoría\"\r\n                                        onChange={e => onChange(e)}\r\n                                       name={'category'} fullWidth required />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                {/*Date*/}\r\n                <Grid item xs={12} sm={12}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"DD/MM/YYYY\"\r\n                        fullWidth\r\n                        autoOk={true}\r\n                        id=\"date\"\r\n                        label=\"Fecha del gasto\"\r\n                        value={data.selectedDate}\r\n                        onChange={(date) => onChangeDate(date)}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'Cambiar Fecha',\r\n                        }}\r\n                    />\r\n                </Grid>\r\n\r\n                {/*Empleado*/}\r\n                <WithAdmin>\r\n                    <Grid item xs={12}>\r\n                        <Autocomplete\r\n                            id=\"employ_id\"\r\n                            options={employs.data}\r\n                            onChange={(option, value) => onChangeEmploy(option, value)}\r\n                            getOptionLabel={option => (option.name+' '+option.surname).toUpperCase() }\r\n                            renderInput={params => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label=\"Empleado\" variant=\"standard\" fullWidth />\r\n                            )}\r\n                        />\r\n                    </Grid>\r\n                </WithAdmin>\r\n\r\n                {/*Descripción*/}\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        id=\"description\"\r\n                        label=\"Detalle | Observación\"\r\n                        multiline\r\n                        rows=\"3\"\r\n                        fullWidth\r\n                        name='description'\r\n                        onChange={e => onChange(e)}\r\n                        value={data.description}\r\n                    />\r\n                </Grid>\r\n\r\n                {/*Comprobante*/}\r\n                <Grid item xs={12} sm={12} style={{justifyContent: 'center', display: 'flex', flexDirection: 'column'}}>\r\n                    {\r\n                        data.showImage &&\r\n                        <>\r\n                            <div style={{padding: 10}}>\r\n                                <img src={data.showImage} alt=\"Preview\" width=\"100%\"/>\r\n                            </div>\r\n                            <Button variant={'outlined'}\r\n                                    onClick={() => setData({...data, showImage: null, image: null})}\r\n                                    color={'secondary'}>Quitar Comprobante</Button>\r\n                        </>\r\n                    }\r\n\r\n                    {!data.showImage &&\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        component=\"label\"\r\n                        color={'primary'}>\r\n                        <Icon>photo</Icon>&nbsp;\r\n                        Agregar Comprobante\r\n                        <input\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            style={{ display: \"none\" }}\r\n                            onChange={(e) => onChangeFile(e)}\r\n                        />\r\n                    </Button> }\r\n                </Grid>\r\n                {/*Submit form*/}\r\n                <Grid item xs={12} className='center'>\r\n                    <Alert show={err!==null} message={err} />\r\n                    { http.loader && <LinearProgress color=\"secondary\" />}\r\n                    <br/>\r\n                    <Button type='submit' color='primary'\r\n                            disabled={http.loader}\r\n                            variant='contained'>\r\n                        Guardar Gasto\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default withRouter(FrmExpense);\r\n","import React from 'react';\r\nimport {Container, Divider, Icon, Paper} from \"@material-ui/core\";\r\nimport Master from \"../Master\";\r\nimport FrmExpense from \"./_form/FrmExpense\";\r\n\r\nconst RegisterExpense = () => {\r\n    return (\r\n        <Master>\r\n            <Container maxWidth='sm' component={Paper} className='paper-content'>\r\n                <div className='paper-header'>\r\n                    <h4> <Icon>local_atm</Icon> Registrar Gasto</h4>\r\n                    <Divider />\r\n                </div>\r\n                <FrmExpense />\r\n            </Container>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default RegisterExpense;\r\n","import React, {Component} from 'react';\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete/Autocomplete\";\r\nimport {CircularProgress, TextField} from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SelectEmploy extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            employs: [],\r\n            loader: false,\r\n            open: false,\r\n            value: ''\r\n        }\r\n    }\r\n\r\n    getEmploys() {\r\n        this.setState({...this.state, open: true, loader: true});\r\n        if (this.state.employs.length <= 0) {\r\n            Axios.get('/employ').then(res => {\r\n                if (res.ok) {\r\n                    this.setState({...this.state, employs: res.data})\r\n                }\r\n            }).finally(() => this.setState({loader: false}));\r\n        } else {\r\n            this.setState({loader: false});\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({...this.state, value:''});\r\n    }\r\n\r\n    selected(o, v) {\r\n        if(v) {\r\n            this.setState({...this.state, value: v});\r\n        } else {\r\n            this.setState({...this.state, value: ''});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Autocomplete\r\n                    id=\"employ_id\"\r\n                    open={this.state.open}\r\n                    onOpen={() => this.getEmploys()}\r\n                    onClose={() => this.setState({...this.state, open: false})}\r\n                    options={this.state.employs}\r\n                    loading={this.state.loader}\r\n                    onChange={(option, value) => this.props.onChange(value)}\r\n                    loadingText={'Cargando empleados'}\r\n                    inputValue={this.state.value}\r\n                    onInputChange={(v,r) => this.selected(v, r)}\r\n                    getOptionLabel={option => option ? ( option.name+' '+option.surname).toUpperCase() : this.state.value }\r\n\r\n                    renderInput={params => (\r\n                        <TextField\r\n                            {...params}\r\n                            required\r\n                            label=\"Empleado\" variant=\"standard\" fullWidth\r\n                            InputProps={{\r\n                                ...params.InputProps,\r\n                                endAdornment: (\r\n                                    <React.Fragment>\r\n                                        {this.state.loader ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                        {params.InputProps.endAdornment}\r\n                                    </React.Fragment>\r\n                                ),\r\n                            }}/>\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSelectEmploy.propTypes = {\r\n    onChange: PropTypes.func\r\n};\r\n\r\nSelectEmploy.defaultProps = {\r\n};\r\n\r\nexport default SelectEmploy;","import React, {useRef, useState} from 'react';\r\nimport {Container, Paper, Grid, Button, Icon, IconButton} from \"@material-ui/core\";\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport PropTypes from 'prop-types';\r\nimport SelectEmploy from \"../../employ/_partials/SelectEmploy\";\r\nconst ExpenseFilter = ({onFilter, filters, onClearFilters}) => {\r\n\r\n    const [data, setData] = useState(filters);\r\n    const selectERef = useRef();\r\n\r\n    const onChangeDate = (name, date) => {\r\n        setData({\r\n            ...data,\r\n            [name]: date,\r\n        });\r\n    };\r\n\r\n    const onChangeEmploy = (employ) => {\r\n        if (employ) {\r\n            setData({...data, employ_id: employ.id });\r\n        } else {\r\n            setData({...data, employ_id: null });\r\n        }\r\n    };\r\n\r\n    const filterSend = () => {\r\n      onFilter({\r\n          dateFrom: data.dateFrom, dateTo: data.dateTo, employ_id:  data.employ_id });\r\n    };\r\n\r\n    const clearFilters = () => {\r\n        setData({...data, dateFrom: null, dateTo: null, employ_id: null});\r\n        onClearFilters();\r\n        selectERef.current.reset();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container component={Paper} elevation={0} style={{marginBottom: '1rem'}}>\r\n                <Grid container spacing={3} alignItems={'center'} >\r\n                    <Grid item xs={12} sm={6} md={3}>\r\n                        <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"DD/MM/YYYY\"\r\n                        fullWidth\r\n                        autoOk={true}\r\n                        id=\"date\"\r\n                        label=\"Fecha Inicial\"\r\n                        value={data.dateFrom}\r\n                        onChange={(date) => onChangeDate('dateFrom',date)}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'Ingresar fecha inicial',\r\n                        }}\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"DD/MM/YYYY\"\r\n                            fullWidth\r\n                            autoOk={true}\r\n                            id=\"date_end\"\r\n                            label=\"Fecha Final\"\r\n                            value={data.dateTo}\r\n                            onChange={(date) => onChangeDate('dateTo', date)}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'Ingresar fecha final',\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={3} >\r\n                        <SelectEmploy ref={selectERef}\r\n                            onChange={(e) => onChangeEmploy(e)} />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={12} md={3} className={'d-flex'}>\r\n                        <Button variant={'text'} color={'primary'} fullWidth onClick={() => filterSend()}>\r\n                            <Icon>filter_list</Icon> &nbsp; Filtrar\r\n                        </Button>\r\n                        <IconButton onClick={() => clearFilters()}>\r\n                            <Icon>clear_two_tone</Icon>\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nExpenseFilter.defaultProps = {\r\n    onFilter: null,\r\n    filters: {\r\n        dateFrom: moment().clone().weekday(0),\r\n        dateTo: moment().clone().weekday(5),\r\n        employ_id: null,\r\n    }\r\n};\r\n\r\nExpenseFilter.propTypes = {\r\n    onFilter: PropTypes.func\r\n};\r\n\r\nexport default ExpenseFilter;\r\n","import React from 'react';\r\nimport useGet from \"../../../utils/useGet\";\r\nimport {Grid, Icon} from '@material-ui/core';\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport {money} from \"../../../config/config\";\r\nconst BoxInfo = ({info, text, icon, color}) => {\r\n    return (\r\n        <div className={`box-info  ${(color) ? color.toLowerCase() : ''}`}>\r\n            {!icon ? <Icon>today</Icon> : <Icon>{icon}</Icon>}\r\n\r\n            <h3>{info}</h3>\r\n            <p>{text}</p>\r\n        </div>);\r\n};\r\n\r\nconst ExpenseInfo = () => {\r\n    const info = useGet('/expense/info');\r\n    return (\r\n        <div style={{marginBottom: '1.5rem', padding: '0 10px'}}>\r\n            <Grid container spacing={3}>\r\n\r\n                {\r\n                    info.loader &&\r\n                    <>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Skeleton variant=\"rect\" height={79} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Skeleton variant=\"rect\" height={79}/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Skeleton variant=\"rect\" height={79}/>\r\n                        </Grid>\r\n                    </>\r\n                }\r\n                {\r\n                    !info.loader && info.data &&\r\n                    <>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <BoxInfo text={'GASTOS HOY'}\r\n                                     info={money(info.data.today)} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} >\r\n                            <BoxInfo text={'GASTOS ESTA SEMANA'}\r\n                                     color={'cyan'}\r\n                                     info={money(info.data.week)} icon={'attach_money'} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} >\r\n                            <BoxInfo text={'GASTOS ESTE MES'}\r\n                                     color={'purple'}\r\n                                     info={money(info.data.month)} icon={'event'}/>\r\n                        </Grid>\r\n                    </>\r\n                }\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseInfo;\r\n","import React, {useEffect, useState} from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {Chip, Icon, IconButton, Tooltip, Button} from \"@material-ui/core\";\r\nimport {Add} from \"@material-ui/icons\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {toast} from \"react-toastify\";\r\nimport {EXPENSE_ADD, EXPENSE_SHOW, toName} from \"../../config/urls\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport Master from \"../Master\";\r\nimport {money, tableOptions} from \"../../config/config\";\r\nimport useHttp from \"../../utils/useHttp\";\r\nimport Axios from \"axios\";\r\nimport {processErrors, toDate} from \"../../utils/utils\";\r\nimport ExpenseFilter from \"./_partials/ExpenseFilter\";\r\nimport ExpenseInfo from \"./_partials/ExpenseInfo\";\r\nimport WithAdmin from \"../_partials/hoc/WithAdmin\";\r\n\r\nconst ListExpenses = () => {\r\n\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n    const [loader, setLoader] = useState(false);\r\n    const cancel = useHttp('delete');\r\n    const columns = [\r\n        {name: \"id\", label: 'ID', options: {display: 'false', filter: false}},\r\n        {\r\n            name: 'name', label: 'EMPLEADO',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value, tableMeta) => {\r\n                    return value.toUpperCase();}\r\n            }\r\n        },\r\n        {name: \"monto\", label: 'MONTO', options: {\r\n            filter: false,\r\n            align: 'right',\r\n                setCellHeaderProps: () => ({ align: 'right' }),\r\n                setCellProps: () => ({ align: 'right' }),\r\n                customBodyRender: (value, tableMeta) => {\r\n                    return <b>{money(value)}</b>}}},\r\n        {name: \"date\", label: 'FECHA', options: { filter: false, customBodyRender: (value) => {return toDate(value);}}},\r\n        {name: 'category', label: 'CATEGORÍA', options: {filter: true}},\r\n        {name: 'description', label: 'DETALLE', options: {filter: false, customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (<small>{value ? value: 'Ninguna'}</small>)\r\n                }}},\r\n        {\r\n            name: 'status', label: 'ESTADO', options: {\r\n                filter: true,\r\n                customFilterListOptions: { render: v => `Estado: ${v}` },\r\n\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            { value === 1 &&\r\n                            <>\r\n                                <Chip\r\n                                    label={\"Activo\"}\r\n                                    className={'bg-green'}/>\r\n                            </>\r\n                            }\r\n                            { value === 0 &&\r\n                            <>\r\n                                <Chip\r\n                                    label=\"Anulado\"\r\n                                    className={'bg-red'}/>\r\n                            </>\r\n                            }\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        },\r\n        {\r\n            label: 'OPCIONES', name: 'id',\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            <Tooltip title={'Ver detalles'}>\r\n                                <IconButton component={Link}\r\n                                            to={toName(EXPENSE_SHOW, {id: value})}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"Detalle\">\r\n                                    <Icon>chrome_reader_mode</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={'Anular Gasto'}>\r\n                                <IconButton\r\n                                    onClick={() => cancelExpense(value)}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"Anular\">\r\n                                    <Icon>block</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                    );\r\n                },\r\n            }\r\n        }\r\n    ];\r\n\r\n    const [filters, setFilters] = useState({\r\n        page: 0,\r\n        rowPerPage: 10,\r\n        dateFrom: null,\r\n        dateTo: null\r\n    });\r\n\r\n    const cancelExpense = (expenseId) => {\r\n        let description = window.prompt('¿Está seguro que desea anular este gasto?');\r\n        if (!description) return;\r\n\r\n        cancel.request(`/expense/${expenseId}`, {description: description})\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    toast.success(res.message);\r\n\r\n                    if (expenses){\r\n                        let index = expenses.findIndex(p => p.id === expenseId);\r\n                        expenses[index].status = 0;\r\n                        setExpenses([]);\r\n                        setExpenses(expenses);\r\n                    }\r\n                }\r\n            }).catch(err => {\r\n            toast.error(err);\r\n        });\r\n\r\n    };\r\n\r\n    const onFilter = (filterList) => {\r\n        setFilters({\r\n            ...filters,\r\n            dateFrom: filterList.dateFrom,\r\n            dateTo: filterList.dateTo,\r\n            employ_id: filterList.employ_id\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        const getExpenses =  () => {\r\n            let url = `/expense?page=${(filters.page+1)}&limit=${filters.rowPerPage}`;\r\n            if(filters.dateFrom && filters.dateTo)\r\n                url+= `&from=${filters.dateFrom.format('YYYY-MM-DD')}&to=${filters.dateTo.format('YYYY-MM-DD')}`;\r\n            if (filters.employ_id) {\r\n                url+= `&employ_id=${filters.employ_id}`;\r\n            }\r\n\r\n            setLoader(true);\r\n            Axios.get(url).then(res => {\r\n                if(res.ok) {\r\n                    setExpenses(res.data);\r\n                    setTotal(res.total);\r\n                }\r\n            })\r\n                .catch(err => toast.error(processErrors(err)))\r\n                .finally(() => setLoader(false))\r\n        };\r\n\r\n        getExpenses();\r\n    }, [filters]);\r\n\r\n    const options = {\r\n        ...tableOptions,\r\n        rowsPerPage: filters.rowPerPage,\r\n        page: filters.page,\r\n        count: total,\r\n        serverSide: true,\r\n        elevation: 0,\r\n        sort: false,\r\n        filter: false,\r\n        onTableChange: (action, tableState) => {\r\n            switch (action) {\r\n                case 'changeRowsPerPage':\r\n                    setFilters({...filters, rowPerPage: tableState.rowsPerPage});\r\n\r\n                    break;\r\n                case 'changePage':\r\n                    setFilters({...filters, page: tableState.page});\r\n                    break;\r\n                default:\r\n                    console.log(action);\r\n                    break;\r\n            }\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Master>\r\n            <WithAdmin>\r\n                <ExpenseInfo/>\r\n            </WithAdmin>\r\n            <ExpenseFilter\r\n                onClearFilters={() => setFilters({...filters, dateFrom: null, dateTo: null, employ_id: null})}\r\n                filters={filters}\r\n                onFilter={(v) => onFilter(v)}/>\r\n            <WithLoader loader={loader}>\r\n                <MUIDataTable\r\n                    title={<HeaderTitle/>}\r\n                    data={expenses}\r\n                    columns={columns} options={options} />\r\n            </WithLoader>\r\n        </Master>\r\n    );\r\n};\r\n\r\nconst HeaderTitle = () => {\r\n    return (\r\n        <div>\r\n            <Button component={Link} to={EXPENSE_ADD}>\r\n                <Add /> &nbsp;Agregar\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListExpenses;\r\n","import React, {useState} from 'react';\r\nimport {TextField, Grid, Button, LinearProgress} from \"@material-ui/core\";\r\nimport {toast} from \"react-toastify\";\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport useHttp from \"../../../utils/useHttp\";\r\nimport Alert from \"../../_partials/Alert\";\r\nimport {ZONE_LIST} from \"../../../config/urls\";\r\n\r\nconst FrmZone = ({method, url, history, redirect, initialZone}) => {\r\n\r\n    const [data, setData] = useState(initialZone);\r\n    const [err, setErr] = useState(null);\r\n    const http = useHttp(method);\r\n\r\n    const onChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value})\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n      e.preventDefault();\r\n      setErr(null);\r\n      http.request(url, data).then(res => {\r\n        if(res.ok) {\r\n            toast.success(`Zona ${ method === 'post' ? 'guardada' : 'actualizada' } con éxito`);\r\n            if(method ==='post'){\r\n                setData({ name: '', description: ''});\r\n                history.push(redirect);\r\n            }\r\n\r\n        }\r\n      }).catch(e => {\r\n          setErr(e);\r\n      });\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={e => onSubmit(e)}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField type='text' label='Nombre de ruta'\r\n                                       name='name'\r\n                                       onChange={e => onChange(e)}\r\n                                       value={data.name}\r\n                                       required fullWidth />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField type='text' label='Descripción'\r\n                                       name='description'\r\n                                       onChange={e => onChange(e)}\r\n                                       value={data.description === null ? '' : data.description}\r\n                                       fullWidth/>\r\n                        </Grid>\r\n                        <br/>\r\n                        <Grid item xs={12} className='center'>\r\n                            <Alert show={err!==null} message={err} />\r\n                            { http.loader && <LinearProgress color=\"secondary\" />}\r\n                            <br/>\r\n                            <Button type='submit' color='primary'\r\n                                    disabled={http.loader}\r\n                                    variant='contained'>\r\n                                { method === 'post' ? 'Guardar' : 'Actualizar' }\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n    </form>\r\n    );\r\n};\r\nFrmZone.defaultProps = {\r\n    method: 'post',\r\n    url: '/route',\r\n    redirect: ZONE_LIST,\r\n    initialZone: {\r\n        name: '',\r\n        description: ''\r\n    }\r\n};\r\n\r\nexport default withRouter(FrmZone);\r\n","import React from 'react';\r\nimport {Container, Divider, Icon, Paper} from \"@material-ui/core\";\r\nimport Master from \"../Master\";\r\nimport FrmZone from \"./_form/FrmZone\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport WithAdminContent from \"../_partials/hoc/WithAdminContent\";\r\n\r\nconst UpdateZone = ({match, history}) => {\r\n\r\n    const id = match.params.id;\r\n    const zone = useGet(`/route/${id}`);\r\n\r\n    return (\r\n        <Master>\r\n            <WithLoader loader={zone.loader} text={'Cargando zona...'}>\r\n                <WithAdminContent>\r\n                    <Container maxWidth='sm' component={Paper} className='paper-content'>\r\n                        <div className='paper-header'>\r\n                            <h4> <Icon>map</Icon> Actualizar Ruta/Zona</h4>\r\n                            <Divider />\r\n                        </div>\r\n                        <FrmZone method={'put'} url={`/route/${id}`} initialZone={zone.data} />\r\n                    </Container>\r\n                </WithAdminContent>\r\n            </WithLoader>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default UpdateZone;\r\n","import React from 'react';\r\nimport FrmZone from \"./_form/FrmZone\";\r\nimport Master from \"../Master\";\r\nimport {Container, Divider, Icon, Paper} from \"@material-ui/core\";\r\nimport WithAdminContent from \"../_partials/hoc/WithAdminContent\";\r\n\r\nconst RegisterZone = () => {\r\n    return (\r\n        <Master>\r\n            <WithAdminContent>\r\n                <Container maxWidth='sm' component={Paper} className='paper-content'>\r\n                    <div className='paper-header'>\r\n                        <h4> <Icon>map</Icon> Agregar Rutas/Zonas</h4>\r\n                        <Divider />\r\n                    </div>\r\n                    <FrmZone method={'post'} initialZone={{name: '', description: ''}} />\r\n                </Container>\r\n            </WithAdminContent>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default RegisterZone;\r\n","import React from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Axios from \"axios\";\r\nimport {toast} from \"react-toastify\";\r\nimport {Grid, Paper} from '@material-ui/core';\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport {tableMinOptions} from \"../../config/config\";\r\nimport {processErrors} from \"../../utils/utils\";\r\n\r\nclass DetailEmploy extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            loader: false,\r\n            data: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.employ !== prevProps.employ) {\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n\r\n    loadData () {\r\n        this.setLoader(true);\r\n        if(this.props.employ !== null) {\r\n            let url = `/employ/info/${this.props.employ}`;\r\n            if (this.props.now!==null) url = `/employ/info/${this.props.employ}?now=${this.props.now}`;\r\n\r\n            Axios.get(url).then(res => {\r\n                if(res.ok) {\r\n                    this.setState({\r\n                        data: res.data\r\n                    })\r\n                }\r\n            }).catch(err => {\r\n                const msg = processErrors(err);\r\n                toast.error(msg);\r\n            }).finally(() => this.setLoader(false));\r\n        } else {\r\n            this.setState({\r\n                data: null\r\n            })\r\n        }\r\n    }\r\n\r\n    setLoader (value) {\r\n        this.setState({\r\n            loader: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <WithLoader loader={this.state.loader} text={'Cargando datos de empleado...'}>\r\n                    {\r\n                        this.state.data !== null &&\r\n                        <Grid container spacing={2}>\r\n                            {this.state.data.pays.length > 0 && <Grid item xs={12} md={this.props.md}>\r\n                                <MUIDataTable\r\n                                    title={`Pagos de sueldo (${this.state.data.pays.length})`}\r\n                                    data={this.state.data.pays}\r\n                                    columns={[\r\n                                        {label: 'CONCEPTO', name: 'concept'},\r\n                                        {label: 'FECHA', name: 'date'},\r\n                                        {label: 'TOTAL', name: 'total'},\r\n                                    ]}\r\n                                    options={tableMinOptions}\r\n                                />\r\n                            </Grid>}\r\n                            {this.state.data.credits.length >0 && <Grid item xs={12} md={this.props.md}>\r\n                                <MUIDataTable\r\n                                    title={`Créditos (${this.state.data.credits.length})`}\r\n                                    data={this.state.data.credits}\r\n                                    columns={[\r\n                                        {label: 'PLAZO', name: 'plazo'},\r\n                                        {label: 'COBRO', name: 'cobro'},\r\n                                        {label: 'UTILIDAD', name: 'utilidad'},\r\n                                        {label: 'TOTAL', name: 'total'},\r\n                                    ]}\r\n                                    options={tableMinOptions} />\r\n\r\n                            </Grid>}\r\n                            {this.state.data.expenses.length>0 &&\r\n                            <Grid item xs={12} md={this.props.md}>\r\n                                <MUIDataTable\r\n                                    title={`Gatos (${this.state.data.expenses.length})`}\r\n                                    data={this.state.data.expenses}\r\n                                    columns={[\r\n                                        {label: 'CONCEPTO', name: 'category'},\r\n                                        {label: 'FECHA', name: 'date'},\r\n                                        {label: 'TOTAL', name: 'monto'},\r\n\r\n                                    ]}\r\n                                    options={tableMinOptions} />\r\n                            </Grid>\r\n                            }\r\n                            {\r\n                                this.state.data.cobros > 0 &&\r\n                                    <Grid item xs={12} md={this.props.md}>\r\n                                        <Paper style={{padding: 10}} elevation={3}>\r\n                                            <h3>COBRO TOTAL: </h3>\r\n                                            {this.state.data.cobros}\r\n                                        </Paper>\r\n                                    </Grid>\r\n                            }\r\n\r\n                        </Grid>\r\n                    }\r\n\r\n                </WithLoader>\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nDetailEmploy.defaultProps = {\r\n    md: 6,\r\n    now: null\r\n};\r\n\r\nexport default DetailEmploy;\r\n","import React, {useState} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    LinearProgress, MenuItem,\r\n    Select,\r\n    TextField, Divider\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport Alert from \"../../_partials/Alert\";\r\nimport useHttp from \"../../../utils/useHttp\";\r\nimport {toast} from \"react-toastify\";\r\nimport moment from \"moment\";\r\nimport DetailEmploy from \"../DetailEmploy\";\r\n\r\nconst FrmPayRoll = ({ employs, employ }) => {\r\n\r\n    const [data, setData] = useState({\r\n        employ_id:      (employ) ? employ.id : null,\r\n        amount:         (employ) ? employ.sueldo: 0,\r\n        selectedDate:   moment(),\r\n        extra:          0,\r\n        bonus:          0,\r\n        discount:       0,\r\n        date:           moment().format('YYYY-MM-DD'),\r\n        description:    '',\r\n        advance:        false,\r\n        concept:        'PAGO DE SUELDO'\r\n    });\r\n\r\n    const [err, setErr] = useState(null);\r\n\r\n    const httpStore = useHttp();\r\n\r\n    const onSubmit = (e) => {\r\n      e.preventDefault();\r\n      setErr(null);\r\n\r\n      httpStore.request('/payroll', data).then(res => {\r\n          if(res.ok) {\r\n              toast.success('Pago de Sueldo exitoso');\r\n          }\r\n      }).catch(err => setErr(err))\r\n    };\r\n\r\n    const onChangeEmploy = (option, value) => {\r\n        setData({...data, employ_id: null})\r\n        if (value!==null){\r\n\r\n            setData({\r\n                ...data,\r\n                employ_id: value.id,\r\n                amount: value.sueldo\r\n            });\r\n\r\n        }\r\n        else{\r\n            setData({...data, employ_id: null})\r\n        }\r\n    };\r\n\r\n    const onChangeDate = date => {\r\n        setData({\r\n            ...data,\r\n            selectedDate: date,\r\n            date: moment(date).format('YYYY-MM-DD')\r\n        });\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value});\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n            <Grid container spacing={3}>\r\n                {/*Nombre*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    {\r\n                        employs &&\r\n                            <Autocomplete\r\n                                id=\"employ_id\"\r\n                                options={employs.data}\r\n                                onChange={(option, value) => onChangeEmploy(option, value)}\r\n                                getOptionLabel={option => (option.name+' '+option.surname).toUpperCase() }\r\n                                renderInput={params => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        required\r\n                                        label=\"Empleado\" variant=\"standard\" fullWidth />\r\n                                )}\r\n                            />\r\n                    }\r\n                    {\r\n                        employs === null && employ.name &&\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"employ_id_2\">Empleado</InputLabel>\r\n                                <Select\r\n                                    labelId=\"employ_id_2\"\r\n                                    name={'employ_id'}\r\n                                    value={data.employ_id}\r\n                                    fullWidth >\r\n                                    <MenuItem value={employ.id}>{employ.name + ' ' + employ.surname}</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                    }\r\n\r\n                </Grid>\r\n                {/*Date*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"DD/MM/YYYY\"\r\n                        fullWidth\r\n                        autoOk={true}\r\n                        id=\"date\"\r\n                        label=\"Fecha de pago\"\r\n                        value={data.selectedDate}\r\n                        onChange={(date) => onChangeDate(date)}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'Cambiar Fecha',\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                {/*Monto*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='number' label='Monto $'\r\n                               name='amount'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.amount}\r\n                               required fullWidth/>\r\n                </Grid>\r\n                {/*Bonus*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='number' label='+ Comisión $'\r\n                               name='bonus'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.bonus}\r\n                               fullWidth/>\r\n                </Grid>\r\n                {/*Extra*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='number' label='+ Valor Adicional $'\r\n                               name='extra'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.extra}\r\n                               fullWidth/>\r\n                </Grid>\r\n                {/*Descuento*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField type='number' label='- Descuento $'\r\n                               name='discount'\r\n                               onChange={e => onChange(e)}\r\n                               value={data.discount}\r\n                               fullWidth/>\r\n                </Grid>\r\n                {/*Description*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        id=\"description\"\r\n                        label=\"Detalle | Observación\"\r\n                        multiline\r\n                        rows=\"4\"\r\n                        fullWidth\r\n                        name='description'\r\n                        onChange={e => onChange(e)}\r\n                        value={data.description}\r\n                    />\r\n                </Grid>\r\n                {/*Adelnto y Concepto*/}\r\n                <Grid item xs={12} sm={6}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox checked={data.advance}\r\n                                      onChange={e => setData({\r\n                                          ...data,\r\n                                          advance: !data.advance,\r\n                                            concept: (!data.advance) ? 'ADELANTO DE SUELDO' : 'PAGO DE SUELDO'\r\n                                      })}\r\n                                      value=\"advance\" />\r\n                        }\r\n                        label=\"ADELANTO\"\r\n                    />\r\n                    <TextField\r\n                        id=\"concept\"\r\n                        label=\"Concepto\"\r\n                        multiline\r\n                        disabled\r\n                        rows=\"2\"\r\n                        fullWidth\r\n                        name='concept'\r\n                        value={data.concept}\r\n                    />\r\n                </Grid>\r\n                {/*Submit*/}\r\n                <Grid item xs={12} className='center'>\r\n                    <Alert show={err!==null} message={err} />\r\n                    { httpStore.loader && <LinearProgress color=\"secondary\" />}\r\n                    <br/>\r\n                    <Button type='submit' color='primary'\r\n                            disabled={httpStore.loader}\r\n                            variant='contained'>\r\n                        Pagar Sueldo\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n            {\r\n                data.employ_id !== null && <>\r\n                    <br/>\r\n                    <Divider /> <br />\r\n                    <DetailEmploy employ={data.employ_id} /></>\r\n            }\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nFrmPayRoll.defaultProps = {\r\n  employs: null,\r\n  employ: null\r\n};\r\n\r\nexport default FrmPayRoll;\r\n","import React from 'react';\r\nimport FrmPayRoll from \"./_form/FrmPayRoll\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport Master from \"../Master\";\r\nimport {Container, Divider, Icon, Paper, Grid} from \"@material-ui/core\";\r\nimport WithAdmin from \"../_partials/hoc/WithAdmin\";\r\n\r\nconst RegisterPayRoll = () => {\r\n    const employs = useGet('/employ');\r\n\r\n    return (\r\n        <Master>\r\n            <WithAdmin>\r\n                <Container maxWidth='lg' component={Paper} className='paper-content'>\r\n                    <div className='paper-header'>\r\n                        <h4> <Icon>payment</Icon> Pagar sueldo</h4>\r\n                        <Divider />\r\n                    </div>\r\n                    <Grid container>\r\n                        <Grid item xs={12} md={12}>\r\n                            <FrmPayRoll employs={employs}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </WithAdmin>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default RegisterPayRoll;\r\n","import React from 'react';\r\nimport Master from \"../Master\";\r\nimport {Container, Divider, Grid, Icon, Paper} from \"@material-ui/core\";\r\nimport FrmPayRoll from \"./_form/FrmPayRoll\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport WithAdmin from \"../_partials/hoc/WithAdmin\";\r\n\r\nconst RegisterPayRollUser = ({match}) => {\r\n\r\n    const id = match.params.id;\r\n    const employ = useGet(`/employ/${id}`);\r\n\r\n    return (\r\n        <Master>\r\n            <WithAdmin>\r\n                <WithLoader loader={employ.loader}>\r\n                    <Container maxWidth='lg' component={Paper} className='paper-content'>\r\n                        <div className='paper-header'>\r\n                            <h4> <Icon>payment</Icon> Pagar sueldo</h4>\r\n                            <Divider />\r\n                        </div>\r\n                        <Grid container>\r\n\r\n                                    <>\r\n                                        {\r\n                                            employ &&\r\n                                            <Grid item xs={12}>\r\n                                                <FrmPayRoll employ={employ.data}/>\r\n                                            </Grid>\r\n                                        }\r\n                                    </>\r\n                        </Grid>\r\n                    </Container>\r\n                </WithLoader>\r\n            </WithAdmin>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default RegisterPayRollUser;\r\n","import React from 'react';\r\nimport useGet from \"../../utils/useGet\";\r\nimport {Checkbox, Container, Divider, FormControlLabel, Grid, Icon, Paper, TextField} from \"@material-ui/core\";\r\nimport Master from \"../Master\";\r\nimport WithAdmin from \"../_partials/hoc/WithAdmin\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport DetailEmploy from \"./DetailEmploy\";\r\n\r\nconst ShowPayRoll = ({match}) => {\r\n    const id = match.params.id;\r\n    const payroll = useGet(`/payroll/${id}`);\r\n    return (\r\n        <Master>\r\n            <WithAdmin>\r\n                <WithLoader loader={payroll.loader} text={'Cargando rol...'}>\r\n                    <Container maxWidth='lg' component={Paper} className='paper-content'>\r\n                        <div className='paper-header'>\r\n                            <h4> <Icon>payment</Icon> {(payroll.data.status === 1) ? 'Sueldo Pagado' : <div style={{color: 'red'}}>Pago Anulado</div>}</h4>\r\n                            <Divider />\r\n                        </div>\r\n                        <Grid container spacing={3}>\r\n\r\n                            {/*Nombre*/}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    label={'Empleado'}\r\n                                    fullWidth\r\n                                    value={(payroll.data.name + ' ' +payroll.data.surname ).toUpperCase()} readOnly/>\r\n                            </Grid>\r\n\r\n                            {/*Fecha*/}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    label={'Fecha'}\r\n                                    fullWidth\r\n                                    value={payroll.data.date} readOnly/>\r\n                            </Grid>\r\n\r\n                            {/*Monto*/}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField type='number' label='Monto $'\r\n                                           name='amount'\r\n                                           value={payroll.data.amount}\r\n                                           readOnly fullWidth/>\r\n                            </Grid>\r\n                            {/*Bonus*/}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField type='number' label='+ Comisión $'\r\n                                           name='bonus'\r\n                                           readOnly value={payroll.data.bonus}\r\n                                           fullWidth/>\r\n                            </Grid>\r\n                            {/*Extra*/}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField type='number' label='+ Valor Adicional $'\r\n                                           name='extra'\r\n                                           readOnly\r\n                                           value={payroll.data.extra}\r\n                                           fullWidth/>\r\n                            </Grid>\r\n                            {/*Descuento*/}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField type='number' label='- Descuento $'\r\n                                           name='discount'\r\n                                           readOnly\r\n                                           value={payroll.data.discount}\r\n                                           fullWidth/>\r\n                            </Grid>\r\n                            {/*Description*/}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    id=\"description\"\r\n                                    label=\"Detalle | Observación\"\r\n                                    multiline\r\n                                    rows=\"4\"\r\n                                    fullWidth\r\n                                    name='description' readOnly\r\n                                    value={payroll.data.description}\r\n                                />\r\n                            </Grid>\r\n                            {/*Adelnto y Concepto*/}\r\n                            <Grid item xs={12} sm={6}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox checked={payroll.data.advance}\r\n                                                  disabled\r\n                                                  value=\"advance\" />\r\n                                    }\r\n                                    label=\"ADELANTO\"\r\n                                />\r\n                                <TextField\r\n                                    id=\"concept\"\r\n                                    label=\"Concepto\"\r\n                                    multiline\r\n                                    disabled\r\n                                    rows=\"2\"\r\n                                    fullWidth\r\n                                    name='concept'\r\n                                    value={payroll.data.concept}\r\n                                />\r\n                            </Grid>\r\n\r\n                            {\r\n                                payroll.data && payroll.data.employ_id &&\r\n                                <Grid item xs={12} md={12} style={{ marginTop: 10 }}>\r\n                                    <Divider/>\r\n                                    <br/>\r\n                                    <DetailEmploy employ={payroll.data.employ_id} now={payroll.data.date}/>\r\n                                </Grid>\r\n                            }\r\n\r\n                        </Grid>\r\n\r\n                    </Container>\r\n                </WithLoader>\r\n            </WithAdmin>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default ShowPayRoll;\r\n","import React from 'react';\r\nimport Master from \"../Master\";\r\nimport MUIDataTable from 'mui-datatables'\r\nimport {\r\n    Chip,\r\n    Icon,\r\n    IconButton,\r\n} from \"@material-ui/core\";\r\n\r\nimport useGet from \"../../utils/useGet\";\r\nimport useHttp from \"../../utils/useHttp\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport WithAdminContent from \"../_partials/hoc/WithAdminContent\";\r\nimport {tableOptions} from \"../../config/config\";\r\nimport {toast} from \"react-toastify\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {PAYROLL_SHOW, toName} from \"../../config/urls\";\r\n\r\nconst ListPayRoll = () => {\r\n\r\n    const pays = useGet('/payroll');\r\n\r\n    const columns = [\r\n        { label: 'NOMBRE', name: 'name',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return value.toUpperCase();}\r\n            }\r\n        },\r\n        { label: 'APELLIDO', name: 'surname',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return value.toUpperCase();}\r\n            }\r\n        },\r\n        { label: 'CONCEPTO', name: 'concept'},\r\n        { label: 'FECHA', name: 'date', options: {filter: false}},\r\n        { label: 'OBSERV.', name: 'description',\r\n            options: {\r\n            filter: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (<div>{value ? value: 'Ninguna'}</div>)\r\n            }\r\n        },\r\n        },\r\n        { label: 'TOTAL', name: 'total', options: {filter: false}},\r\n        { label: 'ESTADO', name: 'status',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            { value === 1 &&\r\n                            <>\r\n                                <Chip\r\n                                    label={\"Correcto\"}\r\n                                    className={'bg-green'}/>\r\n                            </>\r\n                            }\r\n                            { value === -1 &&\r\n                            <>\r\n                                <Chip\r\n                                    label=\"Anulado\"\r\n                                    className={'bg-red'}/>\r\n                            </>\r\n                            }\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        },\r\n        {\r\n            label: 'OPCIONES', name: 'id',\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            <IconButton onClick={() => onSubmit(value)}\r\n                                        size={\"small\"}\r\n                                        aria-label=\"Anular\">\r\n                                <Icon>block</Icon>\r\n                            </IconButton>\r\n\r\n                            <IconButton component={Link} to={toName(PAYROLL_SHOW, {id: value})}\r\n                                        size={\"small\"}\r\n                                        aria-label=\"Ver\">\r\n                                <Icon>visibility</Icon>\r\n                            </IconButton>\r\n                        </div>\r\n                    );\r\n                },\r\n            }\r\n        }\r\n    ];\r\n    const invalidatePay = useHttp('delete');\r\n\r\n    const onSubmit = (selectedId) => {\r\n        let description = window.prompt('Ingrese el motivo de la anulación para confirmar');\r\n\r\n        if (!description) return;\r\n\r\n        invalidatePay.request(`/payroll/${selectedId}`, {description: description})\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    let index = pays.data.findIndex(p => p.id === selectedId);\r\n                    pays.data[index].status = -1;\r\n                    toast.success(res.message);\r\n                    const data = pays.data;\r\n                    pays.setData();\r\n                    pays.setData(data);\r\n                }\r\n            }).catch(err => {\r\n                toast.error(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Master>\r\n            <WithLoader loader={pays.loader} text={'Cargando roles...'}>\r\n                <WithAdminContent>\r\n                    <MUIDataTable\r\n                        columns={columns}\r\n                        data={pays.data}\r\n                        options={tableOptions}\r\n                        title={'Roles de pagos'}/>\r\n                </WithAdminContent>\r\n            </WithLoader>\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default ListPayRoll;\r\n","import React, {useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Button, Grid, LinearProgress, TextField} from \"@material-ui/core\";\r\nimport useHttp from \"../../../utils/useHttp\";\r\nimport {toast} from \"react-toastify\";\r\nimport {CLIENT_LIST} from \"../../../config/urls\";\r\nimport Alert from \"../../_partials/Alert\";\r\n\r\nconst FrmClient = ({ method, url, initialData, history, children }) => {\r\n\r\n    const http = useHttp(method);\r\n    const [err, setErr] = useState(null);\r\n    const [data, setData] = useState(initialData);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setErr(null);\r\n        http.request(url, data).then(res => {\r\n            if(res.ok && method==='post') {\r\n                toast.success('Cliente Guardado con éxito');\r\n                history.push(CLIENT_LIST);\r\n            }\r\n\r\n            if(res.ok && method==='put') {\r\n                toast.success(res.message);\r\n            }\r\n        }).catch(err =>{\r\n            setErr(err);\r\n        })\r\n    };\r\n\r\n\r\n    const onChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value});\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <Grid container spacing={3}>\r\n                    <div className={'grid-title'}>\r\n                        <p>Datos Básicos</p>\r\n                    </div>\r\n                    {/*Nombre*/}\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField type='text' label='Nombre'\r\n                                   name='name'\r\n                                   onChange={e => onChange(e)}\r\n                                   value={data.name.toUpperCase()}\r\n                                   required fullWidth autoFocus/>\r\n                    </Grid>\r\n                    {/*Apellido*/}\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField type='text' label='Apellido'\r\n                                   name='surname'\r\n                                   onChange={e => onChange(e)}\r\n                                   value={data.surname.toUpperCase()}\r\n                                   fullWidth />\r\n                    </Grid>\r\n                    {/*Dirección*/}\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField type='address' label='Dirección'\r\n                                   name='address'\r\n                                   onChange={e => onChange(e)}\r\n                                   value={data.address}\r\n                                   required fullWidth />\r\n                    </Grid>\r\n\r\n                    {/*Email*/}\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField type='email' label='Correo: '\r\n                                   name='email'\r\n                                   onChange={e => onChange(e)}\r\n                                   value={data.email === null ? '' : data.email}\r\n                                   fullWidth />\r\n                    </Grid>\r\n\r\n                    {/*Teléfono Personal*/}\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField type='phone' label='Teléfono Personal'\r\n                                   name='phones'\r\n                                   inputProps={{maxLength: 13}}\r\n                                   onChange={e => onChange(e)}\r\n                                   value={data.phones}\r\n                                   fullWidth />\r\n                    </Grid>\r\n\r\n                    {/*Teléfono Trabajo*/}\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField type='phone' label='Teléfono Trabajo'\r\n                                   name='phones_b'\r\n                                   inputProps={{maxLength: 13}}\r\n                                   onChange={e => onChange(e)}\r\n                                   value={data.phones_b}\r\n                                   fullWidth />\r\n                    </Grid>\r\n\r\n\r\n\r\n                    {/*Submit btn*/}\r\n                    <Grid item xs={12} className='center'>\r\n                        <Alert show={err!==null} message={err} />\r\n                        { http.loader && <LinearProgress color=\"secondary\" />}\r\n                        <br/>\r\n                        <Button type='submit' color='primary'\r\n                                disabled={http.loader}\r\n                                variant='contained'>\r\n                            { method === 'post' ? 'Guardar' : 'Actualizar' }\r\n                        </Button>\r\n                        { children }\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nFrmClient.defaultProps = {\r\n    method: 'post',\r\n    url: 'client',\r\n    initialData: {\r\n        name: '',\r\n        surname: '',\r\n        address: '',\r\n        phones: '',\r\n        phones_b: '',\r\n        email: ''\r\n    }\r\n};\r\n\r\nexport default withRouter(FrmClient);\r\n","import React from 'react';\r\nimport Master from \"../Master\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport {Container, Divider, Icon, Paper} from \"@material-ui/core\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport FrmClient from \"./_form/FrmClient\";\r\n\r\nconst EditClient = ({match}) => {\r\n\r\n    const id = match.params.id;\r\n\r\n    const client = useGet(`/client/${id}`);\r\n\r\n    return (\r\n        <>\r\n            <Master>\r\n                <WithLoader loader={client.loader} text={'Cargando datos del empleado...'}>\r\n                    <Container maxWidth='md' component={Paper} className='paper-content'>\r\n                        <div className='paper-header'>\r\n                            <h4> <Icon>person_edit</Icon> Editar Cliente</h4>\r\n                            <Divider />\r\n                        </div>\r\n                        {\r\n                            client.data.name !== undefined &&\r\n                            <FrmClient method={'put'} url={`/client/${id}`}\r\n                                       initialData={client.data}/>\r\n                        }\r\n                    </Container>\r\n                </WithLoader>\r\n            </Master>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditClient;\r\n","import React from 'react';\nimport Grow from '@material-ui/core/Grow';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Clear, Search} from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\nimport {CircularProgress} from \"@material-ui/core\";\n\nconst defaultSearchStyles = theme => ({\n  main: {\n    display: 'flex',\n    flex: '1 0 auto',\n    paddingTop: 5,\n  },\n  searchText: {\n    flex: '0.8 0',\n  },\n  clearIcon: {\n    '&:hover': {\n      color: theme.palette.error.main,\n    },\n  },\n});\n\nclass CustomSearchRender extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: props.searchText\n    };\n  }\n\n  handleTextChange = event => {\n    this.setState({searchText: event.target.value});\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.onKeyDown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDown, false);\n  }\n\n  onKeyDown = event => {\n    if (event.keyCode === 27) {\n      this.props.onHide();\n    }\n\n    if (event.keyCode === 13) {\n      this.onHandleSearch();\n    }\n  };\n\n  onHandleSearch = () => {\n    if(!this.state.searchText) return;\n    this.props.onSearch(this.state.searchText);\n  };\n\n  render() {\n    const { classes, options, onHide, loader, placeholder } = this.props;\n\n    return (\n      <Grow appear in={true} timeout={300}>\n        <div className={classes.main} ref={el => (this.rootRef = el)}>\n          <TextField\n            placeholder={placeholder}\n            className={classes.searchText}\n            InputProps={{\n              'aria-label': options.textLabels.toolbar.search,\n            }}\n            autoFocus={true}\n            disabled={loader}\n            value={this.state.searchText || ''}\n            onChange={this.handleTextChange}\n            fullWidth={true}\n            inputRef={el => (this.searchField = el)}\n          />\n\n          <IconButton onClick={this.onHandleSearch} color={'primary'}>\n            <Search />\n          </IconButton>\n\n\n          {\n            !loader &&\n            <IconButton className={classes.clearIcon} onClick={onHide}>\n              <Clear />\n            </IconButton>\n          }\n          {\n            loader &&\n            <IconButton className={classes.clearIcon}>\n              <CircularProgress size={24} style={{marginLeft: 15, position: 'relative', top: 4}} />\n            </IconButton>\n          }\n\n        </div>\n      </Grow>\n    );\n  }\n}\n\nCustomSearchRender.defaultProps = {\n  placeholder: 'Buscar'\n};\n\nexport default withStyles(defaultSearchStyles, { name: 'CustomSearchRender' })(CustomSearchRender);\n","import React from 'react';\r\nimport {Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText, Button} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DlgConfirm = ({onClose, onConfirm, open, title, desc, loader}) => {\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {desc}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"primary\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"secondary\" onClick={onConfirm} disabled={loader}>\r\n                    {loader ? 'Espere...': 'Aceptar'}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\nDlgConfirm.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    onConfirm: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    title: PropTypes.string,\r\n    desc: PropTypes.string,\r\n    loader: PropTypes.bool\r\n};\r\nDlgConfirm.defaultProps = {\r\n    title: 'Confirmar',\r\n    desc: '¿Esta seguro que desea realizar esta acción?',\r\n    loader: false\r\n};\r\nexport default DlgConfirm;\r\n","import React, {useState} from 'react';\r\nimport {Chip, Icon, IconButton, Tooltip} from \"@material-ui/core\";\r\nimport {ArrowDownward, ArrowUpward} from \"@material-ui/icons\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {toast} from \"react-toastify\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {PersonAdd} from '@material-ui/icons'\r\nimport {CLIENT_ADD, CLIENT_EDIT, CREDIT_BY_CLIENT, toName} from \"../../config/urls\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport useHttp from \"../../utils/useHttp\";\r\nimport Master from \"../Master\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport {tableOptions} from \"../../config/config\";\r\nimport CustomSearchRender from \"../_partials/CustomSearchRender\";\r\nimport WithAdmin from \"../_partials/hoc/WithAdmin\";\r\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\r\nimport DlgConfirm from \"../_partials/_modals/DlgConfirm\";\r\n\r\nconst ListClient = () => {\r\n    const clients = useGet('/client');\r\n    const search = useHttp('get');\r\n    const remove = useHttp('delete');\r\n    const status = useHttp('put');\r\n\r\n    const [selectClient, setSelectClient] = useState(null);\r\n    const [dlgConfirm, setDlgConfirm] = useState(false);\r\n\r\n    const [q, setQ] = useState('');\r\n\r\n    const columns = [\r\n        {name: \"id\", label: 'ID', options: {display: 'false', filter: false}},\r\n        {\r\n            name: 'name', label: 'NOMBRE',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return value.toUpperCase();}}\r\n        },\r\n        {\r\n            name: 'surname', label: 'APELLIDO',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return value.toUpperCase();}}\r\n        },\r\n        {\r\n            name: 'phones', label: 'TELÉFONO', options: {filter: false}\r\n        },\r\n        {\r\n            name: 'rank', label: 'RANK', options: {filter: false}\r\n        },\r\n        {\r\n          name: 'mora', label: 'MORATORIA', options: {\r\n              customBodyRender: (value) => {\r\n                  return <>\r\n                      { value === 1 && <Chip label={'SI'} size={'small'} className={'bg-red'} />}\r\n                      { value === 0 && <Chip label={'NO'} size={'small'} />}\r\n                  </>\r\n              }\r\n            }\r\n        },\r\n        {\r\n            name: 'status', label: 'ESTADO', options: {\r\n                filter: true,\r\n                customFilterListOptions: { render: v => `Estado: ${v}` },\r\n\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            { value === 1 &&\r\n                            <>\r\n                                <Chip\r\n                                    size={'small'}\r\n                                    label={\"Activo\"}\r\n                                    className={'bg-green'}/>\r\n                                    <WithAdmin>\r\n                                        <Tooltip title={'Dar de BAJA'}>\r\n                                            <IconButton size={\"small\"}\r\n                                                        onClick={() => changeStatus(tableMeta.rowData[0], updateValue)}\r\n                                                        aria-label=\"Dar de baja\">\r\n                                                <ArrowDownward/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </WithAdmin>\r\n                            </>\r\n                            }\r\n                            { value === 0 &&\r\n                            <>\r\n                                <Chip\r\n                                    size={'small'}\r\n                                    label=\"Inactivo\"\r\n                                    className={'bg-red'}/>\r\n                                    <Tooltip title={'Dar de ALTA'}>\r\n                                        <IconButton size={\"small\"}\r\n                                                    onClick={() => changeStatus(tableMeta.rowData[0], updateValue)}\r\n                                                    aria-label=\"Dar de alta\">\r\n                                            <ArrowUpward/>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                            </>\r\n                            }\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        },\r\n        {\r\n            label: 'OPCIONES', name: 'id',\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <WithAdmin>\r\n                            <Tooltip title={'Poner este cliente en Mora'}>\r\n                                <IconButton\r\n                                    onClick={() => addSelectClient(value)}\r\n                                    size={\"small\"}\r\n                                    aria-label=\"Poner en cliente en Mora\">\r\n                                    <MoneyOffIcon/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={'Historial de Créditos'}>\r\n                                <IconButton component={Link}\r\n                                            to={toName(CREDIT_BY_CLIENT, {id: value})}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"Historial de créditos\">\r\n                                    <Icon>list_alt</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={'Editar Cliente'}>\r\n                                <IconButton component={Link}\r\n                                            to={toName(CLIENT_EDIT, {id: value})}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"Editar\">\r\n                                    <Icon>edit</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={'Eliminar Cliente'}>\r\n                                <IconButton onClick={() => deleteClient(value, updateValue)}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"delete\">\r\n                                    <Icon>delete</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </WithAdmin>\r\n                    );\r\n                },\r\n            }\r\n        }\r\n    ];\r\n\r\n    const changeStatus = (clientId, updateValue) => {\r\n        status.request(`/client/cancel/${clientId}`).then(res => {\r\n            if(res.ok) {\r\n                let index = clients.data.findIndex(d => d.id === clientId);\r\n\r\n                const status = clients.data[index].status;\r\n                if (status === 1)\r\n                    clients.data[index].status = 0;\r\n                else\r\n                    clients.data[index].status = 1;\r\n\r\n                updateValue(clients.data[index].status);\r\n\r\n                toast.success(res.message);\r\n            }\r\n        }).catch(err => {\r\n            toast.error(err);\r\n        });\r\n    };\r\n\r\n    const deleteClient = (clientId) => {\r\n        if(!window.confirm('¿Esta seguro que desea eliminar este cliente?')) return;\r\n\r\n        remove.request(`/client/${clientId}`).then(res => {\r\n            if(res.ok){\r\n                let index = clients.data.findIndex(d => d.id === clientId);\r\n                clients.data.splice(index, 1);\r\n\r\n                toast.success(res.message);\r\n                const data = clients.data;\r\n                clients.setData();\r\n                clients.setData(data);\r\n            }\r\n        }).catch(err => toast.error(err));\r\n    };\r\n\r\n    const onSearch = (searchText) => {\r\n        let url = '/client';\r\n        if(searchText !== null)\r\n            url = `/client/search?q=${searchText}`;\r\n        setQ(searchText);\r\n        search.request(url).then(res => {\r\n            if (res.ok) {\r\n                clients.setData(res.data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const options = {\r\n        ...tableOptions,\r\n        searchText: q,\r\n        serverSide: true,\r\n        onTableChange: (action, tableState) => {\r\n            switch (action) {\r\n                case 'search':\r\n                   onSearch(tableState.searchText);\r\n                   break;\r\n                default:\r\n                    return;\r\n            }\r\n        },\r\n        customSearchRender: (searchText, handleSearch, hideSearch, options) => {\r\n            return (\r\n                <CustomSearchRender\r\n                    searchText={searchText}\r\n                    onSearch={handleSearch}\r\n                    onHide={hideSearch}\r\n                    options={options}\r\n                    loader={search.loader}\r\n                />\r\n            );\r\n        }\r\n\r\n    };\r\n\r\n    const HeaderTitle = () => {\r\n        return (\r\n            <div className={'header-btn'}>\r\n                <h3>CLIENTES</h3>\r\n                <IconButton component={Link} to={CLIENT_ADD}>\r\n                    <PersonAdd />\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const addSelectClient = (clientId) => {\r\n        setSelectClient(clientId);\r\n        setDlgConfirm(true);\r\n    };\r\n\r\n    const markMora = () => {\r\n        if (!selectClient) {\r\n            toast.error('Vuelva a seleccionar un cliente primero');\r\n            return;\r\n        }\r\n\r\n        status.request(`/client/mora/${selectClient}`).then(res => {\r\n            if (res.ok) {\r\n                setDlgConfirm(false);\r\n                toast.success(res.message);\r\n            }\r\n        }).catch(err => toast.error(err));\r\n    };\r\n\r\n    return (\r\n        <Master>\r\n            <WithLoader loader={clients.loader}>\r\n                    <MUIDataTable\r\n                        title={<HeaderTitle/>}\r\n                        data={clients.data}\r\n                        columns={columns} options={options} />\r\n            </WithLoader>\r\n            <DlgConfirm onConfirm={ () => markMora()}\r\n                        open={dlgConfirm}\r\n                        onClose={() => setDlgConfirm(false)}\r\n                        desc={'¿Estas seguro que deseas marcar este cliente en mora ??'}\r\n                        title={`Marcar cliente CLI-${selectClient} en Mora`} />\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default ListClient;\r\n","import React from 'react';\r\nimport {Container, Divider, Icon, Paper} from \"@material-ui/core\";\r\nimport Master from \"../Master\";\r\nimport FrmClient from \"./_form/FrmClient\";\r\n\r\nconst RegisterClient = () => {\r\n    return (\r\n        <>\r\n            <Master>\r\n                <Container maxWidth='md' component={Paper} className='paper-content'>\r\n                    <div className='paper-header'>\r\n                        <h4> <Icon>person_add</Icon> Agregar Cliente</h4>\r\n                        <Divider />\r\n                    </div>\r\n                    <FrmClient method={'post'} />\r\n                </Container>\r\n            </Master>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RegisterClient;\r\n","import React from 'react';\r\nimport {GoogleApiWrapper} from 'google-maps-react';\r\nimport {CircularProgress, Paper} from \"@material-ui/core\";\r\n\r\nconst Loading = () => <Paper elevation={0} className=\"loader-container\"> <CircularProgress color=\"secondary\"/> <p>Cargando mapa...</p> </Paper>;\r\n\r\nexport default (WrappedComponent) => {\r\n    const WithMapKey = ({...props}) => <WrappedComponent {...props} />\r\n\r\n    return GoogleApiWrapper({\r\n        apiKey: 'AIzaSyAdoB5hIORuaqfcPStZX8r61NCu2vV7xwE',\r\n        //libraries: ['places', 'visualization'],\r\n        LoadingContainer: Loading\r\n    })(WithMapKey)\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Map, Marker} from 'google-maps-react';\r\nimport PropTypes from 'prop-types';\r\nimport WithMapKey from \"./WithMapKey\";\r\nclass MapViewLoc extends Component {\r\n\r\n    render() {\r\n            return (\r\n                <Map className={'google-map'}\r\n                     google={this.props.google}\r\n                     initialCenter={{\r\n                         lat: this.props.lat,\r\n                         lng: this.props.lon\r\n                     }}\r\n                     zoom={15} >\r\n                    <Marker id={1} title={this.props.description}\r\n                            name={this.props.title}>\r\n                    </Marker>\r\n                </Map>\r\n            );\r\n    }\r\n}\r\n\r\nMapViewLoc.defaultProps = {\r\n    height: 450,\r\n    description: '',\r\n    title: 'Ubicación'\r\n};\r\n\r\nMapViewLoc.propTypes = {\r\n    lat: PropTypes.number.isRequired,\r\n    lon: PropTypes.number.isRequired,\r\n    height: PropTypes.number,\r\n    description: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default WithMapKey(MapViewLoc);","import React from 'react';\r\nimport {\r\n    useMediaQuery,\r\n    useTheme,\r\n    Button,\r\n    DialogContent,\r\n    DialogActions, Dialog\r\n} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nimport MapViewLoc from \"../MapViewLoc\";\r\n\r\nconst DialogViewMapLoc = ({isOpen, title, lon, lat, onClose, description}) => {\r\n\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={isOpen}\r\n                maxWidth={'md'}\r\n                onClose={() => onClose()}\r\n                aria-labelledby=\"responsive-dialog-title\">\r\n                <DialogContent className={'map-dialog'}>\r\n                    <div className={'dialog-map-header'}>\r\n                        <h2>{title}</h2>\r\n                        <small className={'text-muted'}>{description}</small>\r\n                    </div>\r\n                    <MapViewLoc lon={lon} lat={lat} title={title} description={description} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={() => onClose()} color=\"primary\">\r\n                        OK\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\nDialogViewMapLoc.propTypes = {\r\n    onClose: PropTypes.func,\r\n    isOpen: PropTypes.bool,\r\n    lon: PropTypes.number.isRequired,\r\n    lat: PropTypes.number.isRequired,\r\n    title: PropTypes.string\r\n};\r\n\r\nDialogViewMapLoc.defaultProps = {\r\n    isOpen: false,\r\n    title: 'Ver Ubicación',\r\n    description: ''\r\n};\r\n\r\nexport default DialogViewMapLoc;\r\n","import React, {useState} from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Button,\r\n    TextField,\r\n    useTheme, useMediaQuery\r\n} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DlgInput = ({open, onClose, onConfirm, title, desc, inputLabel, loader}) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <Dialog open={open}\r\n                onEnter={() => setText('')}\r\n                onClose={onClose} aria-labelledby=\"form-dialog-title\" fullScreen={fullScreen}>\r\n            <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {desc}\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    multiline={true}\r\n                    rows={2}\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                    label={inputLabel}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button color={'primary'}  onClick={onClose}>\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"secondary\" onClick={() => onConfirm(text)} disabled={loader}>\r\n                    { loader ? 'Espere...' : 'Anular'}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nDlgInput.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    onConfirm: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onFieldChange: PropTypes.func,\r\n    title: PropTypes.string,\r\n    desc: PropTypes.string,\r\n    inputLabel: PropTypes.string,\r\n    loader: PropTypes.bool\r\n};\r\n\r\nDlgInput.defaultProps = {\r\n    title: 'Confirmar',\r\n    desc: 'Ingrese el motivo de la anulación',\r\n    inputLabel: 'Motivo de la anulación',\r\n    loader: false,\r\n};\r\n\r\nexport default DlgInput;\r\n","import React, {forwardRef, useImperativeHandle, useState} from 'react';\r\nimport DialogViewMapLoc from \"../../maps/_dialog/DialogViewMapLoc\";\r\nimport DlgInput from \"../../_partials/_modals/DlgInput\";\r\nimport DlgConfirm from \"../../_partials/_modals/DlgConfirm\";\r\nimport {toast} from \"react-toastify\";\r\nimport useHttp from \"../../../utils/useHttp\";\r\n\r\nconst DlgListCredit = forwardRef(({credit}, ref) => {\r\n    const reqUpdate = useHttp('put');\r\n\r\n    // Dialogs\r\n    const [dialogMap, setDialogMap] = useState(false);\r\n    const [dialogInput, setDialogInput] = useState(false);\r\n    const [dialogConfirm, setDialogConfirm] = useState(false);\r\n\r\n    // Anular crédito\r\n    const cancelCredit = (motivo) => {\r\n        if (!motivo) {\r\n            toast.warn('Es necesario especificar el motivo de la anulación');\r\n            return;\r\n        }\r\n        reqUpdate.request(`/credit/cancel/${credit}`, {description: motivo}).then(res => {\r\n            if (res.ok) {\r\n                setDialogInput(false);\r\n                toast.success('Crédito anulado con éxito');\r\n            }\r\n        }).catch(err => {\r\n            toast.error(err);\r\n        })\r\n    };\r\n\r\n    // finalizar crédito\r\n    const finishCredit = () => {\r\n        if (!credit) {\r\n            toast.error('Vuelve a seleccionar el crédito que deseas finalizar');\r\n            return;\r\n        }\r\n\r\n        reqUpdate.request(`/credit/end/${credit}`).then(res => {\r\n            if (res.ok) {\r\n                toast.success('El crédito fué finalizado con éxito');\r\n                setDialogConfirm(false);\r\n            }\r\n        }).catch(err => toast.error(err));\r\n    };\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n\r\n        openConfirm() {\r\n            setDialogConfirm(true);\r\n        },\r\n\r\n        openInput() {\r\n            setDialogInput(true);\r\n        },\r\n\r\n        openMap() {\r\n            setDialogMap(true);\r\n        }\r\n\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            {/*Ver la localización*/\r\n                credit && credit.geo_lon && credit.geo_lat &&\r\n                <DialogViewMapLoc\r\n                    title={`${credit.client.toUpperCase()}`}\r\n                    description={`${credit.address}  ${ (credit.ref_detail) ? ' - '+credit.ref_detail : '' }`}\r\n                    isOpen={dialogMap}\r\n                    onClose={() => setDialogMap(false)}\r\n                    lon={parseFloat(credit.geo_lon)} lat={parseFloat(credit.geo_lat)} />\r\n            }\r\n            {/*------------ | CONFIRMAR ANULACIÓN | ------------*/\r\n                credit &&\r\n                <DlgInput title={`Anular crédito COD-${credit}`}\r\n                          desc={`¿Estás seguro de que deseas anular el crédito COD-${credit}?`}\r\n                          onClose={() => setDialogInput(false)}\r\n                          open={dialogInput}\r\n                          onConfirm={(e) => cancelCredit(e)}/>\r\n            }\r\n            {/*------------ | CONFIRMAR FINALIZACIÓN | ------------*/\r\n                credit &&\r\n                <DlgConfirm title={`Finalizar crédito COD-${credit}`}\r\n                            desc={`Al finalizar un crédito el sistema entiende que se cumplió con todos los pagos y todo es correcto ¿Desea finalizar?`}\r\n                            onConfirm={() => finishCredit()}\r\n                            open={dialogConfirm}\r\n                            onClose={() => setDialogConfirm(false)}/>\r\n            }\r\n        </>\r\n    );\r\n});\r\n\r\nexport default DlgListCredit;\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport Axios from \"axios\";\r\nimport {Chip, Icon, IconButton, Tooltip} from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport WithLoader from \"../../_partials/hoc/WithLoader\";\r\nimport {money, tableOptions} from \"../../../config/config\";\r\nimport {CREDIT_SHOW, toName} from \"../../../config/urls\";\r\nimport {processErrors, toDate} from \"../../../utils/utils\";\r\nimport {toast} from \"react-toastify\";\r\nimport DlgListCredit from \".././_dialog/DlgListCredit\";\r\nimport CustomSearchRender from \"../../_partials/CustomSearchRender\";\r\nimport useHttp from \"../../../utils/useHttp\";\r\n\r\n\r\nconst TableListCredit = ({personId, userId, searchable}) => {\r\n    const search = useHttp('get');\r\n    const dialog = useRef();\r\n\r\n    // state\r\n    const [credits, setCredits] = useState([]);\r\n    const [loader, setLoader] = useState(false);\r\n    const [credit, setCredit] = useState({geo_lat: null, geo_lon: null});\r\n    const [q, setQ] = useState(''); // para las búsquedas\r\n    const [total, setTotal] = useState(0); // para paginar\r\n    const [filters, setFilters] = useState({\r\n        page: 0,\r\n        rowPerPage: 15\r\n    });\r\n\r\n\r\n    // Obtener todos los creditos\r\n    useEffect(() => {\r\n        const getCredits = () => {\r\n            let url = `/credit?page=${(filters.page+1)}&limit=${filters.rowPerPage}`;\r\n\r\n            if (personId !== null)\r\n                url+= `&person_id=${personId}`;\r\n\r\n            setLoader(true);\r\n            Axios.get(url).then(res => {\r\n                if(res.ok) {\r\n                    setCredits(res.data);\r\n                    setTotal(res.total);\r\n                }\r\n            })\r\n                .catch(err => toast.error(processErrors(err)))\r\n                .finally(() => setLoader(false))\r\n        };\r\n\r\n        getCredits();\r\n    }, [filters, personId]);\r\n\r\n    // Ver localización GPS\r\n    const viewLoc = (creditId) => {\r\n        const cred = credits.find(c => c.id === creditId);\r\n        if(!cred) return;\r\n        setCredit(cred);\r\n        dialog.current.openMap();\r\n    };\r\n\r\n    // confirmar el crédito para anular o finalizar\r\n    const confirmCredit = (creditId, end = false) => {\r\n        if (!creditId) {\r\n            toast.warn('Vuelve a seleccionar crédito');\r\n            return;\r\n        }\r\n\r\n        setCredit(creditId);\r\n\r\n        if (!end)\r\n            dialog.current.openInput(true);\r\n        else\r\n            dialog.current.openConfirm(true);\r\n    };\r\n\r\n    // buscar créditos\r\n    const onSearch = (searchText) => {\r\n        let url = `/credit?page=${(filters.page+1)}&limit=${filters.rowPerPage}`;\r\n        if(searchText !== null)\r\n            url = `/credit?q=${searchText}&limit=30`;\r\n        setQ(searchText);\r\n        search.request(url).then(res => {\r\n            if (res.ok) {\r\n                setCredits(res.data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            name: \"client\", label: 'CLIENTE',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value, tableMeta) => {\r\n                    return value ? value.toUpperCase() : 'Indefinido';\r\n                }\r\n            },\r\n        },\r\n        {name: \"monto\", label: 'MONTO', options: {filter: false,\r\n                setCellHeaderProps: () => ({ align: 'right' }),\r\n                setCellProps: () => ({ align: 'right' }),\r\n                customBodyRender: (value) => {return <b>{money(value)}</b>;}}},\r\n        {name: \"utilidad\", label: '%', options: {filter: false,\r\n                display: false}},\r\n        {name: \"total_utilidad\", label: 'TOTAL %', options: {filter: false, display: false,\r\n                setCellHeaderProps: () => ({ align: 'right' }),\r\n                setCellProps: () => ({ align: 'right' }),\r\n                customBodyRender: (value) => {return <b>{money(value)}</b>;}}},\r\n        {name: \"total\", label: 'TOTAL', options: {filter: false,\r\n                setCellHeaderProps: () => ({ align: 'right' }),\r\n                setCellProps: () => ({ align: 'right' }),\r\n                customBodyRender: (value) => {return <b>{money(value)}</b>;}}},\r\n        {name: \"plazo\", label: 'PLAZO', options: {filter: false}},\r\n        {name: \"cobro\", label: 'COBRO', options: {filter: false, display: 'false'}},\r\n        {name: \"ruta\", label: 'RUTA', options: {filter: false}},\r\n        {\r\n            name: \"description\", label: 'DETALLE',\r\n            options: {\r\n                filter: false,\r\n                display: 'false',\r\n                customBodyRender: (value) => {\r\n                    return <small>{value}</small>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            name: \"f_inicio\", label: 'F. INICIO',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {\r\n                    return toDate(value);\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: \"f_fin\", label: 'F. FIN',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {\r\n                    return toDate(value);\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: 'status', label: 'ESTADO', options: {\r\n                filter: true,\r\n                customFilterListOptions: { render: v => `Estado: ${v}` },\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            { value === 1 && <Chip label=\"Activo\" size={'small'} className={'bg-green'}/>}\r\n                            { value === 0 && <Chip label=\"Anulado\" size={'small'} className={'bg-red'}/>}\r\n                            { value === 2 && <Chip label=\"Exitoso\" size={'small'} className={'bg-info'}/>}\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        },\r\n        {\r\n            label: 'OPCIONES', name: 'id',\r\n            options: {\r\n                filter: false, sort: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    const status = tableMeta.rowData[11];\r\n                    return (\r\n                        <>\r\n                            <Tooltip title={'Ver detalles'}>\r\n                                <IconButton component={Link}\r\n                                            to={toName(CREDIT_SHOW, {id: value})}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"Detalle\">\r\n                                    <Icon>chrome_reader_mode</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={'Ver Dirección'}>\r\n                                <IconButton onClick={() => viewLoc(value)}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"Detalle\">\r\n                                    <Icon>not_listed_location</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n\r\n                            { /*ANULA SOLO SI EL CRÉDITO ESTA ACTIVO*/\r\n                                status === 1 &&\r\n                                <>\r\n                                    <Tooltip title={'Anular Crédito'}>\r\n                                        <IconButton\r\n                                            onClick={() => confirmCredit(value)}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"Anular\">\r\n                                            <Icon>block</Icon>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                    <Tooltip title={'Marcar como finalizado'}>\r\n                                        <IconButton\r\n                                            color={'secondary'}\r\n                                            onClick={() => confirmCredit(value, true)}\r\n                                            size={\"small\"}\r\n                                            aria-label=\"Finalizar\">\r\n                                            <Icon>done-all</Icon>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </>\r\n                            }\r\n\r\n\r\n                        </>\r\n                    );\r\n                },\r\n            }\r\n        }\r\n    ];\r\n\r\n    const options = {\r\n        ...tableOptions,\r\n        search: searchable,\r\n        serverSide: true,\r\n        searchText: q,\r\n        rowsPerPage: filters.rowPerPage,\r\n        page: filters.page,\r\n        count: total,\r\n        onTableChange: (action, tableState) => {\r\n            switch (action) {\r\n                case 'search':\r\n                    onSearch(tableState.searchText);\r\n                    break;\r\n                case 'changePage':\r\n                    setFilters({...filters, page: tableState.page});\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        },\r\n        customSearchRender: (searchText, handleSearch, hideSearch, options) => {\r\n            return (\r\n                <CustomSearchRender\r\n                    searchText={searchText}\r\n                    onSearch={handleSearch}\r\n                    onHide={hideSearch}\r\n                    options={options}\r\n                    loader={false}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/*Tabla*/}\r\n            <WithLoader loader={loader}>\r\n                <MUIDataTable\r\n                    title={ (userId || personId) ? `HISTORIAL DE CRÉDITOS` : 'CRÉDITOS'}\r\n                    data={credits}\r\n                    columns={columns} options={options} />\r\n            </WithLoader>\r\n\r\n            <DlgListCredit ref={dialog} credit={credit}/>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nTableListCredit.propTypes = {\r\n    personId: PropTypes.string,\r\n    userId: PropTypes.number,\r\n    searchable: PropTypes.bool,\r\n};\r\n\r\nTableListCredit.defaultProps = {\r\n    personId: null,\r\n    userId: null,\r\n    searchable: true\r\n};\r\n\r\nexport default TableListCredit;\r\n","import React from 'react';\r\nimport Master from \"../Master\";\r\n\r\nimport TableListCredit from \"./_table/TableListCredit\";\r\n\r\nconst ListCredit = () => {\r\n    return (\r\n        <Master>\r\n            {/*Tabla*/}\r\n            <TableListCredit />\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default ListCredit;\r\n","import React from 'react';\r\nimport {Grid, Icon} from \"@material-ui/core\";\r\n\r\nconst BoxInfoCredit = ({info, text, icon, color, md=2}) => {\r\n    return (\r\n        <Grid item xs={6} sm={4} md={md}>\r\n            <div className={`box-info  ${(color) ? color.toLowerCase() : ''}`} style={{margin: '0 .1rem .2rem .1rem', borderRadius: 0}}>\r\n                {!icon ? <Icon>today</Icon> : <Icon>{icon}</Icon>}\r\n\r\n                <h3>{info}</h3>\r\n                <p>{text}</p>\r\n            </div>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default BoxInfoCredit;\r\n","import React from 'react';\r\nimport {Alert} from \"@material-ui/lab\";\r\n\r\nconst StatusCredit = ({status, description}) => {\r\n\r\n\r\n    if (status === 0) {\r\n        return (\r\n            <Alert severity=\"error\">Este crédito fué anulado. Motivo: {description}</Alert>\r\n        );\r\n    }\r\n\r\n    if (status === 1) {\r\n        return (\r\n            <Alert severity=\"info\">Crédito actualmente activo</Alert>\r\n        );\r\n    }\r\n\r\n    if (status === 2) {\r\n        return (\r\n            <Alert severity=\"success\">Crédito finalizado</Alert>\r\n        );\r\n    }\r\n\r\n    if (!status)\r\n        return (<></>);\r\n};\r\n\r\nexport default StatusCredit;\r\n","import React from 'react';\r\nimport {Paper, Grid, TextField} from \"@material-ui/core\";\r\n\r\nconst PayCobroCredit = ({plazo, cobro, description}) => {\r\n    return (\r\n        <Paper style={{padding: '1rem', borderRadius: 0}}>\r\n            <div className={'title-muted'}>Datos de pagos y cobros</div>\r\n            <Grid container style={{marginTop: '1rem'}} spacing={1}>\r\n                <Grid item xs={6}>\r\n                    <TextField readOnly label={'Plazo'}\r\n                               value={ plazo ? plazo: 'Desconocido'}/>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField readOnly label={'Periodo de Cobro'} value={ cobro ? cobro: 'Desconocido'} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField readOnly label={'Detalle'} multiline value={ description ? description: 'Ninguna'} fullWidth/>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default PayCobroCredit;\r\n","import React from 'react';\r\nimport {Grid, Paper, TextField} from \"@material-ui/core\";\r\n\r\nconst ClientDataCredit = ({name, surname, address, clientId}) => {\r\n\r\n    const getName = () => {\r\n        if (!name && !surname) return 'No especifica';\r\n        if (name && !surname) return name.toUpperCase();\r\n        if (name && surname) return `${name.toUpperCase()} ${surname.toUpperCase()}`;\r\n        return 'No especifica';\r\n    };\r\n\r\n    return (\r\n        <Paper className={'p-1'} style={{borderRadius: 0}}>\r\n            <div className={'title-muted'}>Datos del Cliente</div>\r\n            <Grid container className={'mt-1'} spacing={1}>\r\n                <Grid item xs={6}>\r\n                    <TextField readOnly label={'Nombres'} multiline={true} value={getName()} fullWidth />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField readOnly label={'Dirección'} multiline={true} value={address ? address : 'Ninguna'} fullWidth />\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default ClientDataCredit;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`wrapped-tabpanel-${index}`}\r\n            aria-labelledby={`wrapped-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <div style={{width: '100%'}}>{children}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default TabPanel;\r\n","import React from 'react';\r\nimport {Button, Dialog, DialogActions, DialogContent, useMediaQuery, useTheme} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nimport {asset} from \"../../../config/config\";\r\n\r\nconst DlgViewImg = ({isOpen, onClose, img, description, title}) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            open={isOpen}\r\n            maxWidth={'md'}\r\n            onClose={() => onClose()}\r\n            aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogContent className={'map-dialog'}>\r\n                <div className={'dialog-map-header'}>\r\n                    <h2>{title}</h2>\r\n                    {\r\n                        description && <small className={'text-muted'}>{description}</small>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <img src={asset(img)} alt={img} width={'100%'}/>\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button autoFocus onClick={() => onClose()} color=\"primary\">\r\n                    OK\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nDlgViewImg.propTypes = {\r\n    img: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func,\r\n    title: PropTypes.string\r\n};\r\n\r\n\r\nDlgViewImg.defaultProps = {\r\n    img: null,\r\n    isOpen: false,\r\n    description: '',\r\n    title: 'Ver Imagen'\r\n};\r\n\r\nexport default DlgViewImg;\r\n","import React, {useState} from 'react';\r\nimport {Button, IconButton, Tooltip} from \"@material-ui/core\";\r\nimport {Photo} from \"@material-ui/icons\";\r\nimport PropTypes from 'prop-types';\r\nimport DlgViewImg from \"../_modals/DlgViewImg\";\r\n\r\nconst BtnShowImg = ({img, title, iconButton}) => {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const openDialogImg = () => {\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n                {\r\n                    iconButton &&\r\n                    <Tooltip title={title}>\r\n                        <IconButton onClick={() => openDialogImg()}\r\n                                                 aria-label=\"Detalle\">\r\n                            <Photo/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n\r\n                { !iconButton &&\r\n                    <Button\r\n                        onClick={() => openDialogImg()}\r\n                        variant=\"text\"\r\n                        size={'small'}\r\n                        color=\"default\"\r\n                        startIcon={<Photo/>}\r\n                    >{title}</Button>\r\n                }\r\n\r\n\r\n            <DlgViewImg img={img}\r\n                        title={title}\r\n                        isOpen={openDialog}\r\n                        onClose={() => setOpenDialog(false)} />\r\n        </>\r\n    );\r\n};\r\n\r\nBtnShowImg.propTypes = {\r\n    img: PropTypes.string.isRequired,\r\n    title: PropTypes.string,\r\n    iconButton: PropTypes.bool,\r\n};\r\n\r\nBtnShowImg.defaultProps = {\r\n    title: 'Ver Imágen',\r\n    iconButton: false\r\n};\r\n\r\nexport default BtnShowImg;\r\n","import React from 'react';\r\nimport {makeStyles, withStyles, Table, TableRow, TableCell, TableContainer, TableBody} from \"@material-ui/core\";\r\nimport {AppBar, Tabs, Tab} from '@material-ui/core';\r\nimport TabPanel from \"../../../_partials/TabPanel\";\r\nimport BtnShowImg from \"../../../_partials/_buttons/BtnShowImg\";\r\n\r\nconst RefPrendaCredit = ({ref_detail, ref_img, prenda}) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('one');\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" className={classes.root} elevation={0}>\r\n                <StyledTabs value={value} onChange={handleChange}>\r\n                    <StyledTab value=\"one\" label={`Referencias (${ref_detail ? 1: 0})`} {...a11yProps('one')} />\r\n                    <StyledTab value=\"two\" label={ `Prendas (${prenda ? prenda.length : 0})`} {...a11yProps('two')} />\r\n                </StyledTabs>\r\n\r\n                {/*REFERENCIAS*/}\r\n                <TabPanel value={value} index={'one'}>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableBody>\r\n                                {\r\n                                    (ref_detail || ref_img ) &&\r\n                                    <TableRow>\r\n                                        <TableCell width={'30%'}>\r\n                                            { ref_img ? <BtnShowImg img={ref_img} title={'Ver Ref.'} />   : ''}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            { ref_detail ? ref_detail : 'No hay referencia'}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                }\r\n                                {\r\n                                    (!ref_detail && !ref_img) &&\r\n                                    <TableRow>\r\n                                        <TableCell colSpan={2}>\r\n                                            <div className={'text-muted text-center pt-1'}>No existen referencias</div>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </TabPanel>\r\n\r\n                {/*PRENDAS*/}\r\n                <TabPanel value={value} index={'two'}>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableBody>\r\n                            {\r\n                                prenda && prenda.map(p => (\r\n                                    <TableRow key={p.id}>\r\n                                        <TableCell width={'30%'}>\r\n                                            <BtnShowImg img={p.img} title={'Ver Prenda'}/>\r\n                                        </TableCell>\r\n                                        <TableCell>{p.detail}</TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                            {\r\n                                prenda.length === 0 &&\r\n                                <TableRow>\r\n                                    <TableCell colSpan={2} >\r\n                                        <div className={'text-muted text-center pt-1'}>No existen prendas</div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </TabPanel>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst a11yProps = (index) => {\r\n    return {\r\n        id: `wrapped-tab-${index}`,\r\n        'aria-controls': `wrapped-tabpanel-${index}`,\r\n    };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: 'black'\r\n    },\r\n}));\r\nconst StyledTab = withStyles(theme => ({\r\n    root: {\r\n        textTransform: 'none',\r\n        color: 'black',\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        fontSize: theme.typography.pxToRem(15),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}))(props => <Tab disableRipple {...props} />);\r\nconst StyledTabs = withStyles({\r\n    root: {\r\n        backgroundColor: '#fafafa'\r\n    }\r\n})(props => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\r\n\r\n\r\nRefPrendaCredit.defaultProps = {\r\n    prenda: []\r\n};\r\n\r\nexport default RefPrendaCredit;\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {Button, Dialog, DialogActions, DialogContent, useMediaQuery, useTheme} from \"@material-ui/core\";\r\nimport MapViewLoc from \"../../maps/MapViewLoc\";\r\n\r\nconst DlgViewLoc = ({isOpen, title, lon, lat, onClose, description}) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    return (\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            open={isOpen}\r\n            maxWidth={'md'}\r\n            onClose={() => onClose()}\r\n            aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogContent className={'map-dialog'}>\r\n                <div className={'dialog-map-header'}>\r\n                    <h2>{title}</h2>\r\n                    <small className={'text-muted'}>{description}</small>\r\n                </div>\r\n                <MapViewLoc lon={lon} lat={lat} title={title} description={description} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button autoFocus onClick={() => onClose()} color=\"primary\">\r\n                    OK\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nDlgViewLoc.propTypes = {\r\n    onClose: PropTypes.func,\r\n    isOpen: PropTypes.bool,\r\n    lon: PropTypes.number.isRequired,\r\n    lat: PropTypes.number.isRequired,\r\n    title: PropTypes.string\r\n};\r\n\r\nDlgViewLoc.defaultProps = {\r\n    isOpen: false,\r\n    title: 'Ver Ubicación',\r\n    description: ''\r\n};\r\n\r\nexport default DlgViewLoc;\r\n","import React, {useState} from 'react';\r\nimport {Button, IconButton, Tooltip} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nimport {NotListedLocation} from \"@material-ui/icons\";\r\nimport DlgViewLoc from \"../_modals/DlgViewLoc\";\r\n\r\nconst BtnShowLoc = ({lat, lon, title, description, iconButton}) => {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const openDialogImg = () => {\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                iconButton &&\r\n                <Tooltip title={title}>\r\n                    <IconButton onClick={() => openDialogImg()}\r\n                                disabled={(!lat || !lon)}\r\n                                aria-label=\"Ver ubicación\">\r\n                        <NotListedLocation />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            }\r\n\r\n            { !iconButton &&\r\n            <Button\r\n                disabled={(!lat || !lon)}\r\n                onClick={() => openDialogImg()}\r\n                variant=\"text\"\r\n                size={'small'}\r\n                color=\"default\"\r\n                startIcon={<NotListedLocation />}\r\n            >{title}</Button>\r\n            }\r\n\r\n            <DlgViewLoc lat={parseFloat(lat)} lon={parseFloat(lon)}\r\n                        description={description}\r\n                        isOpen={openDialog} onClose={() => setOpenDialog(false)}/>\r\n        </>\r\n    );\r\n};\r\n\r\nBtnShowLoc.propTypes = {\r\n    lon: PropTypes.string.isRequired,\r\n    lat: PropTypes.string.isRequired,\r\n    title: PropTypes.string\r\n};\r\n\r\nBtnShowLoc.defaultProps = {\r\n    title: 'Ver Ubicación',\r\n    description: ''\r\n};\r\n\r\nexport default BtnShowLoc;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Chip, Grid, TextField} from \"@material-ui/core\";\r\nimport WithLoader from \"../../_partials/hoc/WithLoader\";\r\nimport useGet from \"../../../utils/useGet\";\r\n\r\nconst EmployByUser = ({userId}) => {\r\n\r\n    const employ = useGet(`/employ/user/${userId}`);\r\n\r\n    return (\r\n        <WithLoader loader={employ.loader} elevation={0}>\r\n            <Grid container spacing={2}>\r\n                <Grid item sm={6}>\r\n                    <TextField readOnly label={'Nombre'} inputProps={{ className: 'text-upper'}}\r\n                               value={`${employ.data.name} `}\r\n                               fullWidth />\r\n                </Grid>\r\n                <Grid item sm={6}>\r\n                    <TextField readOnly label={'Usuario'}\r\n                               value={employ.data.username}\r\n                               fullWidth />\r\n                </Grid>\r\n\r\n                <Grid item sm={6}>\r\n                    <TextField readOnly label={'Email'}\r\n                               value={employ.data.email}\r\n                               fullWidth />\r\n                </Grid>\r\n\r\n                <Grid item sm={6}>\r\n                    <TextField readOnly label={'Teléfono'}\r\n                               value={employ.data.phones}\r\n                               fullWidth />\r\n                </Grid>\r\n\r\n                <Grid item sm={6}>\r\n                    <TextField readOnly label={'Dirección'}\r\n                               value={employ.data.address}\r\n                               multiline={true}\r\n                               fullWidth />\r\n                </Grid>\r\n\r\n                <Grid item sm={6} className={'d-flex center'}>\r\n                    <b className={'mr-1'}>Estado:</b>\r\n                    {\r\n                        employ.data.status === 1 &&  <Chip label={\"Activo\"} className={'bg-green'} />\r\n                    }\r\n                    {\r\n                        employ.data.status === 0 &&  <Chip label={\"Inactivo\"} className={'bg-red'} />\r\n                    }\r\n                    {\r\n                        employ.data.status === -1 &&  <Chip label={\"Eliminado\"} className={'bg-red'} />\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </WithLoader>\r\n    );\r\n};\r\n\r\nEmployByUser.propTypes = {\r\n    userId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default EmployByUser;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Dialog, DialogActions, DialogContent, useMediaQuery, useTheme} from \"@material-ui/core\";\r\nimport EmployByUser from \"../_partials/EmployByUser\";\r\n\r\nconst DlgViewEmployUser = ({userId, title, open, onClose}) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    return (\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            open={open}\r\n            maxWidth={'md'}\r\n            onClose={() => onClose()}\r\n            aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogContent className={'map-dialog'}>\r\n                <div className={'dialog-map-header'}>\r\n                    <h2>{title}</h2>\r\n                </div>\r\n                {\r\n                    userId &&  <EmployByUser userId={userId} />\r\n                }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button autoFocus onClick={() => onClose()} color=\"primary\">\r\n                    OK\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nDlgViewEmployUser.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    userId: PropTypes.number,\r\n    title: PropTypes.string\r\n};\r\n\r\nDlgViewEmployUser.defaultProps = {\r\n    title: 'Ver Empleado'\r\n};\r\n\r\nexport default DlgViewEmployUser;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Icon, IconButton, Tooltip} from \"@material-ui/core\";\r\nimport DlgViewEmployUser from \"../_dialog/DlgViewEmployUser\";\r\n\r\nconst BtnPreviewEmploy = ({userId, title, iconButton}) => {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const show = () => {\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                iconButton &&\r\n                <Tooltip title={title}>\r\n                    <IconButton onClick={() => show()}\r\n                                disabled={(!userId)}\r\n                                aria-label={title}>\r\n                        <Icon>person</Icon>\r\n                    </IconButton>\r\n                </Tooltip>\r\n            }\r\n\r\n            { !iconButton &&\r\n            <Button\r\n                disabled={(!userId)}\r\n                onClick={() => show()}\r\n                variant=\"text\"\r\n                size={'small'}\r\n                color=\"default\"\r\n                startIcon={<Icon>person</Icon>}\r\n            >{title}</Button>\r\n            }\r\n\r\n            <DlgViewEmployUser userId={userId}\r\n                               onClose={() => setOpenDialog(false)}\r\n                               open={openDialog}/>\r\n        </>\r\n    );\r\n};\r\n\r\nBtnPreviewEmploy.propTypes = {\r\n    userId: PropTypes.number.isRequired,\r\n    iconButton: PropTypes.bool,\r\n    title: PropTypes.string\r\n};\r\n\r\nBtnPreviewEmploy.defaultProps = {\r\n    iconButton: false,\r\n    title: 'Ver empleado'\r\n};\r\n\r\nexport default BtnPreviewEmploy;\r\n","import React from 'react';\r\nimport {Grid, Paper, TextField} from \"@material-ui/core\";\r\nimport {toDate, toDateHour} from \"../../../utils/utils\";\r\nimport RefPrendaCredit from \"./_tabs/RefPrendaCredit\";\r\nimport BtnShowLoc from \"../../_partials/_buttons/BtnShowLoc\";\r\nimport BtnPreviewEmploy from \"../../employ/_buttons/BtnPreviewEmploy\";\r\n\r\nconst DataCredit = ({credit}) => {\r\n    return (\r\n        <>\r\n            <Paper style={{borderRadius: 0}} className={'p-1'}>\r\n                <div className={'title-muted'}>Datos del crédito</div>\r\n                <Grid container style={{marginTop: '1rem'}} spacing={1}>\r\n                    <Grid item xs={6}>\r\n                        <TextField readOnly label={'Fecha inicio'} fullWidth\r\n                                   value={ credit.f_inicio ? toDate(credit.f_inicio) : 'dd/mm/yyyy'}/>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField readOnly label={'Fecha fin'}\r\n                                    fullWidth\r\n                                   value={ credit.f_fin ? toDate(credit.f_fin): 'dd/mm/yyyy'} />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField readOnly label={'Fecha de Registro'} value={ credit.created_at ? toDateHour(credit.created_at): 'dd/mm/yyyy'} fullWidth/>\r\n                    </Grid>\r\n                    <Grid item xs={6} className={'d-flex center'} >\r\n                        <TextField readOnly value={credit.ruta ? credit.ruta: 'Desconocida'} label={'Ruta/Zona'} fullWidth/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n\r\n                        {\r\n                            credit.geo_lat && credit.geo_lon && <BtnShowLoc lat={credit.geo_lat}\r\n                                                                            lon={credit.geo_lon} description={credit.address} />\r\n                        }\r\n                        {\r\n                            credit.user_id && <BtnPreviewEmploy userId={credit.user_id} title={'Empleado'} />\r\n                        }\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            <Paper>\r\n                {/*Prendas y Referencias*/}\r\n                <RefPrendaCredit ref_detail={credit.ref_detail}\r\n                                 ref_img={credit.ref_img} prenda={credit.prenda}/>\r\n            </Paper>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DataCredit;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DlgInput from \"../../_partials/_modals/DlgInput\";\r\nimport {toast} from \"react-toastify\";\r\nimport Axios from \"axios\";\r\nimport {processErrors} from \"../../../utils/utils\";\r\n\r\n\r\nconst DlgCancelPayment = ({open, onClose, selectPay, success}) => {\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const confirmCancel = (motivo) => {\r\n        if (!selectPay) {\r\n            toast.warn('Vuelva a seleccionar el pago que desea anular');\r\n            return;\r\n        }\r\n\r\n        if (!motivo) {\r\n            toast.warn('Es necesario especificar un motivo de anulación');\r\n            return;\r\n        }\r\n        setLoader(true);\r\n        Axios.delete(`/payment/${selectPay}`, {data: {description: motivo}})\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    toast.success('El pago fue anulado con éxito');\r\n                    success(selectPay, 1);\r\n                    onClose();\r\n                }\r\n            }).catch(err => {\r\n            toast.error(processErrors(err));\r\n        }).finally(() => setLoader(false));\r\n    };\r\n\r\n    return (\r\n        <DlgInput open={open}\r\n                  title={`Anular pago COD-${selectPay}`}\r\n                  desc={`¿Por qué deseas anular este pago COD-${selectPay}?`}\r\n                  inputLabel={'Motivo'}\r\n                  loader={loader}\r\n                  onConfirm={(v) => confirmCancel(v)}\r\n                  onClose={onClose}/>\r\n    );\r\n};\r\n\r\nDlgCancelPayment.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    selectPay: PropTypes.number,\r\n    success: PropTypes.func\r\n};\r\nDlgCancelPayment.defaultProps = {\r\n\r\n};\r\n\r\nexport default DlgCancelPayment;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DlgConfirm from \"../../_partials/_modals/DlgConfirm\";\r\nimport useHttp from \"../../../utils/useHttp\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst DlgPayOrMora = ({open, onClose, mora, selectPay, success}) => {\r\n    const processPay = useHttp('put');\r\n\r\n    // Marcar un pago como cobrado o como mora\r\n    const confirmPayOrMora = () => {\r\n\r\n        if (!selectPay) {\r\n            toast.warn('Seleccione el pago a procesar');\r\n            return;\r\n        }\r\n\r\n        let status = 2;\r\n        if (mora)\r\n            status = -1;\r\n        processPay.request(`/payment/${selectPay}`, {status}).then(res => {\r\n            if (res.ok) {\r\n                toast.success(`Pago marcado como ${mora ? 'EN MORATORIA' : 'COBRADO'}`);\r\n                success(selectPay, status);\r\n                onClose();\r\n            }\r\n        }).catch(err => {\r\n            toast.error(err);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                selectPay &&\r\n                <DlgConfirm onConfirm={() => confirmPayOrMora()}\r\n                            title={`${mora ? 'PONER EN MORA | ' : 'COBRAR | '} COD-${selectPay}`}\r\n                            desc={`¿Estas seguro que deseas poner este pago en estado ${mora ? 'de MORA': 'COBRADO'}?`}\r\n                            open={open}\r\n                            loader={processPay.loader}\r\n                            onClose={onClose} />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nDlgPayOrMora.propTypes = {\r\n    mora: PropTypes.bool.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    selectPay: PropTypes.number,\r\n    success: PropTypes.func\r\n};\r\n\r\nDlgPayOrMora.defaultProps = {\r\n    mora: false\r\n};\r\n\r\nexport default DlgPayOrMora;\r\n","import React, {useState} from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport {Chip, Button, Tooltip, IconButton, Icon} from \"@material-ui/core\";\r\nimport useGet from \"../../../utils/useGet\";\r\nimport WithLoader from \"../../_partials/hoc/WithLoader\";\r\nimport {money, tableOptions} from \"../../../config/config\";\r\nimport {toDate} from \"../../../utils/utils\";\r\nimport DlgViewEmployUser from \"../../employ/_dialog/DlgViewEmployUser\";\r\nimport DlgCancelPayment from \"../_dialogs/DlgCancelPayment\";\r\nimport DlgPayOrMora from \"../_dialogs/DlgPayOrMora\";\r\n\r\nconst ViewPayments = ({creditId}) => {\r\n    const pay = useGet(`/payment/only/${creditId}`);\r\n\r\n    // diálogos\r\n    const [open, setOpen] = useState(false);\r\n    const [openInput, setOpenInput] = useState(false);\r\n    const [openConfirm, setOpenConfirm] = useState(false);\r\n    const [mora, setMora] = useState(false);\r\n\r\n    // data seleccionada\r\n    const [selectUser, setSelectUser] = useState(null);\r\n    const [selectPay, setSelectPay] = useState(null);\r\n\r\n    // columnas de la tabla\r\n    const columns = [\r\n        {\r\n            name: 'total', label: 'TOTAL',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return <b>{money(value)}</b>;}}\r\n        },\r\n        {\r\n            name: 'date', label: 'F. PAGO',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return toDate(value);}}\r\n        },\r\n        {\r\n            name: 'description', label: 'DETALLE',\r\n            options: {filter: false}\r\n        },\r\n        {\r\n            name: 'status', label: 'ESTADO', options: {\r\n                filter: true,\r\n                customFilterListOptions: {render: v => `Estado: ${v}`},\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <div>\r\n                            {value === 2 &&\r\n                            <>\r\n                                <Chip\r\n                                    size={'small'}\r\n                                    label={\"COBRADO\"}\r\n                                    className={'bg-green'}/>\r\n                            </>\r\n                            }\r\n                            {value === 1 &&\r\n                            <>\r\n                                <Chip\r\n                                    size={'small'}\r\n                                    label=\"PENDIENTE\"\r\n                                    className={'bg-primary'}/>\r\n                            </>\r\n                            }\r\n                            {value === -1 &&\r\n                            <>\r\n                                <Chip\r\n                                    size={'small'}\r\n                                    label=\"EN MORA\"\r\n                                    className={'bg-red'}/>\r\n                            </>\r\n                            }\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: 'date_payment', label: 'F. COBRO',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return toDate(value);}}\r\n        },\r\n        {\r\n            name: 'mora', label: 'MORA',\r\n            options: {\r\n                customBodyRender: (value) => {return (value ? 'Si': 'No');}}\r\n        },\r\n        {\r\n            name: 'user_id', label: 'EMPLEADO',\r\n            options: {\r\n                filter: false,\r\n                customBodyRender: (value) => {return (\r\n                    <>\r\n                        { value && <Button size={'small'} onClick={() => showUser(value)}>Ver</Button> }\r\n                        { !value && <Button size={'small'} disabled>Ver</Button>}\r\n                    </>\r\n                );}\r\n            }\r\n        },\r\n        {\r\n            name: \"id\",\r\n            label: ' ',\r\n            options: {\r\n                customBodyRender: (value, tableMeta) => {\r\n                    // status[-1: 'MORA', 1: 'PENDIENTE', 2: 'PROCESADO']\r\n                    const status = tableMeta.rowData[3];\r\n                    return <>\r\n                        {\r\n                            status === 1\r\n                            &&\r\n\r\n                                <Tooltip title={'Marcar pago como en MORA'}>\r\n                                    <IconButton\r\n                                        onClick={() => setPay(value, true, true)}\r\n                                        size={\"small\"}\r\n                                        aria-label=\"Poner en moratoria el pago\">\r\n                                        <MoneyOffIcon/>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                        }\r\n                        {\r\n                            (status === 1 || status === -1) &&\r\n                            <Tooltip title={'Marcar pago como COBRADO'}>\r\n                                <IconButton\r\n                                    onClick={() => setPay(value, true, false)}\r\n                                    size={\"small\"}\r\n                                    aria-label=\"Cobrar este pago\">\r\n                                    <MonetizationOnIcon/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        }\r\n                        {\r\n                            status === 2\r\n                            &&\r\n                            <Tooltip title={'Anular'}>\r\n                                <IconButton\r\n                                    onClick={() => setPay(value)}\r\n                                    size={\"small\"}\r\n                                    aria-label=\"Anular Pago\">\r\n                                    <Icon>cancel</Icon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        }\r\n                    </>;\r\n                }\r\n            }\r\n        },\r\n    ];\r\n\r\n    // mostrar datos del empleado\r\n    const showUser = (userId) => {\r\n        setSelectUser(userId);\r\n        setOpen(true);\r\n    };\r\n\r\n    // abrir el dialogo de ingreso de motivo\r\n    const setPay = (paymentId, confirm = false, mora = false) => {\r\n        if (confirm) {\r\n            setOpenConfirm(true);\r\n            setMora(mora);\r\n        }\r\n        else {\r\n            setOpenInput(true);\r\n        }\r\n        setSelectPay(paymentId);\r\n    };\r\n\r\n    const options = {\r\n        ...tableOptions,\r\n        electableRowsHeader: false,\r\n        filter: false,\r\n        search: false,\r\n        sort: false,\r\n        download: false,\r\n        print: false,\r\n        viewColumns: false,\r\n        selectableRows: 'none',\r\n        setTableProps: () => {\r\n            return {\r\n                padding: \"default\" ,\r\n                size: \"small\"\r\n            };\r\n        }\r\n    };\r\n\r\n    return (\r\n        <WithLoader loader={pay.loader} elevation={0} text={''}>\r\n            <MUIDataTable\r\n                title={'Pagos'}\r\n                data={pay.data.pays}\r\n                columns={columns} options={options} />\r\n            {\r\n                selectUser && <DlgViewEmployUser userId={selectUser}\r\n                                                 onClose={() => setOpen(false)} open={open} />\r\n            }\r\n\r\n\r\n            <DlgCancelPayment selectPay={selectPay}\r\n                               open={openInput}\r\n                               onClose={() => setOpenInput(false)}/>\r\n\r\n            <DlgPayOrMora selectPay={selectPay}\r\n                          mora={mora}\r\n                          open={openConfirm}\r\n                          onClose={() => setOpenConfirm(false)}/>\r\n        </WithLoader>\r\n    );\r\n};\r\n\r\nexport default ViewPayments;\r\n\r\n","import React from 'react';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\n\r\nconst SKShowCredit = ({children, loader}) => {\r\n\r\n\r\n    if (loader) {\r\n        return (\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} md={12}>\r\n                    <Grid container>\r\n                        <Grid item xs={6} sm={4} md={3}><Skeleton style={{margin: '0 .1rem .2rem .1rem', borderRadius: 0}} variant=\"rect\" height={79} /></Grid>\r\n                        <Grid item xs={6} sm={4} md={2}><Skeleton style={{margin: '0 .1rem .2rem .1rem', borderRadius: 0}} variant=\"rect\" height={79} /></Grid>\r\n                        <Grid item xs={6} sm={4} md={3}><Skeleton style={{margin: '0 .1rem .2rem .1rem', borderRadius: 0}} variant=\"rect\" height={79} /></Grid>\r\n                        <Grid item xs={6} sm={4} md={2}><Skeleton style={{margin: '0 .1rem .2rem .1rem', borderRadius: 0}} variant=\"rect\" height={79} /></Grid>\r\n                        <Grid item xs={6} sm={4} md={2}><Skeleton style={{margin: '0 .1rem .2rem .1rem', borderRadius: 0}} variant=\"rect\" height={79} /></Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Skeleton variant=\"rect\" height={300} />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Skeleton variant=\"rect\" height={300} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton variant=\"rect\" height={100} />\r\n                </Grid>\r\n            </Grid>\r\n\r\n        );\r\n    }\r\n\r\n    else return children;\r\n};\r\n\r\nSKShowCredit.defaultProps = {\r\n    loader: false\r\n};\r\n\r\nexport default SKShowCredit;\r\n","import React from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport useGet from \"../../utils/useGet\";\r\nimport Master from \"../Master\";\r\nimport BoxInfoCredit from \"./_partials/BoxInfoCredit\";\r\nimport StatusCredit from \"./_partials/StatusCredit\";\r\nimport {money} from \"../../config/config\";\r\nimport PayCobroCredit from \"./_partials/PayCobroCredit\";\r\nimport ClientDataCredit from \"./_partials/ClientDataCredit\";\r\nimport DataCredit from \"./_partials/DataCredit\";\r\nimport ViewPayments from \"../payments/_partials/ViewParyments\";\r\nimport SKShowCredit from \"./_skeleton/SkShowCredit\";\r\n\r\nconst ShowCredit = ({match}) => {\r\n    const id = match.params.id;\r\n    const credit = useGet(`/credit/${id}`);\r\n\r\n    return (\r\n        <Master>\r\n            <SKShowCredit loader={credit.loader}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} md={12}>\r\n                    <Grid container>\r\n                        <BoxInfoCredit md={3} color={'primary'} icon={'credit_card'}\r\n                                       info={`${money(credit.data.monto)}`} text={'MONTO INICIAL'} />\r\n\r\n                        <BoxInfoCredit color={'deal'} icon={'money'}\r\n                                       info={`% ${credit.data.utilidad}`} text={'UTILIDAD'} />\r\n\r\n                        <BoxInfoCredit md={3} color={'cyan'} icon={'local_atm'}\r\n                                       info={`${money(credit.data.total_utilidad)}`} text={'SUBT. UTILIDAD'} />\r\n\r\n                        <BoxInfoCredit color={'purple'} icon={'attach_money'}\r\n                                       info={`${money(credit.data.total)}`} text={'TOTAL'} />\r\n\r\n                        <BoxInfoCredit  color={'red'} icon={'exposure_plus_1'}\r\n                                  info={`${credit.data.n_pagos}`} text={'# DE PAGOS'} />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <StatusCredit description={credit.data.description} status={credit.data.status} />\r\n                            {/*Datos del Pagos*/}\r\n                            <PayCobroCredit description={credit.data.description} plazo={credit.data.plazo} cobro={credit.data.cobro} />\r\n                            {/*Datos del cliente*/}\r\n                            <ClientDataCredit name={credit.data.client_name}\r\n                                              surname={credit.data.client_surname}\r\n                                              address={credit.data.client_address}\r\n                                              clientId={credit.data.person_id}/>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            {/*Datos del crédito*/}\r\n                            <DataCredit credit={credit.data} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    {\r\n                        credit.data.id && credit.data.status !== 0 && <ViewPayments creditId={credit.data.id} />\r\n                    }\r\n                </Grid>\r\n\r\n            </Grid>\r\n            </SKShowCredit>\r\n        </Master>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\nexport default ShowCredit;\r\n\r\n","import React, {useState} from 'react';\r\nimport {\r\n    Button, Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    Container,\r\n    Grid,\r\n    DialogTitle,\r\n    useMediaQuery,\r\n    useTheme, InputLabel, Input, InputAdornment, IconButton, FormControl\r\n} from \"@material-ui/core\";\r\nimport {VisibilityOff, Visibility} from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\nimport useHttp from \"../../../utils/useHttp\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst DlgPassword = ({title, open, onClose}) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const [values, setValues] = useState({showPassword: false});\r\n    const [data, setData] = useState({\r\n        password: '',\r\n        password_now: ''\r\n    });\r\n\r\n    const password = useHttp('post');\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        setData({\r\n            ...data,\r\n            [name]: value});\r\n    };\r\n\r\n    const changePw = () => {\r\n        if (!data.password || !data.password_now) {\r\n            toast.error('Complete el formulario');\r\n            return;\r\n        }\r\n\r\n        password.request(`/user/password`, data).then(res => {\r\n            if (res.ok) {\r\n                toast.success('Contraseña cambiada con éxito');\r\n                onClose();\r\n            }\r\n        }).catch(err => toast.error(err));\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open}\r\n                onClose={onClose} aria-labelledby=\"form-dialog-title\" fullScreen={fullScreen}>\r\n            <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n            <DialogContent>\r\n                <Container>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"standard-adornment-password\">Contraseña actual</InputLabel>\r\n                                <Input\r\n                                    id=\"standard-adornment-password\"\r\n                                    type={values.showPassword ? 'text' : 'password'}\r\n                                    value={data.password_now !== null ? data.password_now : ''}\r\n                                    name={'password_now'}\r\n                                    onChange={e => onChange(e)}\r\n                                    fullWidth\r\n                                    required\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                onClick={handleClickShowPassword}>\r\n                                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"standard-adornment-password\">Contraseña nueva</InputLabel>\r\n                                <Input\r\n                                    id=\"standard-adornment-password-2\"\r\n                                    type={values.showPassword ? 'text' : 'password'}\r\n                                    value={data.password !== null ? data.password : ''}\r\n                                    name={'password'}\r\n                                    onChange={e => onChange(e)}\r\n                                    fullWidth\r\n                                    required\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                onClick={handleClickShowPassword}>\r\n                                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button color={'primary'}  onClick={onClose}>\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"secondary\" onClick={() => changePw()} disabled={password.loader}>\r\n                    {password.loader ? 'Espere...' :  'Aceptar'}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nDlgPassword.propTypes = {\r\n    title: PropTypes.string,\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool\r\n};\r\n\r\nDlgPassword.defaultProps = {\r\n    title: 'Cambiar contraseña'\r\n};\r\n\r\nexport default DlgPassword;\r\n","import React, {useState} from 'react';\r\nimport {Button} from \"@material-ui/core\";\r\nimport DlgPassword from \"../_dialog/DlgPassword\";\r\n\r\nconst BtnShowPasswordChange = () => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return (\r\n        <>\r\n        <Button onClick={() => setOpen(true)} className={'ml-1'}>\r\n          Cambiar contraseña\r\n        </Button>\r\n        <DlgPassword onClose={() => setOpen(false)} open={open}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BtnShowPasswordChange;\r\n","import React from 'react';\r\nimport Master from \"../Master\";\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport useGet from \"../../utils/useGet\";\r\nimport {Container, Divider, Icon, Paper} from \"@material-ui/core\";\r\nimport FrmClient from \"../client/_form/FrmClient\";\r\nimport BtnShowPasswordChange from \"./_buttons/BtnShowPasswordChange\";\r\n\r\nconst EditAuth = () => {\r\n\r\n    const user = useGet(`/user`);\r\n\r\n    return (\r\n        <>\r\n            <Master>\r\n                <WithLoader loader={user.loader}>\r\n                    <Container maxWidth='md' component={Paper} className='paper-content'>\r\n                        <div className='paper-header'>\r\n                            <h4> <Icon>person_edit</Icon> Mis Datos</h4>\r\n                            <Divider />\r\n                        </div>\r\n                        {\r\n                            user.data.person && <FrmClient method={'put'} url={`/client/${user.data.person.id}`}\r\n                                                           initialData={user.data.person}>\r\n                                <BtnShowPasswordChange />\r\n                            </FrmClient>\r\n                        }\r\n\r\n                    </Container>\r\n                </WithLoader>\r\n            </Master>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditAuth;\r\n","import React from 'react';\r\nimport TableListCredit from \"./_table/TableListCredit\";\r\nimport Master from \"../Master\";\r\nconst HistoryClientCredit = ({match}) => {\r\n    const id = match.params.id;\r\n    return (\r\n        <Master>\r\n            <TableListCredit personId={id} searchable={false} />\r\n        </Master>\r\n    );\r\n};\r\n\r\nexport default HistoryClientCredit;\r\n","import React, {Component} from 'react';\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete/Autocomplete\";\r\nimport {CircularProgress, TextField} from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SelectZone extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            zones: [],\r\n            loader: false,\r\n            open: false,\r\n            value: ''\r\n        }\r\n    }\r\n\r\n    getZones() {\r\n        this.setState({...this.state, open: true, loader: true});\r\n        if (this.state.zones.length <= 0) {\r\n            Axios.get('/route').then(res => {\r\n                if (res.ok) {\r\n                    this.setState({...this.state, zones: res.data})\r\n                }\r\n            }).finally(() => this.setState({loader: false}));\r\n        } else {\r\n            this.setState({loader: false});\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({...this.state, value:''});\r\n    }\r\n\r\n    selected(o, v) {\r\n        if(v) {\r\n            this.setState({...this.state, value: v});\r\n        } else {\r\n            this.setState({...this.state, value: ''});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Autocomplete\r\n                    id=\"zone_id\"\r\n                    open={this.state.open}\r\n                    onOpen={() => this.getZones()}\r\n                    onClose={() => this.setState({...this.state, open: false})}\r\n                    options={this.state.zones}\r\n                    loading={this.state.loader}\r\n                    onChange={(option, value) => this.props.onChange(value ? value.id : value)}\r\n                    loadingText={'Cargando zonas'}\r\n                    inputValue={this.state.value}\r\n                    onInputChange={(v,r) => this.selected(v, r)}\r\n                    getOptionLabel={option => option ? (option.name).toUpperCase() : this.state.value }\r\n\r\n                    renderInput={params => (\r\n                        <TextField\r\n                            {...params}\r\n                            required\r\n                            label=\"Zonas/Rutas\" variant=\"standard\" fullWidth\r\n                            InputProps={{\r\n                                ...params.InputProps,\r\n                                endAdornment: (\r\n                                    <React.Fragment>\r\n                                        {this.state.loader ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                        {params.InputProps.endAdornment}\r\n                                    </React.Fragment>\r\n                                ),\r\n                            }}/>\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSelectZone.propTypes = {\r\n    onChange: PropTypes.func\r\n};\r\n\r\nSelectZone.defaultProps = {\r\n};\r\n\r\nexport default SelectZone;\r\n","import React, {Component} from 'react';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete/Autocomplete\";\r\nimport {cobros} from \"../../../config/config\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass SelectCobro extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: ''\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({value: ''});\r\n    }\r\n\r\n    selected(e, v) {\r\n        if(v) {\r\n            this.setState({...this.state, value: v});\r\n        } else {\r\n            this.setState({...this.state, value: ''});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Autocomplete\r\n                    id=\"cobros\"\r\n                    options={cobros}\r\n                    onChange={(option, value) => this.props.onChange(value ? value.name: value)}\r\n                    onInputChange={(v, o) => this.selected(v, o)}\r\n                    inputValue={this.state.value}\r\n                    getOptionLabel={option => option ? (option.value).toUpperCase() : this.state.value.value }\r\n                    renderInput={params => (\r\n                        <TextField\r\n                            {...params}\r\n                            label=\"Recaudación\" variant=\"standard\" fullWidth />\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSelectCobro.propTypes = {\r\n    onChange: PropTypes.func\r\n};\r\n\r\nSelectCobro.defaultProps = {\r\n};\r\n\r\nexport default SelectCobro;\r\n","import React, {Component} from 'react';\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass SelectDate extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            date: props.initialDate\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({date: null});\r\n    };\r\n\r\n    onChangeDate (date) {\r\n        this.setState({date: date});\r\n        if (date) {\r\n            this.props.onChange(date.format('YYYY-MM-DD'), this.props.key);\r\n        } else {\r\n            this.props.onChange(null, this.props.key);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <KeyboardDatePicker\r\n                    disableToolbar={this.props.hideToolbar}\r\n                    variant=\"inline\"\r\n                    format=\"DD/MM/YYYY\"\r\n                    fullWidth\r\n                    autoOk={this.props.autoOk}\r\n                    id={this.props.key}\r\n                    value={this.state.date}\r\n                    label={this.props.label}\r\n                    onChange={(dateSelected) => this.onChangeDate(dateSelected)}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': this.props.label,\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSelectDate.propTypes = {\r\n    onChange: PropTypes.func,\r\n    key: PropTypes.string,\r\n    label: PropTypes.string,\r\n};\r\n\r\nSelectDate.defaultProps = {\r\n    key: 'date',\r\n    label: 'Seleccione fecha',\r\n    autoOk: true,\r\n    initialDate: null,\r\n    hideToolbar: false\r\n};\r\n\r\nexport default SelectDate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {IconButton, Tooltip, withStyles} from \"@material-ui/core\";\r\nimport {Cancel, Info, MonetizationOn, MoneyOff, Payment} from \"@material-ui/icons\";\r\nimport BtnShowLoc from \"../../_partials/_buttons/BtnShowLoc\";\r\nimport BtnShowImg from \"../../_partials/_buttons/BtnShowImg\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {CREDIT_SHOW, toName} from \"../../../config/urls\";\r\n\r\nconst BtnsPayOptions = ({pay, exec}) => {\r\n    const HtmlTooltip = withStyles((theme) => ({\r\n        tooltip: {\r\n            backgroundColor: '#f5f5f9',\r\n            color: 'rgba(0, 0, 0, 0.87)',\r\n            maxWidth: 220,\r\n            fontSize: theme.typography.pxToRem(12),\r\n            border: '1px solid #dadde9',\r\n        },\r\n    }))(Tooltip);\r\n    return (\r\n        <>\r\n            {/*Ver info de dirección y ubicación*/}\r\n            <HtmlTooltip\r\n                title={\r\n                    <>\r\n                        <b>Dirección</b>\r\n                        <p>{pay.address}{pay.ref_detail && <span>&nbsp;|&nbsp;{pay.ref_detail}</span>}</p>\r\n                        {\r\n                            pay.description &&\r\n                            <>\r\n                                <b>Descripción</b>\r\n                                <p>{pay.description}</p>\r\n                            </>\r\n                        }\r\n\r\n                    </>\r\n                }>\r\n                <IconButton><Info /></IconButton>\r\n            </HtmlTooltip>\r\n            {/*Mostrar Geolocalización*/}\r\n            <BtnShowLoc lon={pay.lon} lat={pay.lat} iconButton={true} />\r\n            {/*Ver Imagen de referencia*/\r\n                pay.ref_img && <BtnShowImg img={pay.ref_img}\r\n                                           iconButton\r\n                                           title={'Ver referencia'} />\r\n            }\r\n            {/*ver crédito*/}\r\n            <Tooltip title={'Ver Crédito'}>\r\n                <IconButton component={Link} to={toName(CREDIT_SHOW, {id: pay.credit_id})}>\r\n                    <MonetizationOn />\r\n                </IconButton>\r\n            </Tooltip>\r\n            {/*Marcar Como mora*/\r\n                pay.status !== 2 &&\r\n                <Tooltip title={'Marcar como Mora'}>\r\n                    <IconButton onClick={ () => exec('mora', {id: pay.id})}>\r\n                        <MoneyOff />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            }\r\n\r\n            {/*Pagar*/\r\n                pay.status !== 2 &&\r\n                <Tooltip title={'Marcar como pagado'}>\r\n                    <IconButton onClick={ () => exec('pay', {id: pay.id}) }>\r\n                        <Payment />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            }\r\n\r\n            {/*Anular*/\r\n                pay.status === 2 &&\r\n                <Tooltip title={'Anular Pago'}>\r\n                    <IconButton onClick={ () => exec('cancel', {id: pay.id}) }>\r\n                        <Cancel />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nBtnsPayOptions.propTypes = {\r\n    exec: PropTypes.func.isRequired,\r\n    pay: PropTypes.object\r\n};\r\n\r\nexport default BtnsPayOptions;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {money} from \"../../../config/config\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {CREDIT_BY_CLIENT, toName} from \"../../../config/urls\";\r\nimport BtnsPayOptions from \"./BtnsPayOptions\";\r\n\r\nconst PayItemCard = ({pay, exec}) => {\r\n\r\n    const color = (status) => {\r\n        switch (status) {\r\n            case 1: return 'pendiente';\r\n            case 2: return 'cobrado';\r\n            case -1: return 'mora';\r\n            default: return 'pendiente';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`pay-content ${color(pay.status)}`}>\r\n            <div className={'pay-header'}>\r\n                <div className={`dollar ${color(pay.status)}`}>{money(pay.total)}</div>\r\n                <small>Pago #{pay.number}</small>\r\n            </div>\r\n            <div className={'client'}>\r\n                <Link to={toName(CREDIT_BY_CLIENT, {id: pay.client_id})} className={'client'}>{pay.client_name} {pay.client_surname}</Link>\r\n                <small className={color(pay.status)}>{color(pay.status).toUpperCase()}</small>\r\n            </div>\r\n            <div className={'buttons'}>\r\n                <BtnsPayOptions exec={exec} pay={pay} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nPayItemCard.propTypes = {\r\n    exec: PropTypes.func\r\n};\r\nexport default PayItemCard;\r\n","import React from \"react\";\r\n\r\nconst status = (number, upper = false) => {\r\n    let st = 'pendiente';\r\n    switch (number) {\r\n        case 1: st = 'pendiente'; break;\r\n        case 2: st = 'cobrado'; break;\r\n        case -1: st =  'mora'; break;\r\n        default: st = 'pendiente'; break;\r\n    }\r\n    if (upper) st = st.toUpperCase();\r\n    return st;\r\n};\r\n\r\nconst elStatus = number => {\r\n    const st = status(number);\r\n  return (<div className={`st ${st}`}>{st.toUpperCase()}</div>);\r\n};\r\n\r\nconst getPin = (st, cobro = 'diario') => {\r\n    return `/img/pin/${cobro.toLowerCase()}/${status(st)}.png`;\r\n};\r\n\r\n\r\nexport default {\r\n    status, elStatus, getPin\r\n}\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WithMapKey from \"../../maps/WithMapKey\";\r\nimport {InfoWindow, Map, Marker} from \"google-maps-react\";\r\nimport PayModel from \"../../../models/PayModel\";\r\nimport BtnsPayOptions from \"../_partials/BtnsPayOptions\";\r\n\r\nconst PayMap = ({payments, google, height, zoom, exec}) => {\r\n\r\n    const [state, setState] = useState({\r\n        showingInfoWindow: false,\r\n        activeMarker: {},\r\n        selectedPlace: {},\r\n        selectedPay: null\r\n    });\r\n\r\n    const onMarkerClick = (props, marker, pay) =>\r\n        setState({\r\n            ...state,\r\n            selectedPlace: props,\r\n            activeMarker: marker,\r\n            showingInfoWindow: true,\r\n            selectedPay: pay});\r\n\r\n    const onMapClicked = (props) => {\r\n        if (state.showingInfoWindow) {\r\n            setState({\r\n                ...state,\r\n                showingInfoWindow: false,\r\n                activeMarker: null,\r\n                selectedPay: null\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    const displayMarkers = () => {\r\n        return payments.map((store, index) => {\r\n            return <Marker key={store.id} id={store.id}\r\n                           title={`${store.address} ${store.ref_detail ? ' | '+store.ref_detail: ''}`}\r\n                           name={store.client_name}\r\n                           position={{\r\n                            lat: store.lat,\r\n                            lng: store.lon\r\n                           }}\r\n                           icon={{\r\n                               url: PayModel.getPin(store.status, store.cobro),\r\n                               anchor: new google.maps.Point(38,38),\r\n                               scaledSize: new google.maps.Size(42,42)\r\n                           }}\r\n                           onClick={(m,e) => onMarkerClick(m, e, store) } />\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div className={'content-google-map'}>\r\n            {payments && payments.length >= 1 &&\r\n                <Map google={google}  onClick={ (p) => onMapClicked(p) }\r\n                     style={{width: '100%', height: height, minHeight: height, position: 'relative'}}\r\n                     className={'google-map-min'}\r\n                     initialCenter={{ lat: payments[0].lat+3, lng: payments[0].lon+12}}\r\n                     zoom={zoom}>\r\n                    {displayMarkers()}\r\n                    <InfoWindow\r\n                        marker={state.activeMarker}\r\n                        visible={state.showingInfoWindow}>\r\n                        <div>\r\n                            {\r\n                                state.selectedPay &&\r\n                                <>\r\n                                    <h4>{state.selectedPay.client_name} {state.selectedPay.client_surname}</h4>\r\n                                    <p>{state.selectedPay.address}</p>\r\n                                    <small>{PayModel.elStatus(state.selectedPay.status)}</small>\r\n                                    {/*ver crédito*/}\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </InfoWindow>\r\n                </Map>\r\n            }\r\n\r\n            {/*BUTTONS*/\r\n                state.selectedPay &&\r\n                <div className={'map-btn'}>\r\n                    <BtnsPayOptions exec={exec} pay={state.selectedPay}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nPayMap.propTypes = {\r\n    payments: PropTypes.array,\r\n    zoom: PropTypes.number,\r\n    height: PropTypes.string,\r\n    exec: PropTypes.func\r\n};\r\n\r\nPayMap.defaultProps = {\r\n    height: '100%',\r\n    zoom: 12\r\n};\r\n\r\nexport default WithMapKey(PayMap);\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nimport PayItemCard from \"./PayItemCard\";\r\nimport DlgCancelPayment from \"../_dialogs/DlgCancelPayment\";\r\nimport DlgPayOrMora from \"../_dialogs/DlgPayOrMora\";\r\nimport PayMap from \"./../_map/PayMap\";\r\n\r\nconst PayCardOrMap = ({data, title, maps, grid}) => {\r\n    const [dlgCancel, setDlgCancel] = useState(false);\r\n    const [dlgPayMora, setDlgPayMora] = useState(false);\r\n    const [isMora, setIsMora] = useState(false);\r\n    const [selectPay, setSelectPay] = useState(null);\r\n    const [localGrid, setLocalGrid] = useState({\r\n       xs: 12, sm: 12, md: 12, lg: 6\r\n    });\r\n\r\n    const onExecute = (o, payload) => {\r\n        if (!payload.id || !o) {\r\n            return;\r\n        }\r\n        setSelectPay(payload.id);\r\n        switch (o) {\r\n            case 'cancel':\r\n                setDlgCancel(true);\r\n                //data[index].status = 1;\r\n                break;\r\n            case 'mora':\r\n                setIsMora(true);\r\n                setDlgPayMora(true);\r\n                //data[index].status = -1;\r\n                break;\r\n            case 'pay':\r\n                setIsMora(false);\r\n                setDlgPayMora(true);\r\n                //data[index].status = 2;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const success = (paymentId, status) => {\r\n        if (!paymentId || !status) return;\r\n        let index = data.findIndex(d => d.id === paymentId);\r\n        if (index >= 0) {\r\n            data[index].status = status;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const checkGrid = () => {\r\n            if (grid.lg === 12 || grid.md === 12) {\r\n                setLocalGrid({...grid, lg: 3});\r\n            }\r\n            if (grid.lg === 6 || grid.md === 6) {\r\n                setLocalGrid({...grid, lg: 6, md: 12});\r\n            }\r\n        };\r\n        checkGrid();\r\n    }, [grid]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                data && data.length > 0\r\n                    &&\r\n                    <>\r\n                        <h4>{title.toUpperCase()}</h4>\r\n                        {/*------------ | Render Cards | ------------*/}\r\n                        <Grid container spacing={2}>\r\n                            {/*TARJETAS*/\r\n                                !maps && data && data.map(p => (\r\n                                    <Grid item xs={localGrid.xs} sm={localGrid.sm} md={localGrid.md} lg={localGrid.lg} key={p.id}>\r\n                                        <PayItemCard pay={p} exec={(o, p) => onExecute(o, p)}/>\r\n                                    </Grid>\r\n                                ))\r\n                            }\r\n                            {/*MAPAS*/\r\n                                maps && data &&\r\n                                <Grid item xs={12}>\r\n                                    <PayMap payments={data} height={'380px'} zoom={11} exec={(o, p) => onExecute(o, p)} />\r\n                                </Grid>\r\n                            }\r\n                        </Grid>\r\n\r\n                        {/*------------ | Diálogos | ------------*/}\r\n                        <DlgCancelPayment open={dlgCancel}\r\n                                          selectPay={selectPay}\r\n                                          success={(p, s) => success(p, s)}\r\n                                          onClose={() => setDlgCancel(false)} />\r\n\r\n                        <DlgPayOrMora selectPay={selectPay}\r\n                                      mora={isMora}\r\n                                      open={dlgPayMora}\r\n                                      success={(p, s) => success(p, s)}\r\n                                      onClose={() => setDlgPayMora(false)} />\r\n                    </>\r\n\r\n            }\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nPayCardOrMap.propTypes = {\r\n    maps: PropTypes.bool.isRequired\r\n};\r\n\r\nPayCardOrMap.defaultProps = {\r\n    maps: false\r\n};\r\n\r\nexport default PayCardOrMap;\r\n","import React, {useRef, useState, Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Master from \"../Master\";\r\nimport {\r\n    Container, Paper, Grid, Button, Icon, IconButton,\r\n} from \"@material-ui/core\";\r\nimport {Settings} from '@material-ui/icons';\r\nimport WithLoader from \"../_partials/hoc/WithLoader\";\r\nimport SelectZone from \"../zone/_partials/SelectZone\";\r\nimport SelectCobro from \"./_partials/SelectCobro\";\r\nimport SelectDate from \"./_partials/SelectDate\";\r\nimport Axios from \"axios\";\r\nimport {toast} from \"react-toastify\";\r\nimport {processErrors} from \"../../utils/utils\";\r\nimport PayCardOrMap from \"./_partials/PayCardOrMap\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst INITIAL = {\r\n    payments: [],\r\n    loader: false,\r\n    map: (localStorage.getItem('map') === 'true'),\r\n    grid: {md: 6, sm: 12, xs: 12},\r\n    filters: {\r\n        date: null,\r\n        zone: null,\r\n        cobro: null\r\n    }\r\n};\r\n\r\nclass PaymentList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = INITIAL\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPays();\r\n    }\r\n\r\n    getPays = (filters = INITIAL.filters) => {\r\n        let url = '/payment?q=';\r\n\r\n        if (filters.date) {\r\n            url += `&date=${filters.date}`;\r\n        }\r\n        if (filters.zone) {\r\n            url += `&zone=${filters.zone}`;\r\n        }\r\n        if (filters.cobro) {\r\n            url += `&only=${filters.cobro}`;\r\n        }\r\n        this.setState({...this.state, filters: filters, loader: true});\r\n        Axios.get(url).then(res => {\r\n            if (res.ok) {\r\n\r\n                let i = 0;\r\n                let grid = INITIAL.grid;\r\n                if (res.data.diario && res.data.diario.length > 0) i++;\r\n                if (res.data.semanal && res.data.semanal.length >0 ) i++;\r\n                if (res.data.quincenal && res.data.quincenal.length >0) i++;\r\n                if (res.data.mensual && res.data.mensual.length >0) i++;\r\n\r\n                if ( (i === 1 || i === 2) && this.state.map ) {\r\n                    grid = {\r\n                        xs: 12,\r\n                        sm: 12,\r\n                        md: 12,\r\n                        lg: 12\r\n                    }\r\n                }\r\n                if (i===1 && !this.state.map) {\r\n                    grid = {\r\n                        xs: 12,\r\n                        sm: 12,\r\n                        md: 12,\r\n                        lg: 12\r\n                    }\r\n                }\r\n\r\n                this.setState({...this.state, payments: res.data, grid: grid});\r\n            }\r\n        }).catch(err => toast.error(processErrors(err)))\r\n            .finally(() => this.setState({...this.state, loader: false}));\r\n\r\n    };\r\n\r\n    onConfig = type => {\r\n        switch (type) {\r\n            case 'map':\r\n                this.setState({...this.state, map: true});\r\n                localStorage.setItem('map', 'true');\r\n                break;\r\n            case 'noMap':\r\n                this.setState({...this.state, map: false});\r\n                localStorage.setItem('map', 'false');\r\n                break;\r\n            case 'x1':\r\n                this.setState({...this.state, grid: {...this.state.grid, md:12}});\r\n                break;\r\n            case 'x4':\r\n                this.setState({...this.state, grid: {...this.state.grid, md:6}});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onFilters = filters => {\r\n        this.getPays(filters);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Master>\r\n                <Container component={Paper}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <PayFilters initFilters={this.state.filters}\r\n                                        onFilter={(f) => this.onFilters(f)}>\r\n                                <PaymentListConfig map={this.state.map} onChange={(e) => this.onConfig(e)}/>\r\n                            </PayFilters>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <WithLoader loader={this.state.loader} elevation={0}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={this.state.grid.xs} sm={this.state.grid.sm} md={this.state.grid.md}>\r\n                                <PayCardOrMap title={'Diario'}\r\n                                              grid={this.state.grid}\r\n                                              maps={this.state.map}\r\n                                              data={this.state.payments.diario}/>\r\n                            </Grid>\r\n                            <Grid item xs={this.state.grid.xs} sm={this.state.grid.sm} md={this.state.grid.md}>\r\n                                <PayCardOrMap title={'Semanal'}\r\n                                              grid={this.state.grid}\r\n                                              maps={this.state.map}\r\n                                              data={this.state.payments.semanal}/>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={this.state.grid.xs} sm={this.state.grid.sm} md={this.state.grid.md}>\r\n                                <PayCardOrMap title={'Quincenal'}\r\n                                              maps={this.state.map}\r\n                                              grid={this.state.grid}\r\n                                              data={this.state.payments.quincenal}/>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={this.state.grid.xs} sm={this.state.grid.sm} md={this.state.grid.md}>\r\n                                <PayCardOrMap title={'Mensual'}\r\n                                              maps={this.state.map}\r\n                                              grid={this.state.grid}\r\n                                              data={this.state.payments.mensual}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </WithLoader>\r\n                </Container>\r\n            </Master>\r\n        );\r\n    }\r\n}\r\n\r\nconst PaymentListConfig = ({map, onChange}) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (type = '') => {\r\n        onChange(type);\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                <Settings />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {\r\n                    !map ? <MenuItem onClick={() => handleClose('map') }>Vista de Mapa</MenuItem>\r\n                        : <MenuItem onClick={() => handleClose('noMap') }>Vista de Pagos</MenuItem>\r\n                }\r\n\r\n                <MenuItem onClick={() => handleClose('x1')}>Cuadricula x1</MenuItem>\r\n                <MenuItem onClick={() => handleClose('x4')}>Cuadricula x4</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst PayFilters = ({onFilter, onClear, initFilters, children}) => {\r\n    const selectZRef = useRef();\r\n    const selectCRef = useRef();\r\n    const selectDRef = useRef();\r\n\r\n    const [filters, setFilters] = useState(initFilters);\r\n\r\n    const clearFilters = () => {\r\n        setFilters({date: null, zone: null, cobro: null});\r\n        selectZRef.current.reset();\r\n        selectCRef.current.reset();\r\n        selectDRef.current.reset();\r\n    };\r\n\r\n    return (\r\n      <Grid container spacing={1}>\r\n          <Grid item xs={6} md={3}>\r\n              <SelectZone ref={selectZRef}\r\n                          onChange={(z) => setFilters({...filters, zone: z})} />\r\n          </Grid>\r\n          <Grid item xs={6} md={3}>\r\n              <SelectCobro ref={selectCRef}\r\n                           onChange={(c) => setFilters({...filters, cobro: c})} />\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <SelectDate label={'Fecha recaudación'}\r\n                        initialDate={filters.date}\r\n                        ref={selectDRef}\r\n                        onChange={(d) => setFilters({...filters, date: d})}/>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={3} className={'d-flex'}>\r\n              {/*------------ | Botones | ------------*/}\r\n              <Button variant={'text'} color={'primary'} fullWidth onClick={() => onFilter(filters)}>\r\n                  <Icon>filter_list</Icon> &nbsp; Filtrar\r\n              </Button>\r\n              <IconButton onClick={() =>clearFilters()}>\r\n                  <Icon>clear_two_tone</Icon>\r\n              </IconButton>\r\n              {children}\r\n          </Grid>\r\n      </Grid>\r\n    );\r\n};\r\n\r\nPayFilters.propTypes = {\r\n    onFilter: PropTypes.func.isRequired,\r\n    onClear: PropTypes.func\r\n};\r\nPayFilters.defaultProps = {\r\n    filters: {\r\n        date: null,\r\n        zone: null,\r\n        cobro: null\r\n    }\r\n};\r\n\r\nexport default PaymentList;\r\n\r\n\r\n/*\r\nconst PaymentList = () => {\r\n    const [payments, setPayments] = useState([]);\r\n    const [loader, setLoader] = useState(false);\r\n    const [filters, setFilters] = useState({date: null, zone: null, cobro: null});\r\n    const [map, setMap] = useState(Boolean(localStorage.getItem('map')));\r\n    const [grid, setGrid] = useState({md: 6, sm: 12, xs: 12});\r\n\r\n    useEffect(() => {\r\n        const getPays = () => {\r\n            let url = '/payment?q=';\r\n            if (filters.date) {\r\n                url += `&date=${filters.date}`;\r\n            }\r\n            if (filters.zone) {\r\n                url += `&zone=${filters.zone}`;\r\n            }\r\n            if (filters.cobro) {\r\n                url += `&only=${filters.cobro}`;\r\n            }\r\n            setLoader(true);\r\n            Axios.get(url).then(res => {\r\n                if (res.ok) {\r\n                    setPayments(res.data);\r\n                }\r\n            }).catch(err => toast.error(processErrors(err)))\r\n                .finally(() => setLoader(false));\r\n\r\n        };\r\n        getPays();\r\n    }, [filters]);\r\n\r\n    const onConfig = type => {\r\n        switch (type) {\r\n            case 'map':\r\n                setMap(true);\r\n                localStorage.setItem('map', 'true');\r\n                break;\r\n            case 'noMap':\r\n                setMap(false);\r\n                localStorage.setItem('map', 'false');\r\n                break;\r\n            case 'x1':\r\n                setGrid({\r\n                    ...grid,\r\n                    md: 12\r\n                });\r\n                break;\r\n            case 'x4':\r\n                setGrid({\r\n                    ...grid,\r\n                    md: 6\r\n                });\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Master>\r\n            <Container component={Paper}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <PayFilters initFilters={filters} onFilter={(f) => setFilters(f)}>\r\n                            <PaymentListConfig map={map} onChange={(e) =>onConfig(e)}/>\r\n                        </PayFilters>\r\n                    </Grid>\r\n                </Grid>\r\n                <WithLoader loader={loader} elevation={0}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={grid.xs} sm={grid.sm} md={grid.md}>\r\n                            <PayCardOrMap title={'Diario'}\r\n                                          maps={map} data={payments.diario}/>\r\n                        </Grid>\r\n                        <Grid item xs={grid.xs} sm={grid.sm} md={grid.md}>\r\n                            <PayCardOrMap title={'Semanal'}\r\n                                          maps={map} data={payments.semanal}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={grid.xs} sm={grid.sm} md={grid.md}>\r\n                            <PayCardOrMap title={'Quincenal'}\r\n                                          maps={map} data={payments.quincenal}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={grid.xs} sm={grid.sm} md={grid.md}>\r\n                            <PayCardOrMap title={'Mensual'}\r\n                                          maps={map}\r\n                                          data={payments.mensual}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </WithLoader>\r\n            </Container>\r\n        </Master>\r\n    );\r\n};\r\n*/\r\n","import ListZone from \"../components/zone/ListZone\";\r\nimport {\r\n    CLIENT_ADD,\r\n    CLIENT_EDIT,\r\n    CLIENT_LIST,\r\n    CREDIT_BY_CLIENT,\r\n    CREDIT_LIST,\r\n    CREDIT_SHOW,\r\n    EMPLOY_ADD,\r\n    EMPLOY_EDIT,\r\n    EMPLOY_LIST,\r\n    EXPENSE_ADD,\r\n    EXPENSE_LIST,\r\n    EXPENSE_SHOW,\r\n    HOME,\r\n    LOGIN,\r\n    NOT_CONNECTED,\r\n    PAYMENT_LIST,\r\n    PAYROLL_ADD,\r\n    PAYROLL_ADD_USER,\r\n    PAYROLL_LIST,\r\n    PAYROLL_SHOW,\r\n    USER_EDIT,\r\n    ZONE_ADD,\r\n    ZONE_EDIT,\r\n    ZONE_LIST\r\n} from \"./urls\";\r\nimport Login from \"../components/auth/Login\";\r\nimport NotConnected from \"../components/errors/NotConnected\";\r\nimport EditEmploy from \"../components/employ/EditEmploy\";\r\nimport RegisterEmploy from \"../components/employ/RegisterEmploy\";\r\nimport ListEmploy from \"../components/employ/ListEmploy\";\r\nimport ShowExpense from \"../components/expenses/ShowExpense\";\r\nimport RegisterExpense from \"../components/expenses/RegisterExpense\";\r\nimport ListExpenses from \"../components/expenses/ListExpenses\";\r\nimport UpdateZone from \"../components/zone/UpdateZone\";\r\nimport RegisterZone from \"../components/zone/RegisterZone\";\r\nimport RegisterPayRoll from \"../components/payroll/RegisterPayRoll\";\r\nimport RegisterPayRollUser from \"../components/payroll/RegisterPayRollUser\";\r\nimport ShowPayRoll from \"../components/payroll/ShowPayRoll\";\r\nimport ListPayRoll from \"../components/payroll/ListPayRoll\";\r\nimport EditClient from \"../components/client/EditClient\";\r\nimport ListClient from \"../components/client/ListClient\";\r\nimport RegisterClient from \"../components/client/RegisterClient\";\r\nimport ListCredit from \"../components/credit/ListCredit\";\r\nimport ShowCredit from \"../components/credit/ShowCredit\";\r\nimport EditAuth from \"../components/auth/EditAuth\";\r\nimport HistoryClientCredit from \"../components/credit/HistoryClientCredit\";\r\nimport PaymentList from \"../components/payments/PaymentList\";\r\n\r\nexport const routes = [\r\n    {\r\n        path: HOME,\r\n        name: 'Home',\r\n        exact: true,\r\n        //private: false,\r\n        component: Login\r\n    },\r\n    {\r\n        path: LOGIN,\r\n        name: 'Login',\r\n        exact: true,\r\n        component: Login\r\n    },\r\n    {\r\n        path: USER_EDIT,\r\n        name: 'userEdit',\r\n        exact: false,\r\n        component: EditAuth\r\n    },\r\n    {\r\n        path: NOT_CONNECTED,\r\n        name: 'NOT_CONNECTED',\r\n        component: NotConnected\r\n    },\r\n    /* Employ */\r\n    {\r\n        name: 'EmployEdit',\r\n        path: EMPLOY_EDIT,\r\n        exact: true,\r\n        private: true,\r\n        component: EditEmploy\r\n    },\r\n    {\r\n        name: 'EmployAdd',\r\n        path: EMPLOY_ADD,\r\n        private: true,\r\n        component: RegisterEmploy\r\n    },\r\n    {\r\n        name: 'EmployList',\r\n        path: EMPLOY_LIST,\r\n        private: true,\r\n        component: ListEmploy\r\n    },\r\n    /*Expense*/\r\n    {\r\n        name: 'ExpenseShow',\r\n        path: EXPENSE_SHOW,\r\n        exact: true,\r\n        private: true,\r\n        component: ShowExpense\r\n    },\r\n    {\r\n        name: 'ExpenseAdd',\r\n        path: EXPENSE_ADD,\r\n        private: true,\r\n        component: RegisterExpense\r\n    },\r\n    {\r\n        name: 'ExpenseList',\r\n        path: EXPENSE_LIST,\r\n        private: true,\r\n        component: ListExpenses\r\n    },\r\n    /*Zones*/\r\n    {\r\n        name: 'ZoneEdit',\r\n        path: ZONE_EDIT,\r\n        exact: true,\r\n        private: true,\r\n        component: UpdateZone\r\n    },\r\n    {\r\n        name: 'ZoneAdd',\r\n        path: ZONE_ADD,\r\n        exact: true,\r\n        private: true,\r\n        component: RegisterZone\r\n    },\r\n    {\r\n        name: 'ZoneList',\r\n        path: ZONE_LIST,\r\n        private: true,\r\n        component: ListZone\r\n    },\r\n    /*PayRolls*/\r\n    {\r\n        name: 'PayrollAdd',\r\n        path: PAYROLL_ADD,\r\n        exact: true,\r\n        private: true,\r\n        component: RegisterPayRoll\r\n    },\r\n    {\r\n        name: 'PayrollAddUser',\r\n        path: PAYROLL_ADD_USER,\r\n        exact: true,\r\n        private: true,\r\n        component: RegisterPayRollUser\r\n    },\r\n    {\r\n        name: 'PayrollShow',\r\n        path: PAYROLL_SHOW,\r\n        exact: true,\r\n        private: true,\r\n        component: ShowPayRoll\r\n    },\r\n    {\r\n        name: 'PayrollList',\r\n        path: PAYROLL_LIST,\r\n        exact: true,\r\n        private: true,\r\n        component: ListPayRoll\r\n    },\r\n    /*Client*/\r\n    {\r\n        name: 'ClientEdit',\r\n        path: CLIENT_EDIT,\r\n        exact: true,\r\n        private: true,\r\n        component: EditClient\r\n    },\r\n    {\r\n        name: 'ClientList',\r\n        path: CLIENT_LIST,\r\n        private: true,\r\n        component: ListClient\r\n    },\r\n    {\r\n        name: 'ClientAdd',\r\n        path: CLIENT_ADD,\r\n        private: true,\r\n        component: RegisterClient\r\n    },\r\n    /*Credit*!*/\r\n    {\r\n        name: 'CreditList',\r\n        path: CREDIT_LIST,\r\n        exact: true,\r\n        private: true,\r\n        component: ListCredit\r\n    },\r\n    {\r\n        name: 'CreditShow',\r\n        path: CREDIT_SHOW,\r\n        private: true,\r\n        component: ShowCredit\r\n    },\r\n    {\r\n        name: 'CreditClientHistory',\r\n        path: CREDIT_BY_CLIENT,\r\n        private: true,\r\n        component: HistoryClientCredit\r\n    },\r\n    /*PAYMENTS*/\r\n    {\r\n        name: 'PaymentList',\r\n        path: PAYMENT_LIST,\r\n        private: true,\r\n        component: PaymentList\r\n    }\r\n];\r\n","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nimport userService from '../../config/user.service';\r\n\r\nconst Protected = ({component: Component,...rest}) => {\r\n\r\n    if (userService.getToken()) {\r\n        return <Route component={Component}  {...rest}/>\r\n    }\r\n    //return <Route component={Component}  {...rest}/>\r\n    return <Redirect to=\"/login\"/>\r\n\r\n};\r\n\r\nexport {Protected};","import Axios from \"axios\";\r\nimport userService from '../../config/user.service'\r\nimport config from \"../../config/config\";\r\nimport {NOT_CONNECTED} from \"../../config/urls\";\r\n\r\n\r\nAxios.defaults.baseURL = config.api;\r\n\r\nAxios.interceptors.response.use(function (response) {\r\n\r\n    if(response.data.data!==null){\r\n\r\n        return response.data;\r\n    } else {\r\n\r\n        return  response;\r\n    }\r\n}, function (error) {\r\n\r\n\r\n    if (!error.status && !error.response) {\r\n        console.log('Sin conexión');\r\n        window.location.href = `${NOT_CONNECTED}`;\r\n        return;\r\n    }\r\n\r\n    const { response: { status }} = error;\r\n    if(status === 401) {\r\n        if(userService.getToken()) {\r\n            userService.clearSession();\r\n        }\r\n    }\r\n    return Promise.reject(error);\r\n});\r\n\r\nAxios.interceptors.request.use(function(config) {\r\n    const token = userService.getToken();\r\n    if ( token !== null ) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n}, function(err) {\r\n    return Promise.reject(err);\r\n});\r\n","import React, {useEffect} from 'react';\nimport {Provider} from \"react-redux\";\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport Axios from \"axios\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\n\nimport store from \"./store/store\";\nimport userService from './config/user.service';\nimport {ToastContainer} from \"react-toastify\";\n\nimport {theme} from './config/config';\nimport {routes} from \"./config/routes\";\nimport {NOT_CONNECTED} from \"./config/urls\";\nimport {addUser} from \"./store/actionsCreators\";\nimport {Protected} from \"./utils/auth\";\n\nimport './styles/app.scss';\nimport './utils/auth';\n\nimport 'moment-timezone';\nimport 'moment/locale/es';\n\nfunction App() {\n\n\n    useEffect(() => {\n        if(userService.getToken() && !window.location.pathname.includes(NOT_CONNECTED)) {\n            Axios.get('/user').then(res => {\n                store.dispatch(addUser(res.data));\n            });\n        }\n    }, []);\n\n    return (\n        <>\n            <Provider store={store}>\n                <MuiPickersUtilsProvider utils={MomentUtils} locale={'es'}>\n                <ToastContainer position=\"bottom-right\" closeButton={false} hideProgressBar={true}/>\n                <ThemeProvider theme={theme}>\n\n                    <Router>\n                        <Switch>\n                            {\n                                routes.map(route => (\n                                    !route.private ?\n                                    <Route key={route.name} path={route.path}\n                                       routeDef={route} routes={routes}\n                                       component={route.component} exact={!!route.exact }/> :\n                                    <Protected key={route.name} path={route.path}\n                                                routeDef={route} routes={routes}\n                                                component={route.component} exact={!!route.exact }/>\n                                ))\n                            }\n                        </Switch>\n                    </Router>\n                </ThemeProvider >\n                </MuiPickersUtilsProvider>\n            </Provider>\n        </>\n    );\n}\n\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}